digraph "llvm::ClonedCodeInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::ClonedCodeInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This struct can be used to capture information about code being cloned, while it is being cloned."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigVMap" ,fontname="Helvetica"];
  Node2 [label="llvm::DenseMap\< const\l llvm::Value *, const\l llvm::Value * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::DenseMapBase\l\< DenseMap\< const llvm\l::Value *, const llvm\l::Value *, DenseMapInfo\l\< const llvm::Value * \>,\l llvm::detail::DenseMapPair\l\< const llvm::Value *, const\l llvm::Value * \> \>, const llvm\l::Value *, const llvm::Value *,\l DenseMapInfo\< const llvm::Value\l * \>, llvm::detail::DenseMapPair\l\< const llvm::Value *, const llvm\l::Value * \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node5 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< const llvm\l::Value *, const llvm\l::Value *, DenseMapInfo\l\< const llvm::Value * \>,\l llvm::detail::DenseMapPair\l\< const llvm::Value *, const\l llvm::Value * \> \>, const llvm\l::Value *, const llvm::Value *,\l DenseMapInfo\< const llvm::Value\l * \>, llvm::detail::DenseMapPair\l\< const llvm::Value *, const llvm\l::Value * \> \>" ,fontname="Helvetica"];
  Node5 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::Value\l *, const llvm::Value * \>" ,fontname="Helvetica"];
  Node6 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::DenseMapBase\l\< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node4 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>" ,fontname="Helvetica"];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainsMemProfMetadata\nContainsCalls\nContainsDynamicAllocas" ,fontname="Helvetica"];
  Node8 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OperandBundleCallSites" ,fontname="Helvetica"];
  Node9 [label="vector\< llvm::WeakTrackingVH \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

digraph "llvm::SGPRSpillBuilder"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::SGPRSpillBuilder",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MF" ,fontname="Helvetica"];
  Node2 [label="llvm::MachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineFunction.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DebugValueSubstitutions" ,fontname="Helvetica"];
  Node3 [label="llvm::SmallVector\<\l llvm::MachineFunction\l::DebugSubstitution, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::SmallVectorImpl\l\< llvm::MachineFunction\l::DebugSubstitution \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MachineFunction\l::DebugSubstitution \>" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node6 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorStorage\l\< llvm::MachineFunction\l::DebugSubstitution, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MachineFunction\l::DebugSubstitution, N \>" ,fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node7 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node9 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::MachineFunction\l::DebugSubstitution, 8 \>" ,fontname="Helvetica"];
  Node9 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node7 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node8 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node11 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DebugPHIPositions" ,fontname="Helvetica"];
  Node11 [label="llvm::DenseMap\< unsigned,\l llvm::MachineFunction\l::DebugPHIRegallocPos \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::DenseMapBase\l\< DenseMap\< unsigned,\l llvm::MachineFunction\l::DebugPHIRegallocPos,\l DenseMapInfo\< unsigned\l \>, llvm::detail::DenseMapPair\l\< unsigned, llvm::MachineFunction\l::DebugPHIRegallocPos \> \>, unsigned,\l llvm::MachineFunction::DebugPHIRegallocPos,\l DenseMapInfo\< unsigned \>, llvm::detail\l::DenseMapPair\< unsigned, llvm::MachineFunction\l::DebugPHIRegallocPos \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node14 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< unsigned,\l llvm::MachineFunction\l::DebugPHIRegallocPos,\l DenseMapInfo\< unsigned\l \>, llvm::detail::DenseMapPair\l\< unsigned, llvm::MachineFunction\l::DebugPHIRegallocPos \> \>, unsigned,\l llvm::MachineFunction::DebugPHIRegallocPos,\l DenseMapInfo\< unsigned \>, llvm::detail\l::DenseMapPair\< unsigned, llvm::MachineFunction\l::DebugPHIRegallocPos \> \>" ,fontname="Helvetica"];
  Node14 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, llvm::Machine\lFunction::DebugPHIRegallocPos \>" ,fontname="Helvetica"];
  Node15 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::DenseMapBase\l\< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>" ,fontname="Helvetica"];
  Node17 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UseDebugInstrRef" ,fontname="Helvetica"];
  Node17 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DebugOperandMemNumber" ,fontname="Helvetica"];
  Node18 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DebugInstrNumberingCount" ,fontname="Helvetica"];
  Node19 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VariableDbgInfos" ,fontname="Helvetica"];
  Node20 [label="llvm::SmallVector\<\l VariableDbgInfo, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::SmallVectorImpl\l\< VariableDbgInfo \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node5 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo \>" ,fontname="Helvetica"];
  Node22 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::SmallVectorStorage\l\< VariableDbgInfo, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node7 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node8 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, N \>" ,fontname="Helvetica"];
  Node9 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VariableDbgInfo, 4 \>" ,fontname="Helvetica"];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MI" ,fontname="Helvetica"];
  Node23 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::MachineInstrBundle\lIteratorHelper\< false \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper_3_01false_01_4.html",tooltip=" "];
  Node25 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr \>" ,fontname="Helvetica"];
  Node25 [label="llvm::MachineInstrBundle\lIterator\< Ty, IsReverse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip="MachineBasicBlock iterator that automatically skips over MIs that are inside bundles (i...."];
  Node24 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MFI" ,fontname="Helvetica"];
  Node26 [label="llvm::SIMachineFunctionInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SIMachineFunctionInfo.html",tooltip="This class keeps track of the SPI_SP_INPUT_ADDR config register, which tells the hardware which inter..."];
  Node27 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::AMDGPUMachineFunction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AMDGPUMachineFunction.html",tooltip=" "];
  Node28 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::MachineFunctionInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineFunctionInfo.html",tooltip="MachineFunctionInfo - This class can be derived from and used by targets to hold private target-speci..."];
  Node29 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExplicitKernArgSize" ,fontname="Helvetica"];
  Node29 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node30 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GDSSize\nStaticLDSSize\nLDSSize\nStaticGDSSize" ,fontname="Helvetica"];
  Node30 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node17 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" WaveLimiter\nMemoryBound\nIsEntryFunction\nNoSignedZerosFPMath\nIsModuleEntryFunction" ,fontname="Helvetica"];
  Node31 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxKernArgAlign\nDynLDSAlign" ,fontname="Helvetica"];
  Node31 [label="llvm::Align",height=0.2,width=0.4,color="black",URL="$structllvm_1_1Align.html",tooltip="This struct is a compact representation of a valid (non-zero power of two) alignment."];
  Node32 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RS" ,fontname="Helvetica"];
  Node32 [label="llvm::RegScavenger",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegScavenger.html",tooltip=" "];
  Node33 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TmpVGPRIndex\nIndex" ,fontname="Helvetica"];
  Node33 [label="int",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsWave32\nIsKill\nTmpVGPRLive" ,fontname="Helvetica"];
  Node34 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MBB" ,fontname="Helvetica"];
  Node34 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::ilist_node_with\l_parent\< MachineBasicBlock,\l MachineFunction \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node36 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="llvm::ilist_node\< Machine\lBasicBlock, Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< MachineBasicBlock,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node38 -> Node37 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< MachineBasic\lBlock, Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node39 -> Node37 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< MachineBasicBlock,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node39 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node40 -> Node39 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node41 -> Node36 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineBasicBlock,\l Options... \>" ,fontname="Helvetica"];
  Node41 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node42 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node43 -> Node42 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< T, Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node39 -> Node42 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node44 -> Node35 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineBasicBlock,\l MachineFunction \>" ,fontname="Helvetica"];
  Node44 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node45 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node46 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node47 -> Node46 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type ::\lnode_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node39 -> Node46 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node41 -> Node45 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI\nDL\nTII" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NotOpc\nNumSubRegs\nEltSize\nMovOpc" ,fontname="Helvetica"];
  Node48 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SplitParts" ,fontname="Helvetica"];
  Node48 [label="llvm::ArrayRef\< int16_t \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node49 -> Node48 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< int16_t \>" ,fontname="Helvetica"];
  Node49 [label="llvm::ArrayRef\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip="ArrayRef - Represent a constant reference to an array (0 or more elements consecutively in memory),..."];
  Node50 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExecReg\nSavedExecReg\nSuperReg\nTmpVGPR" ,fontname="Helvetica"];
  Node50 [label="llvm::Register",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Register.html",tooltip="Wrapper class representing virtual and physical registers."];
}

digraph "llvm::CGSCCUpdateResult"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::CGSCCUpdateResult",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Support structure for SCC passes to communicate updates the call graph back to the CGSCC pass manager..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlinedInternalEdges" ,fontname="Helvetica"];
  Node2 [label="llvm::SmallDenseSet\l\< std::pair\< llvm::LazyCall\lGraph::Node *, llvm::LazyCallGraph\l::SCC * \>, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseSet.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::detail::DenseSetImpl\l\< std::pair\< llvm::LazyCallGraph\l::Node *, llvm::LazyCallGraph\l::SCC * \>, SmallDenseMap\< std\l::pair\< llvm::LazyCallGraph::Node\l *, llvm::LazyCallGraph::SCC * \>,\l detail::DenseSetEmpty, InlineBuckets,\l DenseMapInfo\< std::pair\< llvm::LazyCallGraph\l::Node *, llvm::LazyCallGraph::SCC * \> \>,\l detail::DenseSetPair\< std::pair\< llvm::LazyCallGraph\l::Node *, llvm::LazyCallGraph::SCC * \> \> \>, DenseMapInfo\l\< std::pair\< llvm::LazyCallGraph::Node *, llvm::LazyCallGraph::SCC * \> \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< llvm::\lLazyCallGraph::Node\l *, llvm::LazyCallGraph\l::SCC * \>, SmallDenseMap\l\< std::pair\< llvm::LazyCallGraph\l::Node *, llvm::LazyCallGraph\l::SCC * \>, detail::DenseSetEmpty,\l InlineBuckets, DenseMapInfo\< std\l::pair\< llvm::LazyCallGraph::Node\l *, llvm::LazyCallGraph::SCC * \> \>,\l detail::DenseSetPair\< std::pair\< llvm\l::LazyCallGraph::Node *, llvm::LazyCallGraph\l::SCC * \> \> \>, DenseMapInfo\< std::pair\< llvm\l::LazyCallGraph::Node *, llvm::LazyCallGraph::SCC * \> \> \>" ,fontname="Helvetica"];
  Node4 [label="llvm::detail::DenseSetImpl\l\< ValueT, MapTy, ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip="Base class for DenseSet and DenseSmallSet."];
  Node5 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< llvm::\lLazyCallGraph::Node\l *, llvm::LazyCallGraph\l::SCC * \>, 4 \>" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallDenseSet\l\< ValueT, InlineBuckets,\l ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseSet.html",tooltip="Implements a dense probed hash-table based set with some number of buckets stored inline."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::detail::DenseSetImpl\l\< ValueT, SmallDenseMap\l\< ValueT, detail::DenseSetEmpty,\l 4, DenseMapInfo\< ValueT \>, detail\l::DenseSetPair\< ValueT \> \>, DenseMapInfo\l\< ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip=" "];
  Node4 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ValueT, SmallDenseMap\l\< ValueT, detail::DenseSetEmpty,\l 4, DenseMapInfo\< ValueT \>,\l detail::DenseSetPair\< ValueT\l \> \>, DenseMapInfo\< ValueT \> \>" ,fontname="Helvetica"];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RCWorklist" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallPriorityWorklist\l\< llvm::LazyCallGraph::RefSCC *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::PriorityWorklist\l\< llvm::LazyCallGraph\l::RefSCC *, SmallVector\l\< llvm::LazyCallGraph::RefSCC\l *, N \>, SmallDenseMap\< llvm\l::LazyCallGraph::RefSCC *, ptrdiff_t \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::RefSCC *, SmallVector\l\< llvm::LazyCallGraph::\lRefSCC *, N \>, SmallDenseMap\l\< llvm::LazyCallGraph::RefSCC\l *, ptrdiff_t \> \>" ,fontname="Helvetica"];
  Node9 [label="llvm::PriorityWorklist\l\< T, VectorT, MapT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip="A FILO worklist that prioritizes on re-insertion without duplication."];
  Node10 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::RefSCC *, 1 \>" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallPriorityWorklist\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip="A version of PriorityWorklist that selects small size optimized data structures for the vector and ma..."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::PriorityWorklist\l\< T, SmallVector\< T, N\l \>, SmallDenseMap\< T, ptrdiff_t \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip=" "];
  Node9 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, SmallVector\< T,\l N \>, SmallDenseMap\l\< T, ptrdiff_t \> \>" ,fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InvalidatedSCCs" ,fontname="Helvetica"];
  Node12 [label="llvm::SmallPtrSetImpl\l\< llvm::LazyCallGraph\l::SCC * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallPtrSetImplBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImplBase.html",tooltip="SmallPtrSetImplBase - This is the common code shared among all the SmallPtrSet<>'s,..."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node15 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArraySize\nNumNonEmpty\nNumTombstones" ,fontname="Helvetica"];
  Node15 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArray\nSmallArray" ,fontname="Helvetica"];
  Node16 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::SCC * \>" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallPtrSetImpl\l\< PtrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..."];
  Node13 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InvalidatedRefSCCs" ,fontname="Helvetica"];
  Node18 [label="llvm::SmallPtrSetImpl\l\< llvm::LazyCallGraph\l::RefSCC * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip=" "];
  Node13 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::RefSCC * \>" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CWorklist" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallPriorityWorklist\l\< llvm::LazyCallGraph::SCC *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPriorityWorklist.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::PriorityWorklist\l\< llvm::LazyCallGraph\l::SCC *, SmallVector\< llvm\l::LazyCallGraph::SCC *, N\l \>, SmallDenseMap\< llvm::LazyCallGraph\l::SCC *, ptrdiff_t \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PriorityWorklist.html",tooltip=" "];
  Node9 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::SCC *, SmallVector\l\< llvm::LazyCallGraph\l::SCC *, N \>, SmallDenseMap\l\< llvm::LazyCallGraph::SCC\l *, ptrdiff_t \> \>" ,fontname="Helvetica"];
  Node10 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::LazyCallGraph\l::SCC *, 1 \>" ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IndirectVHs" ,fontname="Helvetica"];
  Node21 [label="llvm::SmallMapVector\l\< llvm::Value *, llvm\l::WeakTrackingVH, 16 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallMapVector.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::MapVector\< llvm\l::Value *, llvm::WeakTracking\lVH, SmallDenseMap\< llvm::Value\l *, unsigned, N \>, SmallVector\l\< std::pair\< llvm::Value *, llvm\l::WeakTrackingVH \>, N \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Value *, llvm\l::WeakTrackingVH, SmallDense\lMap\< llvm::Value *, unsigned,\l N \>, SmallVector\< std::pair\l\< llvm::Value *, llvm::WeakTrackingVH \>, N \> \>" ,fontname="Helvetica"];
  Node23 [label="llvm::MapVector\< KeyT,\l ValueT, MapType, VectorType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip="This class implements a map that also provides access to all stored values in a deterministic order."];
  Node24 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Value *, llvm\l::WeakTrackingVH, 16 \>" ,fontname="Helvetica"];
  Node24 [label="llvm::SmallMapVector\l\< KeyT, ValueT, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallMapVector.html",tooltip="A MapVector that performs no allocations if smaller than a certain size."];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::MapVector\< KeyT,\l ValueT, SmallDenseMap\l\< KeyT, unsigned, N \>,\l SmallVector\< std::pair\l\< KeyT, ValueT \>, N \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip=" "];
  Node23 -> Node25 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< KeyT, ValueT, SmallDense\lMap\< KeyT, unsigned, N\l \>, SmallVector\< std::pair\l\< KeyT, ValueT \>, N \> \>" ,fontname="Helvetica"];
  Node26 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UpdatedC" ,fontname="Helvetica"];
  Node26 [label="llvm::LazyCallGraph::SCC",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LazyCallGraph_1_1SCC.html",tooltip="An SCC of the call graph."];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CrossSCCPA" ,fontname="Helvetica"];
  Node27 [label="llvm::PreservedAnalyses",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PreservedAnalyses.html",tooltip="A set of analyses that are preserved following a run of a transformation pass."];
}

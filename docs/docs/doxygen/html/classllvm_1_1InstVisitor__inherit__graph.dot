digraph "llvm::InstVisitor&lt; SubClass, RetTy &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::InstVisitor\<\l SubClass, RetTy \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for instruction visitors."];
  Node1 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< PGOIndirectCallVisitor \>" ,fontname="Helvetica"];
  Node2 [label="llvm::InstVisitor\<\l PGOIndirectCallVisitor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::PGOIndirectCallVisitor",height=0.2,width=0.4,color="black",URL="$structllvm_1_1PGOIndirectCallVisitor.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SCCPInstVisitor \>" ,fontname="Helvetica"];
  Node4 [label="llvm::InstVisitor\<\l SCCPInstVisitor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SCCPInstVisitor",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SCCPInstVisitor.html",tooltip="Helper class for SCCPSolver."];
  Node1 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< InstructionAllowed,\l bool \>" ,fontname="Helvetica"];
  Node6 [label="llvm::InstVisitor\<\l InstructionAllowed,\l bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< InstructionClassification,\l InstrType \>" ,fontname="Helvetica"];
  Node7 [label="llvm::InstVisitor\<\l InstructionClassification,\l InstrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::IRSimilarity\l::IRInstructionMapper\l::InstructionClassification",height=0.2,width=0.4,color="black",URL="$structllvm_1_1IRSimilarity_1_1IRInstructionMapper_1_1InstructionClassification.html",tooltip="Custom InstVisitor to classify different instructions for whether it can be analyzed for similarity."];
  Node1 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DerivedT \>" ,fontname="Helvetica"];
  Node9 [label="llvm::InstVisitor\<\l DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node9 -> Node10 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::PtrUseVisitor\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrUseVisitor.html",tooltip="A base class for visitors over the uses of a pointer value."];
  Node10 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SliceBuilder \>" ,fontname="Helvetica"];
  Node11 [label="llvm::PtrUseVisitor\l\< SliceBuilder \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrUseVisitor.html",tooltip=" "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="AllocaSlices::SliceBuilder",height=0.2,width=0.4,color="black",URL="$classAllocaSlices_1_1SliceBuilder.html",tooltip="Builder for the alloca slices."];
  Node1 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SliceBuilder \>" ,fontname="Helvetica"];
  Node13 [label="llvm::InstVisitor\<\l SliceBuilder \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node13 -> Node11 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< UnrolledInstAnalyzer,\l bool \>" ,fontname="Helvetica"];
  Node14 [label="llvm::InstVisitor\<\l UnrolledInstAnalyzer,\l bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node14 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::UnrolledInstAnalyzer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnrolledInstAnalyzer.html",tooltip=" "];
  Node1 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AllocaSliceRewriter,\l bool \>" ,fontname="Helvetica"];
  Node16 [label="llvm::InstVisitor\<\l AllocaSliceRewriter,\l bool \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::sroa::AllocaSliceRewriter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1sroa_1_1AllocaSliceRewriter.html",tooltip="Visitor to rewrite instructions using p particular slice of an alloca to use a new alloca."];
  Node1 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< LibCallsShrinkWrap \>" ,fontname="Helvetica"];
  Node18 [label="llvm::InstVisitor\<\l LibCallsShrinkWrap \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node18 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="false::LibCallsShrinkWrap",height=0.2,width=0.4,color="black",URL="$classfalse_1_1LibCallsShrinkWrap.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Interpreter \>" ,fontname="Helvetica"];
  Node20 [label="llvm::InstVisitor\<\l Interpreter \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::Interpreter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Interpreter.html",tooltip=" "];
  Node1 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< InstCombinerImpl,\l Instruction * \>" ,fontname="Helvetica"];
  Node22 [label="llvm::InstVisitor\<\l InstCombinerImpl, Instruction * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node22 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::InstCombinerImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstCombinerImpl.html",tooltip=" "];
  Node1 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ObjectSizeOffsetEvaluator,\l SizeOffsetEvalType \>" ,fontname="Helvetica"];
  Node24 [label="llvm::InstVisitor\<\l ObjectSizeOffsetEvaluator,\l SizeOffsetEvalType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node24 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::ObjectSizeOffsetEvaluator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ObjectSizeOffsetEvaluator.html",tooltip="Evaluate the size and offset of an object pointed to by a Value*."];
  Node1 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ObjectSizeOffsetVisitor,\l SizeOffsetType \>" ,fontname="Helvetica"];
  Node26 [label="llvm::InstVisitor\<\l ObjectSizeOffsetVisitor,\l SizeOffsetType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstVisitor.html",tooltip=" "];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::ObjectSizeOffsetVisitor",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ObjectSizeOffsetVisitor.html",tooltip="Evaluate the size and offset of an object pointed to by a Value* statically."];
}

digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node2998 [label="llvm::SmallVectorImpl\l\< std::function\< bool\l(llvm::StringRef, llvm\l::PassManager\< Loop, LoopAnalysis\lManager, LoopStandardAnalysisResults\l &, LPMUpdater & \> &, llvm::ArrayRef\l\< llvm::PassBuilder::PipelineElement \>)\> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node2998 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::SmallVector\<\l std::function\< bool\l(llvm::StringRef, llvm\l::PassManager\< Loop, LoopAnalysis\lManager, LoopStandardAnalysisResults\l &, LPMUpdater & \> &, llvm::ArrayRef\l\< llvm::PassBuilder::PipelineElement \>)\>, 2 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node0 [label="llvm::SmallVectorStorage\l\< std::function\< bool(llvm\l::StringRef, llvm::PassManager\l\< Loop, LoopAnalysisManager,\l LoopStandardAnalysisResults &,\l LPMUpdater & \> &, llvm::ArrayRef\l\< llvm::PassBuilder::PipelineElement \>)\>, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
}

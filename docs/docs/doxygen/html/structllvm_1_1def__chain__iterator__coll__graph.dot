digraph "llvm::def_chain_iterator&lt; T, UseOptimizedChain &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::def_chain_iterator\l\< T, UseOptimizedChain \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Walks the defining accesses of MemoryDefs."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::iterator_facade\l_base\< def_chain_iterator\l\< T, false \>, std::forward\l_iterator_tag, MemoryAccess * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< def_chain_iterator\l\< T, false \>, std::forward\l_iterator_tag, MemoryAccess * \>" ,fontname="Helvetica"];
  Node3 [label="llvm::iterator_facade\l_base\< DerivedT, IteratorCategory\lT, T, DifferenceTypeT, PointerT,\l ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..."];
}

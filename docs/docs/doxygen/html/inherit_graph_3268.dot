digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="llvm::iterator_facade\l_base\< NeighborEdgeIterator\lT\< IsConst, IsOut \>, std\l::iterator_traits\< typename\l NeighborSetT::const_iterator\l \>::iterator_category, std::conditional\l_t\< IsConst, const EdgeValueType, EdgeValueType\l \>, typename std::iterator_traits\< typename\l NeighborSetT::const_iterator \>::difference\l_type, std::conditional_t\< std::is_same\< std\l::conditional_t\< IsConst, const EdgeValueType,\l EdgeValueType \>, typename std::iterator_traits\l\< typename NeighborSetT::const_iterator \>::value\l_type \>::value, typename std::iterator_traits\< typename\l NeighborSetT::const_iterator \>::pointer, std::conditional\l_t\< IsConst, const EdgeValueType, EdgeValueType \> * \>, std\l::conditional_t\< std::is_same\< std::conditional_t\< IsConst,\l const EdgeValueType, EdgeValueType \>, typename std::iterator\l_traits\< typename NeighborSetT::const_iterator \>::value_type \>\l::value, typename std::iterator_traits\< typename NeighborSetT::\lconst_iterator \>::reference, std::conditional_t\< IsConst, const\l EdgeValueType, EdgeValueType \> & \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::iterator_adaptor\l_base\< NeighborEdgeIteratorT\l\< IsConst, IsOut \>, typename\l NeighborSetT::const_iterator,\l std::iterator_traits\< typename\l NeighborSetT::const_iterator \>\l::iterator_category, std::conditional\l_t\< IsConst, const EdgeValueType, EdgeValueType \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
}

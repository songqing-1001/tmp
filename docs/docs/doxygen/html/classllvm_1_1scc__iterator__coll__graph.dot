digraph "llvm::scc_iterator&lt; GraphT, GT &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::scc_iterator\l\< GraphT, GT \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Enumerate the SCCs of a directed graph in reverse topological order of the SCC DAG."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::iterator_facade\l_base\< scc_iterator\<\l GraphT, GraphTraits\<\l GraphT \> \>, std::forward\l_iterator_tag, const std\l::vector\< GraphTraits\< GraphT\l \> ::NodeRef \>, ptrdiff_t \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< scc_iterator\< GraphT,\l GraphTraits\< GraphT \>\l \>, std::forward_iterator\l_tag, const std::vector\<\l GraphTraits\< GraphT \> ::NodeRef\l \>, ptrdiff_t \>" ,fontname="Helvetica"];
  Node3 [label="llvm::iterator_facade\l_base\< DerivedT, IteratorCategory\lT, T, DifferenceTypeT, PointerT,\l ReferenceT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ..."];
}

digraph "llvm::GenericScheduler"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::GenericScheduler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="GenericScheduler shrinks the unscheduled zone using heuristics to balance the schedule."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::GenericSchedulerBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GenericSchedulerBase.html",tooltip="Base class for GenericScheduler."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::MachineSchedStrategy",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineSchedStrategy.html",tooltip="MachineSchedStrategy - Interface to the scheduling algorithm used by ScheduleDAGMI."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node4 [label="llvm::SchedRemainder",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SchedRemainder.html",tooltip="Summarize the unscheduled region."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemainingCounts" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallVector\<\l unsigned, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorImpl\l\< unsigned \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node8 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorStorage\l\< unsigned, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned, 16 \>" ,fontname="Helvetica"];
  Node11 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node13 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsAcyclicLatencyLimited" ,fontname="Helvetica"];
  Node13 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RemIssueCount\nCriticalPath\nCyclicCritPath" ,fontname="Helvetica"];
  Node14 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context\nTRI\nSchedModel" ,fontname="Helvetica"];
  Node15 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionPolicy" ,fontname="Helvetica"];
  Node16 [label="llvm::MachineSchedPolicy",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineSchedPolicy.html",tooltip="Define a generic scheduling policy for targets that don't provide their own MachineSchedStrategy."];
  Node13 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ShouldTrackLaneMasks\nComputeDFSResult\nDisableLatencyHeuristic\nOnlyBottomUp\nOnlyTopDown\nShouldTrackPressure" ,fontname="Helvetica"];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node17 [label="llvm::ScheduleDAGMILive",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMILive.html",tooltip="ScheduleDAGMILive is an implementation of ScheduleDAGInstrs that schedules machine instructions while..."];
  Node18 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::ScheduleDAGMI",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGMI.html",tooltip="ScheduleDAGMI is an implementation of ScheduleDAGInstrs that simply schedules machine instructions ac..."];
  Node19 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::ScheduleDAGInstrs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGInstrs.html",tooltip="A ScheduleDAG for scheduling lists of MachineInstr."];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::ScheduleDAG",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ScheduleDAG.html",tooltip=" "];
  Node34 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExitSU\nEntrySU" ,fontname="Helvetica"];
  Node34 [label="llvm::SUnit",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SUnit.html",tooltip="Scheduling unit. This is a node in the scheduling DAG."];
  Node34 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigNode" ,fontname="Helvetica"];
  Node13 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" isVRegCycle\nisUnbuffered\nisTwoAddress\nhasPhysRegDefs\nhasPhysRegUses\nisScheduled\nisCommutable\nisCallOp\nisCall\nisCloned\n..." ,fontname="Helvetica"];
  Node14 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" WeakSuccsLeft\nWeakPredsLeft\nNodeNum\nTopReadyCycle\nNumRegDefsLeft\nNumPredsLeft\nLatency\nNumSuccsLeft\nNodeQueueId\nNumSuccs\n..." ,fontname="Helvetica"];
  Node15 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedClass\nCopySrcRC\nCopyDstRC" ,fontname="Helvetica"];
  Node13 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StressSched" ,fontname="Helvetica"];
  Node15 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TRI\nTM\nTII" ,fontname="Helvetica"];
  Node41 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MISUnitMap" ,fontname="Helvetica"];
  Node41 [label="llvm::DenseMap\< llvm\l::MachineInstr *, llvm\l::SUnit * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node43 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionBegin\nRegionEnd" ,fontname="Helvetica"];
  Node43 [label="llvm::MachineInstrBundle\lIterator\< MachineInstr \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip=" "];
  Node44 -> Node43 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="llvm::MachineInstrBundle\lIteratorHelper\< false \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MachineInstrBundleIteratorHelper_3_01false_01_4.html",tooltip=" "];
  Node45 -> Node43 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MachineInstr \>" ,fontname="Helvetica"];
  Node45 [label="llvm::MachineInstrBundle\lIterator\< Ty, IsReverse \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachineInstrBundleIterator.html",tooltip="MachineBasicBlock iterator that automatically skips over MIs that are inside bundles (i...."];
  Node44 -> Node45 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DbgValues" ,fontname="Helvetica"];
  Node46 [label="vector\< std::pair\<\l MachineInstr *, MachineInstr * \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node34 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BarrierChain" ,fontname="Helvetica"];
  Node47 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegs" ,fontname="Helvetica"];
  Node47 [label="llvm::LivePhysRegs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LivePhysRegs.html",tooltip="A set of physical registers with utility functions to track liveness when walking backward/forward th..."];
  Node48 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UnknownValue" ,fontname="Helvetica"];
  Node48 [label="llvm::UndefValue",height=0.2,width=0.4,color="red",URL="$classllvm_1_1UndefValue.html",tooltip="'undef' values are things that do not have specified contents."];
  Node54 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAForDep" ,fontname="Helvetica"];
  Node54 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node13 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TrackLaneMasks\nRemoveKillFlags\nCanHandleTerminators" ,fontname="Helvetica"];
  Node55 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Topo" ,fontname="Helvetica"];
  Node55 [label="llvm::ScheduleDAGTopologicalSort",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleDAGTopologicalSort.html",tooltip="This class can compute a topological ordering for SUnits and provides methods for dynamically updatin..."];
  Node56 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Uses\nDefs" ,fontname="Helvetica"];
  Node56 [label="llvm::SparseMultiSet\l\< PhysRegSUOper, identity\l\< unsigned \>, uint16_t \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node57 -> Node56 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< PhysRegSUOper, identity\l\< unsigned \>, uint16_t \>" ,fontname="Helvetica"];
  Node57 [label="llvm::SparseMultiSet\l\< ValueT, KeyFunctorT,\l SparseT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip="Fast multiset implementation for objects that can be identified by small unsigned keys."];
  Node58 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node58 [label="llvm::MachineBasicBlock",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineBasicBlock.html",tooltip=" "];
  Node72 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDbgValue" ,fontname="Helvetica"];
  Node72 [label="llvm::MachineInstr",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineInstr.html",tooltip="Representation of each machine instruction."];
  Node77 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegDefs" ,fontname="Helvetica"];
  Node77 [label="llvm::SparseMultiSet\l\< VReg2SUnit, VirtReg2Index\lFunctor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node57 -> Node77 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VReg2SUnit, VirtReg2Index\lFunctor \>" ,fontname="Helvetica"];
  Node14 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumRegionInstrs" ,fontname="Helvetica"];
  Node78 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node78 [label="llvm::TargetSchedModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetSchedModel.html",tooltip="Provide an instruction scheduling machine model to CodeGen passes."];
  Node15 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MLI\nMFI" ,fontname="Helvetica"];
  Node79 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentVRegUses" ,fontname="Helvetica"];
  Node79 [label="llvm::SparseMultiSet\l\< VReg2SUnitOperIdx,\l VirtReg2IndexFunctor \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SparseMultiSet.html",tooltip=" "];
  Node57 -> Node79 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< VReg2SUnitOperIdx,\l VirtReg2IndexFunctor \>" ,fontname="Helvetica"];
  Node43 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentTop\nCurrentBottom" ,fontname="Helvetica"];
  Node54 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node80 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mutations" ,fontname="Helvetica"];
  Node80 [label="vector\< std::unique\l_ptr\< llvm::ScheduleDAGMutation \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node81 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LIS" ,fontname="Helvetica"];
  Node81 [label="llvm::LiveIntervals",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LiveIntervals.html",tooltip=" "];
  Node82 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="llvm::MachineFunctionPass",height=0.2,width=0.4,color="red",URL="$classllvm_1_1MachineFunctionPass.html",tooltip="MachineFunctionPass - This class adapts the FunctionPass interface to allow convenient creation of pa..."];
  Node15 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextClusterPred\nNextClusterSucc" ,fontname="Helvetica"];
  Node85 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedImpl" ,fontname="Helvetica"];
  Node85 [label="unique_ptr\< llvm::Machine\lSchedStrategy \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node86 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotPressure\nTopPressure\nRegPressure" ,fontname="Helvetica"];
  Node86 [label="llvm::IntervalPressure",height=0.2,width=0.4,color="black",URL="$structllvm_1_1IntervalPressure.html",tooltip="RegisterPressure computed within a region of instructions delimited by TopIdx and BottomIdx."];
  Node87 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="llvm::RegisterPressure",height=0.2,width=0.4,color="red",URL="$structllvm_1_1RegisterPressure.html",tooltip="Base class for register pressure results."];
  Node92 -> Node86 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BottomIdx\nTopIdx" ,fontname="Helvetica"];
  Node92 [label="llvm::SlotIndex",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SlotIndex.html",tooltip="SlotIndex - An opaque wrapper around machine indexes."];
  Node93 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BotRPTracker\nRPTracker\nTopRPTracker" ,fontname="Helvetica"];
  Node93 [label="llvm::RegPressureTracker",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegPressureTracker.html",tooltip="Track the current register pressure at some position in the instruction stream, and remember the high..."];
  Node43 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LiveRegionEnd" ,fontname="Helvetica"];
  Node94 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegClassInfo" ,fontname="Helvetica"];
  Node94 [label="llvm::RegisterClassInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RegisterClassInfo.html",tooltip=" "];
  Node95 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SUPressureDiffs" ,fontname="Helvetica"];
  Node95 [label="llvm::PressureDiffs",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PressureDiffs.html",tooltip="Array of PressureDiffs."];
  Node13 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ShouldTrackLaneMasks\nShouldTrackPressure" ,fontname="Helvetica"];
  Node96 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RegionCriticalPSets" ,fontname="Helvetica"];
  Node96 [label="vector\< llvm::PressureChange \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node77 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VRegUses" ,fontname="Helvetica"];
  Node97 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSResult" ,fontname="Helvetica"];
  Node97 [label="llvm::SchedDFSResult",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedDFSResult.html",tooltip="Compute the values of each DAG node for various metrics during DFS."];
  Node98 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ScheduledTrees" ,fontname="Helvetica"];
  Node98 [label="llvm::BitVector",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitVector.html",tooltip=" "];
  Node99 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Top\nBot" ,fontname="Helvetica"];
  Node99 [label="llvm::SchedBoundary",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SchedBoundary.html",tooltip="Each Scheduling boundary is associated with ready queues."];
  Node18 -> Node99 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node4 -> Node99 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rem" ,fontname="Helvetica"];
  Node100 -> Node99 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HazardRec" ,fontname="Helvetica"];
  Node100 [label="llvm::ScheduleHazardRecognizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScheduleHazardRecognizer.html",tooltip="HazardRecognizer - This determines whether or not an instruction can be issued this cycle,..."];
  Node14 -> Node100 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxLookAhead" ,fontname="Helvetica"];
  Node15 -> Node99 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SchedModel" ,fontname="Helvetica"];
  Node101 -> Node99 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Pending\nAvailable" ,fontname="Helvetica"];
  Node101 [label="llvm::ReadyQueue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ReadyQueue.html",tooltip="Helpers for implementing custom MachineSchedStrategy classes."];
  Node102 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TopCand\nBotCand" ,fontname="Helvetica"];
  Node102 [label="SchedCandidate",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

digraph "llvm::LoopVectorizePass"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::LoopVectorizePass",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The LoopVectorize Pass."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::PassInfoMixin\l\< LoopVectorizePass \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1PassInfoMixin.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< LoopVectorizePass \>" ,fontname="Helvetica"];
  Node3 [label="llvm::PassInfoMixin\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1PassInfoMixin.html",tooltip="A CRTP mix-in to automatically provide informational APIs needed for passes."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LAIs" ,fontname="Helvetica"];
  Node4 [label="llvm::LoopAccessInfoManager",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopAccessInfoManager.html",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node5 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSI" ,fontname="Helvetica"];
  Node6 [label="llvm::ProfileSummaryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ProfileSummaryInfo.html",tooltip="Analysis providing profile information."];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DB" ,fontname="Helvetica"];
  Node7 [label="llvm::DemandedBits",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DemandedBits.html",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BFI" ,fontname="Helvetica"];
  Node8 [label="llvm::BlockFrequencyInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockFrequencyInfo.html",tooltip="BlockFrequencyInfo pass uses BlockFrequencyInfoImpl implementation to estimate IR basic block frequen..."];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SE" ,fontname="Helvetica"];
  Node9 [label="llvm::ScalarEvolution",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ScalarEvolution.html",tooltip="The main scalar evolution driver."];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node10 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node11 [label="llvm::TargetLibraryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetLibraryInfo.html",tooltip="Provides information about what library functions are available for the current target."];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node12 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node14 [label="ParentPtr",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node15 [label="llvm::SmallVector\<\l BasicBlock *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::SmallVectorImpl\l\< BasicBlock * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock * \>" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node18 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::SmallVectorStorage\l\< BasicBlock *, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node19 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node19 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, N \>" ,fontname="Helvetica"];
  Node20 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node19 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node21 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node21 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node17 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node19 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node20 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node23 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node23 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node24 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node24 [label="llvm::DomTreeNodeBase\l\< BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock \>" ,fontname="Helvetica"];
  Node25 [label="llvm::DomTreeNodeBase\l\< NodeT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip="Base class for the actual dominator tree node."];
  Node26 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node26 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Insert\nDelete" ,fontname="Helvetica"];
  Node27 [label="static constexpr UpdateKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node28 [label="unique_ptr\< DomTreeNodeBase\l\< BasicBlock \> \>\>",height=0.2,width=0.4,color="black",URL="$classDenseMap_3_01BasicBlock_01_5_00_01std_1_1unique__ptr_3_01DomTreeNodeBase_3_01BasicBlock_01_4_01_4_4.html",tooltip=" "];
  Node29 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, false \>" ,fontname="Helvetica"];
  Node29 [label="llvm::DominatorTreeBase\l\< NodeT, IsPostDom \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip="Core dominator tree base class."];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node30 [label="DomTreeNodeBase\< NodeT \> *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node31 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node31 [label="unique_ptr\< DomTreeNodeBase\l\< NodeT \> \>\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node32 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node32 [label="llvm::SmallVector\<\l NodeT *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node33 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::SmallVectorImpl\l\< NodeT * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node17 -> Node33 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT * \>" ,fontname="Helvetica"];
  Node34 -> Node32 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="llvm::SmallVectorStorage\l\< NodeT *, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node19 -> Node34 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node20 -> Node34 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT *, N \>" ,fontname="Helvetica"];
  Node21 -> Node32 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node23 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node26 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node27 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Insert\nDelete" ,fontname="Helvetica"];
  Node35 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI" ,fontname="Helvetica"];
  Node35 [label="llvm::TargetTransformInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetTransformInfo.html",tooltip="This pass provides access to the codegen interfaces that are needed for IR-level transformations."];
  Node36 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node36 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node37 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node38 -> Node37 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node38 [label="llvm::LoopInfoBase\l\< BlockT, LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip="This class builds and contains all of the top-level loop structures in the specified function."];
}

digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node8286 [label="iterator_facade_base\l\< pointer_iterator\< Wrapped\lIteratorT, decltype(&*std\l::declval\< WrappedIteratorT\l \>()) \>, std::iterator_traits\l\< WrappedIteratorT \>::iterator\l_category, decltype(&*::\< \> WrappedIterator\lT, typename std::iterator_traits\< WrappedIteratorT\l \>::difference_type, std::conditional_t\< std\l::is_same\< decltype(&*::\< \> WrappedIteratorT,\l typename std::iterator_traits\< WrappedIteratorT\l \>::value_type \>::value, typename std::iterator_traits\l\< WrappedIteratorT \>::pointer, decltype(&*::\< \> WrappedIteratorT\l * \>, std::conditional_t\< std::is_same\< decltype(&*::\< \> WrappedIteratorT,\l typename std::iterator_traits\< WrappedIteratorT \>::value_type \>::value,\l typename std::iterator_traits\< WrappedIteratorT \>::reference, decltype\l(&*::\< \> WrappedIteratorT & \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8286 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="llvm::iterator_adaptor\l_base\< pointer_iterator\l\< WrappedIteratorT, decltype\l(&*std::declval\< WrappedIteratorT\l \>()) \>, WrappedIteratorT, std\l::iterator_traits\< WrappedIteratorT\l \>::iterator_category, decltype(&*std\l::declval\< WrappedIteratorT \>()) \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::pointer_iterator\l\< WrappedIteratorT, T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1pointer__iterator.html",tooltip=" "];
}

digraph "llvm::ConstStrippingForwardingCast&lt; To, From, ForwardTo &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::ConstStrippingForwarding\lCast\< To, From, ForwardTo \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Provides a cast trait that strips const from types to make it easier to implement a const-version of ..."];
  Node1 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< To, const PointerUnion\l\< PTs... \>, CastInfo\< To,\l PointerUnion\< PTs... \> \> \>" ,fontname="Helvetica"];
  Node2 [label="llvm::ConstStrippingForwarding\lCast\< To, const PointerUnion\l\< PTs... \>, CastInfo\< To, PointerUnion\l\< PTs... \> \> \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1ConstStrippingForwardingCast.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::CastInfo\< To,\l const PointerUnion\l\< PTs... \> \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1CastInfo_3_01To_00_01const_01PointerUnion_3_01PTs_8_8_8_01_4_01_4.html",tooltip=" "];
}

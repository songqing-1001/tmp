digraph "llvm::UnaryInstruction"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::UnaryInstruction",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::Instruction",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Instruction.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node_with\l_parent\< Instruction,\l BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::ilist_node\< Instruction,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Instruction,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< Instruction,\l Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< Instruction,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node9 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node10 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, Options... \>" ,fontname="Helvetica"];
  Node11 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< T, Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node14 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, BasicBlock \>" ,fontname="Helvetica"];
  Node14 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type ::\lnode_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node11 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::AllocaInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocaInst.html",tooltip="an instruction to allocate memory on the stack"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::CastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CastInst.html",tooltip="This is the base class for all instructions that perform data casts."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::AddrSpaceCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AddrSpaceCastInst.html",tooltip="This class represents a conversion between pointers from one address space to another."];
  Node19 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::BitCastInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BitCastInst.html",tooltip="This class represents a no-op cast from one type to another."];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::FPExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPExtInst.html",tooltip="This class represents an extension of floating point types."];
  Node19 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::FPToSIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToSIInst.html",tooltip="This class represents a cast from floating point to signed integer."];
  Node19 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::FPToUIInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPToUIInst.html",tooltip="This class represents a cast from floating point to unsigned integer."];
  Node19 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::FPTruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FPTruncInst.html",tooltip="This class represents a truncation of floating point types."];
  Node19 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::IntToPtrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntToPtrInst.html",tooltip="This class represents a cast from an integer to a pointer."];
  Node19 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="llvm::PtrToIntInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PtrToIntInst.html",tooltip="This class represents a cast from a pointer to an integer."];
  Node19 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::SExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SExtInst.html",tooltip="This class represents a sign extension of integer types."];
  Node19 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::SIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SIToFPInst.html",tooltip="This class represents a cast from signed integer to floating point."];
  Node19 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::TruncInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TruncInst.html",tooltip="This class represents a truncation of integer types."];
  Node19 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="llvm::UIToFPInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UIToFPInst.html",tooltip="This class represents a cast unsigned integer to floating point."];
  Node19 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="llvm::ZExtInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ZExtInst.html",tooltip="This class represents zero extension of integer types."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::ExtractValueInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractValueInst.html",tooltip="This instruction extracts a struct member or array element value from an aggregate value."];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="llvm::FreezeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FreezeInst.html",tooltip="This class represents a freeze function that returns random concrete value if an operand is either a ..."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::LoadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoadInst.html",tooltip="An instruction for reading from memory."];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="llvm::UnaryOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnaryOperator.html",tooltip=" "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="llvm::VAArgInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1VAArgInst.html",tooltip="This class represents the va_arg llvm instruction, which returns an argument of the specified type gi..."];
}

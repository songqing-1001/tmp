digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node8289 [label="iterator_facade_base\l\< pointee_iterator\< Wrapped\lIteratorT, std::remove_reference\l_t\< decltype(**std::declval\< WrappedIterator\lT \>())\>, std::iterator_traits\< WrappedIteratorT\l \>::iterator_category, std::remove_reference\l_t\< decltype(**std::declval\< WrappedIteratorT\l \>())\>, typename std::iterator_traits\< WrappedIteratorT\l \>::difference_type, std::conditional_t\< std::is_same\l\< std::remove_reference_t\< decltype(**std::declval\< WrappedIteratorT\l \>())\>, typename std::iterator_traits\< WrappedIteratorT \>::value\l_type \>::value, typename std::iterator_traits\< WrappedIteratorT\l \>::pointer, std::remove_reference_t\< decltype(**std::declval\< WrappedIteratorT\l \>())\> * \>, std::conditional_t\< std::is_same\< std::remove_reference_t\< decltype\l(**std::declval\< WrappedIteratorT \>())\>, typename std::iterator_traits\< WrappedIteratorT\l \>::value_type \>::value, typename std::iterator_traits\< WrappedIteratorT \>::reference,\l std::remove_reference_t\< decltype(**std::declval\< WrappedIteratorT \>())\> & \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8289 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="llvm::iterator_adaptor\l_base\< pointee_iterator\l\< WrappedIteratorT, std\l::remove_reference_t\< decltype\l(**std::declval\< WrappedIteratorT\l \>())\> \>, WrappedIteratorT, std\l::iterator_traits\< WrappedIteratorT\l \>::iterator_category, std::remove\l_reference_t\< decltype(**std::declval\l\< WrappedIteratorT \>())\> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
}

digraph "llvm::GCOVFunction"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::GCOVFunction",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="GCOVFunction - Collects function information."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" visited" ,fontname="Helvetica"];
  Node2 [label="llvm::DenseSet\< const\l llvm::GCOVBlock * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseSet.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::detail::DenseSetImpl\l\< const llvm::GCOVBlock\l *, DenseMap\< const llvm\l::GCOVBlock *, detail::DenseSetEmpty,\l DenseMapInfo\< const llvm::GCOVBlock\l * \>, detail::DenseSetPair\< const llvm\l::GCOVBlock * \> \>, DenseMapInfo\< const\l llvm::GCOVBlock * \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::GCOVBlock\l *, DenseMap\< const llvm\l::GCOVBlock *, detail::DenseSet\lEmpty, DenseMapInfo\< const llvm\l::GCOVBlock * \>, detail::DenseSetPair\l\< const llvm::GCOVBlock * \> \>, DenseMapInfo\l\< const llvm::GCOVBlock * \> \>" ,fontname="Helvetica"];
  Node4 [label="llvm::detail::DenseSetImpl\l\< ValueT, MapTy, ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip="Base class for DenseSet and DenseSmallSet."];
  Node5 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::GCOVBlock * \>" ,fontname="Helvetica"];
  Node5 [label="llvm::DenseSet\< ValueT,\l ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseSet.html",tooltip="Implements a dense probed hash-table based set."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::detail::DenseSetImpl\l\< ValueT, DenseMap\< ValueT,\l detail::DenseSetEmpty, DenseMapInfo\l\< ValueT \>, detail::DenseSetPair\l\< ValueT \> \>, DenseMapInfo\< ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1DenseSetImpl.html",tooltip=" "];
  Node4 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ValueT, DenseMap\l\< ValueT, detail::DenseSet\lEmpty, DenseMapInfo\< ValueT\l \>, detail::DenseSetPair\< ValueT\l \> \>, DenseMapInfo\< ValueT \> \>" ,fontname="Helvetica"];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" blocks" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVector\<\l std::unique_ptr\< llvm\l::GCOVBlock \>, 0 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorImpl\l\< std::unique_ptr\< llvm\l::GCOVBlock \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVBlock \> \>" ,fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node10 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorStorage\l\< std::unique_ptr\< llvm\l::GCOVBlock \>, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node11 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVBlock \>, N \>" ,fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node11 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node13 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVBlock \>, 0 \>" ,fontname="Helvetica"];
  Node13 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node9 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node12 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" demangled" ,fontname="Helvetica"];
  Node15 [label="llvm::SmallString\< 0 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallString.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::SmallVector\<\l char, InternalLen \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::SmallVectorImpl\l\< char \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node9 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char \>" ,fontname="Helvetica"];
  Node18 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::SmallVectorStorage\l\< char, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node12 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char, N \>" ,fontname="Helvetica"];
  Node13 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char, InternalLen \>" ,fontname="Helvetica"];
  Node19 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< 0 \>" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallString\<\l InternalLen \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallString.html",tooltip="SmallString - A SmallString is just a SmallVector with methods and accessors that make it work better..."];
  Node16 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" file" ,fontname="Helvetica"];
  Node20 [label="llvm::GCOVFile",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCOVFile.html",tooltip="GCOVFile - Collects coverage information for one pair of coverage file (.gcno and ...."];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" version" ,fontname="Helvetica"];
  Node21 [label="GCOVVersion",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node22 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" identToFunction" ,fontname="Helvetica"];
  Node22 [label="map\< uint32_t, llvm\l::GCOVFunction * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node23 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" filenames" ,fontname="Helvetica"];
  Node23 [label="vector\< std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node24 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" functions" ,fontname="Helvetica"];
  Node24 [label="llvm::SmallVector\<\l std::unique_ptr\< llvm\l::GCOVFunction \>, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::SmallVectorImpl\l\< std::unique_ptr\< llvm\l::GCOVFunction \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node9 -> Node25 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction \> \>" ,fontname="Helvetica"];
  Node26 -> Node24 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="llvm::SmallVectorStorage\l\< std::unique_ptr\< llvm\l::GCOVFunction \>, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node12 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction\l \>, N \>" ,fontname="Helvetica"];
  Node13 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction\l \>, 16 \>" ,fontname="Helvetica"];
  Node27 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" checksum\nrunCount\nprogramCount" ,fontname="Helvetica"];
  Node27 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node28 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" filenameToIdx" ,fontname="Helvetica"];
  Node28 [label="llvm::StringMap\< unsigned \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node29 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node30 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node31 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumItems\nNumBuckets\nItemSize\nNumTombstones" ,fontname="Helvetica"];
  Node31 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node32 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TombstoneIntVal" ,fontname="Helvetica"];
  Node32 [label="uintptr_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node33 -> Node28 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node34 -> Node33 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node36 -> Node35 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node36 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node37 -> Node33 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node37 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node38 -> Node37 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node39 -> Node28 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned \>" ,fontname="Helvetica"];
  Node39 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node29 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node39 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GCNOInitialized" ,fontname="Helvetica"];
  Node40 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node41 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cwd" ,fontname="Helvetica"];
  Node41 [label="llvm::StringRef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringRef.html",tooltip="StringRef - Represent a constant reference to a string, i.e."];
  Node42 -> Node41 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" npos" ,fontname="Helvetica"];
  Node42 [label="size_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node43 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" treeArcs\narcs" ,fontname="Helvetica"];
  Node43 [label="llvm::SmallVector\<\l std::unique_ptr\< llvm\l::GCOVArc \>, 0 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node44 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="llvm::SmallVectorImpl\l\< std::unique_ptr\< llvm\l::GCOVArc \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node9 -> Node44 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVArc \> \>" ,fontname="Helvetica"];
  Node45 -> Node43 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="llvm::SmallVectorStorage\l\< std::unique_ptr\< llvm\l::GCOVArc \>, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node11 -> Node45 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node12 -> Node45 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVArc \>, N \>" ,fontname="Helvetica"];
  Node13 -> Node43 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVArc \>, 0 \>" ,fontname="Helvetica"];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" endLine\nstartLine\ncfgChecksum\nlinenoChecksum\nstartColumn\nident\nendColumn" ,fontname="Helvetica"];
  Node46 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" artificial" ,fontname="Helvetica"];
  Node46 [label="uint8_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node31 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" srcIdx" ,fontname="Helvetica"];
  Node41 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
}

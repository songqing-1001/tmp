digraph "llvm::cl::SubCommand"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::cl::SubCommand",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ConsumeAfterOpt" ,fontname="Helvetica"];
  Node2 [label="llvm::cl::Option",height=0.2,width=0.4,color="black",URL="$classllvm_1_1cl_1_1Option.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Subs" ,fontname="Helvetica"];
  Node3 [label="llvm::SmallPtrSet\<\l llvm::cl::SubCommand\l *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::SmallPtrSetImpl\l\< llvm::cl::SubCommand * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SmallPtrSetImplBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImplBase.html",tooltip="SmallPtrSetImplBase - This is the common code shared among all the SmallPtrSet<>'s,..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArraySize\nNumNonEmpty\nNumTombstones" ,fontname="Helvetica"];
  Node7 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurArray\nSmallArray" ,fontname="Helvetica"];
  Node8 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::SubCommand * \>" ,fontname="Helvetica"];
  Node9 [label="llvm::SmallPtrSetImpl\l\< PtrType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSetImpl.html",tooltip="A templated base class for SmallPtrSet which provides the typesafe interface that is common across al..."];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::SubCommand\l *, 1 \>" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallPtrSet\<\l PtrType, SmallSize \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallPtrSet.html",tooltip="SmallPtrSet - This class implements a set which is optimized for holding SmallSize or less elements."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Categories" ,fontname="Helvetica"];
  Node11 [label="llvm::SmallVector\<\l llvm::cl::OptionCategory\l *, 1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorImpl\l\< llvm::cl::OptionCategory * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::OptionCategory * \>" ,fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node14 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::SmallVectorStorage\l\< llvm::cl::OptionCategory *, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node15 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::OptionCategory\l *, N \>" ,fontname="Helvetica"];
  Node16 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node15 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node17 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::OptionCategory\l *, 1 \>" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node13 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 -> Node17 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node15 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node16 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node19 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ArgStr\nHelpStr\nValueStr" ,fontname="Helvetica"];
  Node19 [label="llvm::StringRef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringRef.html",tooltip="StringRef - Represent a constant reference to a string, i.e."];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" npos" ,fontname="Helvetica"];
  Node20 [label="size_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PositionalOpts\nSinkOpts" ,fontname="Helvetica"];
  Node21 [label="llvm::SmallVector\<\l llvm::cl::Option *, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::SmallVectorImpl\l\< llvm::cl::Option * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node13 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::Option * \>" ,fontname="Helvetica"];
  Node23 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::SmallVectorStorage\l\< llvm::cl::Option *, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node15 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node16 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::Option\l *, N \>" ,fontname="Helvetica"];
  Node17 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::Option\l *, 4 \>" ,fontname="Helvetica"];
  Node24 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OptionsMap" ,fontname="Helvetica"];
  Node24 [label="llvm::StringMap\< llvm\l::cl::Option * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node26 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node26 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node7 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumItems\nNumBuckets\nItemSize\nNumTombstones" ,fontname="Helvetica"];
  Node27 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TombstoneIntVal" ,fontname="Helvetica"];
  Node27 [label="uintptr_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node24 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node29 -> Node28 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node31 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node32 -> Node28 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node32 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node33 -> Node32 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node34 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::cl::Option * \>" ,fontname="Helvetica"];
  Node34 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node25 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node34 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
}

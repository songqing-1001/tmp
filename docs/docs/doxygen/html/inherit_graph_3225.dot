digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="llvm::iterator_facade\l_base\< const_child_iterator,\l typename std::iterator_traits\l\< const_child_iterator_base \>\l::iterator_category, typename\l std::iterator_traits\< const_child\l_iterator_base \>::value_type, typename\l std::iterator_traits\< const_child_iterator\l_base \>::difference_type, std::conditional\l_t\< std::is_same\< typename std::iterator_traits\l\< const_child_iterator_base \>::value_type, typename\l std::iterator_traits\< const_child_iterator_base \>\l::value_type \>::value, typename std::iterator_traits\l\< const_child_iterator_base \>::pointer, typename std\l::iterator_traits\< const_child_iterator_base \>::value\l_type * \>, std::conditional_t\< std::is_same\< typename std\l::iterator_traits\< const_child_iterator_base \>::value_type,\l typename std::iterator_traits\< const_child_iterator_base \>\l::value_type \>::value, typename std::iterator_traits\< const\l_child_iterator_base \>::reference, typename std::iterator_traits\l\< const_child_iterator_base \>::value_type & \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::iterator_adaptor\l_base\< const_child_iterator,\l const_child_iterator_base \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::GenericCycle\l\< ContextT \>::const\l_child_iterator",height=0.2,width=0.4,color="black",URL="$structllvm_1_1GenericCycle_1_1const__child__iterator.html",tooltip=" "];
}

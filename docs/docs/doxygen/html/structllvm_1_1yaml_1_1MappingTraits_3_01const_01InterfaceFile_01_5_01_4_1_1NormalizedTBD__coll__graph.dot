digraph "llvm::yaml::MappingTraits&lt; const InterfaceFile * &gt;::NormalizedTBD"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::yaml::MappingTraits\l\< const InterfaceFile *\l \>::NormalizedTBD",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Allocator" ,fontname="Helvetica"];
  Node2 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold, GrowthDelay \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::AllocatorBase\l\< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>" ,fontname="Helvetica"];
  Node4 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node5 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node4 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node8 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node8 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Exports" ,fontname="Helvetica"];
  Node10 [label="vector\< ExportSection \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Architectures" ,fontname="Helvetica"];
  Node11 [label="vector\< Architecture \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CompatibilityVersion\nCurrentVersion" ,fontname="Helvetica"];
  Node12 [label="llvm::MachO::PackedVersion",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MachO_1_1PackedVersion.html",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Undefineds" ,fontname="Helvetica"];
  Node13 [label="vector\< UndefinedSection \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SwiftABIVersion" ,fontname="Helvetica"];
  Node14 [label="SwiftVersion",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UUIDs" ,fontname="Helvetica"];
  Node15 [label="vector\< UUID \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Flags" ,fontname="Helvetica"];
  Node16 [label="TBDFlags",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Platforms" ,fontname="Helvetica"];
  Node17 [label="llvm::SmallSet\< T,\l N, C \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallSet.html",tooltip="SmallSet - This maintains a set of unique values, optimizing for the case when the set is small (less..."];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCConstraint" ,fontname="Helvetica"];
  Node18 [label="ObjCConstraintType",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ParentUmbrella\nInstallName" ,fontname="Helvetica"];
  Node19 [label="llvm::StringRef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringRef.html",tooltip="StringRef - Represent a constant reference to a string, i.e."];
  Node20 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" npos" ,fontname="Helvetica"];
  Node20 [label="size_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

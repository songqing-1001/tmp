digraph "llvm::CFGMST&lt; Edge, BBInfo &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::CFGMST\< Edge,\l BBInfo \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="An union-find based Minimum Spanning Tree for CFG."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AllEdges" ,fontname="Helvetica"];
  Node2 [label="vector\< std::unique\l_ptr\< Edge \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BBInfos" ,fontname="Helvetica"];
  Node3 [label="llvm::DenseMap\< const\l llvm::BasicBlock *,\l std::unique_ptr\< BBInfo \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::DenseMapBase\l\< DenseMap\< const llvm\l::BasicBlock *, std::unique\l_ptr\< BBInfo \>, DenseMapInfo\l\< const llvm::BasicBlock * \>\l, llvm::detail::DenseMapPair\l\< const llvm::BasicBlock *, std\l::unique_ptr\< BBInfo \> \> \>, const\l llvm::BasicBlock *, std::unique_ptr\l\< BBInfo \>, DenseMapInfo\< const llvm\l::BasicBlock * \>, llvm::detail::DenseMapPair\l\< const llvm::BasicBlock *, std::unique_ptr\l\< BBInfo \> \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node6 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< const llvm\l::BasicBlock *, std::unique\l_ptr\< BBInfo \>, DenseMapInfo\l\< const llvm::BasicBlock * \>\l, llvm::detail::DenseMapPair\l\< const llvm::BasicBlock *, std\l::unique_ptr\< BBInfo \> \> \>, const\l llvm::BasicBlock *, std::unique_ptr\l\< BBInfo \>, DenseMapInfo\< const llvm\l::BasicBlock * \>, llvm::detail::DenseMapPair\l\< const llvm::BasicBlock *, std::unique_ptr\l\< BBInfo \> \> \>" ,fontname="Helvetica"];
  Node6 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::BasicBlock\l *, std::unique_ptr\< BBInfo \> \>" ,fontname="Helvetica"];
  Node7 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::DenseMapBase\l\< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< DenseMap\< KeyT, ValueT,\l DenseMapInfo\< KeyT \>,\l llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>, KeyT, ValueT,\l DenseMapInfo\< KeyT \>, llvm::detail\l::DenseMapPair\< KeyT, ValueT \> \>" ,fontname="Helvetica"];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BFI" ,fontname="Helvetica"];
  Node9 [label="llvm::BlockFrequencyInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockFrequencyInfo.html",tooltip="BlockFrequencyInfo pass uses BlockFrequencyInfoImpl implementation to estimate IR basic block frequen..."];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExitBlockFound\nInstrumentFuncEntry" ,fontname="Helvetica"];
  Node10 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BPI" ,fontname="Helvetica"];
  Node11 [label="llvm::BranchProbabilityInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BranchProbabilityInfo.html",tooltip="Analysis providing branch probability information."];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" F" ,fontname="Helvetica"];
  Node12 [label="llvm::Function",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Function.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::GlobalObject",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalObject.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::GlobalValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GlobalValue.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::Constant",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Constant.html",tooltip="This is an important base class in LLVM."];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaximumAlignment" ,fontname="Helvetica"];
  Node18 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasHungOffUses\nNumUserOperands\nSubclassOptionalData\nHasDescriptor\nHasMetadata\nMaxAlignmentExponent\nHasName\nIsUsedByMD" ,fontname="Helvetica"];
  Node19 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ValueType" ,fontname="Helvetica"];
  Node20 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node20 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node19 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node21 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node21 [label="llvm::Module",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Module.html",tooltip="A Module instance is used to store all the information related to an LLVM module."];
  Node19 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasLLVMReservedName\nIsDSOLocal\nIntID\nHasSanitizerMetadata\nHasPartition\nVisibility\nThreadLocal\nLinkage\nDllStorageClass\nUnnamedAddrVal\n..." ,fontname="Helvetica"];
  Node22 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalValueSubClassDataBits" ,fontname="Helvetica"];
  Node22 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node23 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjComdat" ,fontname="Helvetica"];
  Node23 [label="llvm::Comdat",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Comdat.html",tooltip=" "];
  Node22 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalObjectSubClassDataBits" ,fontname="Helvetica"];
  Node24 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::ilist_node\< Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Function,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< Function,\l Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node25 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< Function,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node27 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node28 -> Node27 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node29 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Function \>" ,fontname="Helvetica"];
  Node29 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< T, Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
}

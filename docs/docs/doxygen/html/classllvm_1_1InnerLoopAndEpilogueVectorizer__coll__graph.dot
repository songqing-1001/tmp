digraph "llvm::InnerLoopAndEpilogueVectorizer"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::InnerLoopAndEpilogue\lVectorizer",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="An extension of the inner loop vectorizer that creates a skeleton for a vectorized loop that has its ..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::InnerLoopVectorizer",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InnerLoopVectorizer.html",tooltip="InnerLoopVectorizer vectorizes loops which contain only one basic block to a specified vectorization ..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ReductionResumeValues" ,fontname="Helvetica"];
  Node3 [label="llvm::SmallMapVector\l\< const llvm::RecurrenceDescriptor\l *, llvm::PHINode *, 4 \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallMapVector.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::MapVector\< const\l llvm::RecurrenceDescriptor\l *, llvm::PHINode *, SmallDenseMap\l\< const llvm::RecurrenceDescriptor\l *, unsigned, N \>, SmallVector\< std\l::pair\< const llvm::RecurrenceDescriptor\l *, llvm::PHINode * \>, N \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::Recurrence\lDescriptor *, llvm::PHINode\l *, SmallDenseMap\< const llvm\l::RecurrenceDescriptor *, unsigned,\l N \>, SmallVector\< std::pair\< const\l llvm::RecurrenceDescriptor *, llvm\l::PHINode * \>, N \> \>" ,fontname="Helvetica"];
  Node5 [label="llvm::MapVector\< KeyT,\l ValueT, MapType, VectorType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip="This class implements a map that also provides access to all stored values in a deterministic order."];
  Node6 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::Recurrence\lDescriptor *, llvm::PHINode\l *, 4 \>" ,fontname="Helvetica"];
  Node6 [label="llvm::SmallMapVector\l\< KeyT, ValueT, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallMapVector.html",tooltip="A MapVector that performs no allocations if smaller than a certain size."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::MapVector\< KeyT,\l ValueT, SmallDenseMap\l\< KeyT, unsigned, N \>,\l SmallVector\< std::pair\l\< KeyT, ValueT \>, N \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MapVector.html",tooltip=" "];
  Node5 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< KeyT, ValueT, SmallDense\lMap\< KeyT, unsigned, N\l \>, SmallVector\< std::pair\l\< KeyT, ValueT \>, N \> \>" ,fontname="Helvetica"];
  Node8 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node8 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node9 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSI" ,fontname="Helvetica"];
  Node9 [label="llvm::ProfileSummaryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ProfileSummaryInfo.html",tooltip="Analysis providing profile information."];
  Node10 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node10 [label="llvm::IRBuilder\< FolderTy,\l InserterTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilder.html",tooltip="This provides a uniform API for creating instructions and inserting them into a basic block: either a..."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::IRBuilderBase",height=0.2,width=0.4,color="red",URL="$classllvm_1_1IRBuilderBase.html",tooltip="Common base class shared among various IRBuilders."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultConstrainedRounding" ,fontname="Helvetica"];
  Node12 [label="RoundingMode",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultOperandBundles" ,fontname="Helvetica"];
  Node13 [label="llvm::ArrayRef\< llvm\l::OperandBundleDefT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node16 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node16 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaximumAlignment" ,fontname="Helvetica"];
  Node18 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasHungOffUses\nNumUserOperands\nSubclassOptionalData\nHasDescriptor\nHasMetadata\nMaxAlignmentExponent\nHasName\nIsUsedByMD" ,fontname="Helvetica"];
  Node19 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node33 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsFPConstrained" ,fontname="Helvetica"];
  Node33 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node56 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Inserter\nFolder" ,fontname="Helvetica"];
  Node56 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node165 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RTChecks" ,fontname="Helvetica"];
  Node165 [label="anonymous:RTChecks",height=0.2,width=0.4,color="grey75",tooltip="Helper struct to manage generating runtime checks for vectorization."];
  Node166 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IVEndValues" ,fontname="Helvetica"];
  Node166 [label="llvm::DenseMap\< llvm\l::PHINode *, llvm::Value * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node167 -> Node166 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node167 [label="llvm::DenseMapBase\l\< DenseMap\< llvm::PHINode\l *, llvm::Value *, DenseMapInfo\l\< llvm::PHINode * \>, llvm::detail\l::DenseMapPair\< llvm::PHINode *,\l llvm::Value * \> \>, llvm::PHINode\l *, llvm::Value *, DenseMapInfo\< llvm\l::PHINode * \>, llvm::detail::DenseMapPair\l\< llvm::PHINode *, llvm::Value * \> \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node67 -> Node166 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::PHINode *,\l llvm::Value * \>" ,fontname="Helvetica"];
  Node67 [label="llvm::DenseMap\< KeyT,\l ValueT, KeyInfoT, BucketT \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DenseMap.html",tooltip=" "];
  Node168 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BFI" ,fontname="Helvetica"];
  Node168 [label="llvm::BlockFrequencyInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockFrequencyInfo.html",tooltip="BlockFrequencyInfo pass uses BlockFrequencyInfoImpl implementation to estimate IR basic block frequen..."];
  Node17 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorTripCount\nTripCount" ,fontname="Helvetica"];
  Node169 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OrigLoop" ,fontname="Helvetica"];
  Node169 [label="llvm::Loop",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Loop.html",tooltip="Represents a single loop in the control flow graph."];
  Node170 -> Node169 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="llvm::LoopBase\< BasicBlock,\l Loop \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LoopBase.html",tooltip=" "];
  Node16 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopScalarPreHeader\nLoopScalarBody\nLoopExitBlock\nLoopVectorPreHeader\nLoopMiddleBlock" ,fontname="Helvetica"];
  Node172 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node172 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node33 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AddedSafetyChecks\nOptForSizeBasedOnProfile" ,fontname="Helvetica"];
  Node173 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node173 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node174 -> Node173 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node174 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node33 -> Node174 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node19 -> Node174 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node194 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node194 [label="llvm::PredicatedScalarEvolution",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PredicatedScalarEvolution.html",tooltip="An interface layer with SCEV used to manage how we see SCEV expressions for values in the context of ..."];
  Node195 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node195 [label="llvm::LoopVectorizationLegality",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationLegality.html",tooltip="LoopVectorizationLegality checks if it is legal to vectorize a loop, and to what vectorization factor..."];
  Node196 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopBypassBlocks" ,fontname="Helvetica"];
  Node196 [label="llvm::SmallVector\<\l llvm::BasicBlock *, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node197 -> Node196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node197 [label="llvm::SmallVectorImpl\l\< llvm::BasicBlock * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node198 -> Node196 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node198 [label="llvm::SmallVectorStorage\l\< llvm::BasicBlock *, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node182 -> Node196 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::BasicBlock\l *, 4 \>" ,fontname="Helvetica"];
  Node182 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node199 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node199 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node200 -> Node199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node200 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node202 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VF\nMinProfitableTripCount" ,fontname="Helvetica"];
  Node202 [label="llvm::ElementCount",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ElementCount.html",tooltip=" "];
  Node203 -> Node202 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node203 [label="llvm::details::FixedOrScalable\lQuantity\< ElementCount, unsigned \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1details_1_1FixedOrScalableQuantity.html",tooltip=" "];
  Node33 -> Node203 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Scalable" ,fontname="Helvetica"];
  Node19 -> Node203 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Quantity" ,fontname="Helvetica"];
  Node19 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UF" ,fontname="Helvetica"];
  Node56 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TTI\nTLI" ,fontname="Helvetica"];
  Node206 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Cost" ,fontname="Helvetica"];
  Node206 [label="llvm::LoopVectorizationCost\lModel",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopVectorizationCostModel.html",tooltip="LoopVectorizationCostModel - estimates the expected speedups due to vectorization."];
  Node207 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ProfitableVFs" ,fontname="Helvetica"];
  Node207 [label="llvm::SmallVector\<\l llvm::VectorizationFactor, 8 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node182 -> Node207 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::VectorizationFactor, 8 \>" ,fontname="Helvetica"];
  Node8 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node210 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DB" ,fontname="Helvetica"];
  Node210 [label="llvm::DemandedBits",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DemandedBits.html",tooltip=" "];
  Node169 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheLoop" ,fontname="Helvetica"];
  Node211 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ElementTypesInLoop" ,fontname="Helvetica"];
  Node211 [label="llvm::SmallPtrSet\<\l llvm::Type *, 16 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node172 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node194 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSE" ,fontname="Helvetica"];
  Node195 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Legal" ,fontname="Helvetica"];
  Node199 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node213 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InterleaveInfo" ,fontname="Helvetica"];
  Node213 [label="llvm::InterleavedAccessInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InterleavedAccessInfo.html",tooltip="Drive the analysis of interleaved memory accesses in the loop."];
  Node56 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheFunction\nTTI\nHints\nTLI" ,fontname="Helvetica"];
  Node214 -> Node206 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VecValuesToIgnore\nValuesToIgnore" ,fontname="Helvetica"];
  Node214 [label="llvm::SmallPtrSet\<\l const llvm::Value *, 16 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallPtrSet.html",tooltip=" "];
  Node216 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PredicatedInstructions" ,fontname="Helvetica"];
  Node216 [label="llvm::SmallVector\<\l llvm::Instruction *, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node217 -> Node216 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node217 [label="llvm::SmallVectorImpl\l\< llvm::Instruction * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node218 -> Node216 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node218 [label="llvm::SmallVectorStorage\l\< llvm::Instruction *, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node182 -> Node216 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Instruction\l *, 4 \>" ,fontname="Helvetica"];
  Node219 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EPI" ,fontname="Helvetica"];
  Node219 [label="llvm::EpilogueLoopVectorizationInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1EpilogueLoopVectorizationInfo.html",tooltip="Encapsulate information regarding vectorization of a loop and its epilogue."];
  Node17 -> Node219 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorTripCount\nTripCount" ,fontname="Helvetica"];
  Node16 -> Node219 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MainLoopIterationCountCheck\nEpilogueIterationCountCheck\nMemSafetyCheck\nSCEVSafetyCheck" ,fontname="Helvetica"];
  Node202 -> Node219 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MainLoopVF\nEpilogueVF" ,fontname="Helvetica"];
  Node19 -> Node219 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MainLoopUF\nEpilogueUF" ,fontname="Helvetica"];
}

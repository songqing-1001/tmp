digraph "llvm::objcopy::macho::Object"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::objcopy::macho\l::Object",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Alloc" ,fontname="Helvetica"];
  Node2 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold, GrowthDelay \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::AllocatorBase\l\< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>" ,fontname="Helvetica"];
  Node4 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node5 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node4 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node8 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node8 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DataInCodeCommandIndex\nTextSegmentCommandIndex\nDyLdInfoCommandIndex\nDylibCodeSignDRsIndex\nExportsTrieCommandIndex\nDySymTabCommandIndex\nLinkerOptimizationHintCommandIndex\nFunctionStartsCommandIndex\nChainedFixupsCommandIndex\nSymTabCommandIndex\n..." ,fontname="Helvetica"];
  Node10 [label="optional\< size_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Exports" ,fontname="Helvetica"];
  Node11 [label="llvm::objcopy::macho\l::ExportInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1ExportInfo.html",tooltip="The location of the export info inside the binary is described by LC_DYLD_INFO load command."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Trie" ,fontname="Helvetica"];
  Node12 [label="llvm::ArrayRef\< uint8_t \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< uint8_t \>" ,fontname="Helvetica"];
  Node13 [label="llvm::ArrayRef\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip="ArrayRef - Represent a constant reference to an array (0 or more elements consecutively in memory),..."];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Header" ,fontname="Helvetica"];
  Node14 [label="llvm::objcopy::macho\l::MachHeader",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1MachHeader.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Flags\nCPUType\nMagic\nSizeOfCmds\nFileType\nCPUSubType\nReserved\nNCmds" ,fontname="Helvetica"];
  Node15 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NewSectionsContents" ,fontname="Helvetica"];
  Node16 [label="llvm::StringSaver",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringSaver.html",tooltip="Saves strings in the provided stable storage and returns a StringRef with a stable character pointer."];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExportsTrie\nFunctionStarts\nDataInCode\nChainedFixups\nDylibCodeSignDRs\nLinkerOptimizationHint" ,fontname="Helvetica"];
  Node17 [label="llvm::objcopy::macho\l::LinkData",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1LinkData.html",tooltip=" "];
  Node12 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Data" ,fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Rebases" ,fontname="Helvetica"];
  Node18 [label="llvm::objcopy::macho\l::RebaseInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1RebaseInfo.html",tooltip="The location of the rebase info inside the binary is described by LC_DYLD_INFO load command."];
  Node12 -> Node18 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Opcodes" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LazyBinds" ,fontname="Helvetica"];
  Node19 [label="llvm::objcopy::macho\l::LazyBindInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1LazyBindInfo.html",tooltip="The location of the lazy bind info inside the binary is described by LC_DYLD_INFO load command."];
  Node12 -> Node19 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Opcodes" ,fontname="Helvetica"];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Binds" ,fontname="Helvetica"];
  Node20 [label="llvm::objcopy::macho\l::BindInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1BindInfo.html",tooltip="The location of the bind info inside the binary is described by LC_DYLD_INFO load command."];
  Node12 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Opcodes" ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SymTable" ,fontname="Helvetica"];
  Node21 [label="llvm::objcopy::macho\l::SymbolTable",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1SymbolTable.html",tooltip="The location of the symbol table inside the binary is described by LC_SYMTAB load command."];
  Node22 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Symbols" ,fontname="Helvetica"];
  Node22 [label="vector\< std::unique\l_ptr\< llvm::objcopy\l::macho::SymbolEntry \> \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StrTable" ,fontname="Helvetica"];
  Node23 [label="llvm::objcopy::macho\l::StringTable",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1StringTable.html",tooltip="The location of the string table inside the binary is described by LC_SYMTAB load command."];
  Node24 -> Node23 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Strings" ,fontname="Helvetica"];
  Node24 [label="vector\< std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node25 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoadCommands" ,fontname="Helvetica"];
  Node25 [label="vector\< llvm::objcopy\l::macho::LoadCommand \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node26 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IndirectSymTable" ,fontname="Helvetica"];
  Node26 [label="llvm::objcopy::macho\l::IndirectSymbolTable",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1IndirectSymbolTable.html",tooltip=" "];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Symbols" ,fontname="Helvetica"];
  Node27 [label="vector\< llvm::objcopy\l::macho::IndirectSymbolEntry \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" WeakBinds" ,fontname="Helvetica"];
  Node28 [label="llvm::objcopy::macho\l::WeakBindInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1objcopy_1_1macho_1_1WeakBindInfo.html",tooltip="The location of the weak bind info inside the binary is described by LC_DYLD_INFO load command."];
  Node12 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Opcodes" ,fontname="Helvetica"];
  Node29 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SwiftVersion" ,fontname="Helvetica"];
  Node29 [label="optional\< uint32_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

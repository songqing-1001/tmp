digraph "llvm::OptionalValueCast&lt; To, From, Derived &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::OptionalValueCast\l\< To, From, Derived \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This cast trait provides std::optional<T> casting."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::CastIsPossible\l\< To, From \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1CastIsPossible.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< To, From \>" ,fontname="Helvetica"];
  Node3 [label="llvm::CastIsPossible\l\< To, From, Enable \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1CastIsPossible.html",tooltip="This struct provides a way to check if a given cast is possible."];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::DefaultDoCastIfPossible\l\< std::optional\< To \>, From,\l detail::SelfType\< void, OptionalValue\lCast\< To, From \> \> \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1DefaultDoCastIfPossible.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::optional\< To\l \>, From, detail::SelfType\l\< void, OptionalValueCast\l\< To, From \> \> \>" ,fontname="Helvetica"];
  Node5 [label="llvm::DefaultDoCastIfPossible\l\< To, From, Derived \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1DefaultDoCastIfPossible.html",tooltip="This cast trait just provides the default implementation of doCastIfPossible to make CastInfo special..."];
  Node1 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< To, From \>" ,fontname="Helvetica"];
  Node6 [label="llvm::OptionalValueCast\l\< To, From \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1OptionalValueCast.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::CastInfo\< To,\l std::optional\< From \> \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1CastInfo_3_01To_00_01std_1_1optional_3_01From_01_4_01_4.html",tooltip="Provide a CastInfo specialized for std::optional<From>."];
}

digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="llvm::iterator_facade\l_base\< mapped_iterator\l\< ItTy, FuncTy \>, std::\literator_traits\< ItTy \>\l::iterator_category, std\l::remove_reference_t\< decltype\l(std::declval\< FuncTy \>()(*std\l::declval\< ItTy \>())) \>, std::iterator\l_traits\< ItTy \>::difference_type, std\l::remove_reference_t\< decltype(std::declval\l\< FuncTy \>()(*std::declval\< ItTy \>())) \> *,\l decltype(std::declval\< FuncTy \>()(*std::declval\l\< ItTy \>())) \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::iterator_adaptor\l_base\< mapped_iterator\l\< ItTy, FuncTy \>, ItTy,\l std::iterator_traits\< ItTy\l \>::iterator_category, std\l::remove_reference_t\< decltype\l(std::declval\< FuncTy \>()(*std\l::declval\< ItTy \>())) \>, std::iterator\l_traits\< ItTy \>::difference_type, std\l::remove_reference_t\< decltype(std::declval\l\< FuncTy \>()(*std::declval\< ItTy \>())) \> *,\l decltype(std::declval\< FuncTy \>()(*std::declval\l\< ItTy \>())) \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::mapped_iterator\l\< ItTy, FuncTy, ReferenceTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1mapped__iterator.html",tooltip=" "];
}

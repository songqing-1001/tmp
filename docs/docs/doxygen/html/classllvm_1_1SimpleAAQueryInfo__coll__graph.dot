digraph "llvm::SimpleAAQueryInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::SimpleAAQueryInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="AAQueryInfo that uses SimpleCaptureInfo."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::AAQueryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAQueryInfo.html",tooltip="This class stores info we want to provide to or retain within an alias query."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CI" ,fontname="Helvetica"];
  Node3 [label="llvm::CaptureInfo",height=0.2,width=0.4,color="black",URL="$structllvm_1_1CaptureInfo.html",tooltip="Virtual base class for providers of capture information."];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AliasCache" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallDenseMap\l\< LocPair, CacheEntry, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseMap.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::DenseMapBase\l\< SmallDenseMap\< LocPair,\l CacheEntry, InlineBuckets,\l DenseMapInfo\< LocPair \>,\l llvm::detail::DenseMapPair\l\< LocPair, CacheEntry \> \>, LocPair,\l CacheEntry, DenseMapInfo\< LocPair\l \>, llvm::detail::DenseMapPair\< LocPair,\l CacheEntry \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::DebugEpochBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DebugEpochBase.html",tooltip="A base class for data structure classes wishing to make iterators (\"handles\") pointing into themselve..."];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SmallDenseMap\< LocPair,\l CacheEntry, InlineBuckets,\l DenseMapInfo\< LocPair \>,\l llvm::detail::DenseMapPair\l\< LocPair, CacheEntry \> \>, LocPair,\l CacheEntry, DenseMapInfo\< LocPair\l \>, llvm::detail::DenseMapPair\< LocPair,\l CacheEntry \> \>" ,fontname="Helvetica"];
  Node7 [label="llvm::DenseMapBase\l\< DerivedT, KeyT, ValueT,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< LocPair, CacheEntry, 8 \>" ,fontname="Helvetica"];
  Node8 [label="llvm::SmallDenseMap\l\< KeyT, ValueT, InlineBuckets,\l KeyInfoT, BucketT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallDenseMap.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::DenseMapBase\l\< SmallDenseMap\< KeyT,\l ValueT, 4, DenseMapInfo\l\< KeyT \>, llvm::detail::\lDenseMapPair\< KeyT, ValueT\l \> \>, KeyT, ValueT, DenseMapInfo\l\< KeyT \>, llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseMapBase.html",tooltip=" "];
  Node6 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< SmallDenseMap\< KeyT,\l ValueT, 4, DenseMapInfo\l\< KeyT \>, llvm::detail::\lDenseMapPair\< KeyT, ValueT\l \> \>, KeyT, ValueT, DenseMapInfo\l\< KeyT \>, llvm::detail::DenseMapPair\l\< KeyT, ValueT \> \>" ,fontname="Helvetica"];
  Node10 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AssumptionBasedResults" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallVector\<\l AAQueryInfo::LocPair, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::SmallVectorImpl\l\< AAQueryInfo::LocPair \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AAQueryInfo::LocPair \>" ,fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node13 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorStorage\l\< AAQueryInfo::LocPair, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node14 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AAQueryInfo::LocPair, N \>" ,fontname="Helvetica"];
  Node15 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node14 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node16 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< AAQueryInfo::LocPair, 4 \>" ,fontname="Helvetica"];
  Node16 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node12 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node14 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node15 -> Node17 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node18 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AAR" ,fontname="Helvetica"];
  Node18 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node19 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumAssumptionUses" ,fontname="Helvetica"];
  Node19 [label="int",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MayBeCrossIteration" ,fontname="Helvetica"];
  Node20 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Depth" ,fontname="Helvetica"];
  Node21 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

digraph "llvm::TargetLoweringBase::IntrinsicInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::TargetLoweringBase\l::IntrinsicInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" align" ,fontname="Helvetica"];
  Node2 [label="llvm::MaybeAlign",height=0.2,width=0.4,color="black",URL="$structllvm_1_1MaybeAlign.html",tooltip="This struct is a compact representation of a valid (power of two) or undefined (0) alignment."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="std::optional\< Align \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" size" ,fontname="Helvetica"];
  Node4 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" memVT" ,fontname="Helvetica"];
  Node5 [label="llvm::EVT",height=0.2,width=0.4,color="black",URL="$structllvm_1_1EVT.html",tooltip="Extended Value Type."];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" fallbackAddressSpace" ,fontname="Helvetica"];
  Node6 [label="optional\< unsigned \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptrVal" ,fontname="Helvetica"];
  Node7 [label="llvm::PointerUnion\l\< const llvm::Value\l *, const llvm::PseudoSource\lValue * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerUnion.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::pointer_union\l_detail::PointerUnionMembers\l\< PointerUnion\< PTs... \>,\l PointerIntPair\< void *, pointer\l_union_detail::bitsRequired(sizeof...\l(PTs)), int, pointer_union_detail::\lPointerUnionUIntTraits\< PTs... \> \>,\l 0, PTs... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1pointer__union__detail_1_1PointerUnionMembers.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< PointerUnion\< PTs...\l \>, PointerIntPair\< void\l *, pointer_union_detail\l::bitsRequired(sizeof...\l(PTs)), int, pointer_union\l_detail::PointerUnionUIntTraits\l\< PTs... \> \>, 0, PTs... \>" ,fontname="Helvetica"];
  Node9 [label="llvm::pointer_union\l_detail::PointerUnionMembers\l\< Derived, ValTy, I, Types \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1pointer__union__detail_1_1PointerUnionMembers.html",tooltip=" "];
  Node10 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const llvm::Value\l *, const llvm::PseudoSource\lValue * \>" ,fontname="Helvetica"];
  Node10 [label="llvm::PointerUnion\l\< PTs \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PointerUnion.html",tooltip="A discriminated union of two or more pointer types, with the discriminator in the low bit of the poin..."];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" offset" ,fontname="Helvetica"];
  Node11 [label="int",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" flags" ,fontname="Helvetica"];
  Node12 [label="Flags",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" opc" ,fontname="Helvetica"];
  Node13 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

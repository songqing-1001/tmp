digraph "llvm::TargetLowering::CallLoweringInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::TargetLowering\l::CallLoweringInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This structure contains all information that is necessary for lowering calls."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Outs" ,fontname="Helvetica"];
  Node2 [label="llvm::SmallVector\<\l llvm::ISD::OutputArg, 32 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::SmallVectorImpl\l\< llvm::ISD::OutputArg \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::OutputArg \>" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node5 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SmallVectorStorage\l\< llvm::ISD::OutputArg, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node6 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::OutputArg, N \>" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node6 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node8 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::OutputArg,\l 32 \>" ,fontname="Helvetica"];
  Node8 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node4 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RetTy" ,fontname="Helvetica"];
  Node10 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node10 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node11 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node12 [label="ArgListTy",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OutVals" ,fontname="Helvetica"];
  Node13 [label="llvm::SmallVector\<\l llvm::SDValue, 32 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::SmallVectorImpl\l\< llvm::SDValue \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node4 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SDValue \>" ,fontname="Helvetica"];
  Node15 -> Node13 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::SmallVectorStorage\l\< llvm::SDValue, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SDValue, N \>" ,fontname="Helvetica"];
  Node8 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SDValue, 32 \>" ,fontname="Helvetica"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Callee\nChain" ,fontname="Helvetica"];
  Node16 [label="llvm::SDValue",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDValue.html",tooltip="Unlike LLVM values, Selection DAG nodes may return multiple values as the result of a computation."];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DAG" ,fontname="Helvetica"];
  Node17 [label="llvm::SelectionDAG",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SelectionDAG.html",tooltip="This is used to represent a portion of an LLVM function in a low-level Data Dependence DAG representa..."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NewNodesMustHaveLegalTypes" ,fontname="Helvetica"];
  Node18 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Alignment\nMMOFlags\nRanges\ndl\nPtr\nAAInfo\nPtrInfo\nChain" ,fontname="Helvetica"];
  Node19 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxRecursionDepth" ,fontname="Helvetica"];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InVals" ,fontname="Helvetica"];
  Node20 [label="llvm::SmallVector\<\l llvm::SDValue, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node14 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node20 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::SDValue, 4 \>" ,fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RetSExt\nIsConvergent\nIsTailCall\nIsInReg\nIsPatchPoint\nIsPostTypeLegalization\nIsVarArg\nIsPreallocated\nIsReturnValueUsed\nNoMerge\n..." ,fontname="Helvetica"];
  Node21 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DL" ,fontname="Helvetica"];
  Node21 [label="llvm::SDLoc",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SDLoc.html",tooltip="Wrapper class for IR location info (IR ordering and DebugLoc) to be passed into SDNode creation funct..."];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CFIType\nCB" ,fontname="Helvetica"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumFixedArgs\nCallConv" ,fontname="Helvetica"];
  Node22 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ins" ,fontname="Helvetica"];
  Node22 [label="llvm::SmallVector\<\l llvm::ISD::InputArg, 32 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::SmallVectorImpl\l\< llvm::ISD::InputArg \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node4 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::InputArg \>" ,fontname="Helvetica"];
  Node24 -> Node22 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="llvm::SmallVectorStorage\l\< llvm::ISD::InputArg, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::InputArg, N \>" ,fontname="Helvetica"];
  Node8 -> Node22 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::ISD::InputArg,\l 32 \>" ,fontname="Helvetica"];
}

digraph "llvm::InstCombiner"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::InstCombiner",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The core instruction combiner logic."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AC" ,fontname="Helvetica"];
  Node2 [label="llvm::AssumptionCache",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AssumptionCache.html",tooltip="A cache of @llvm.assume calls within a function."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PSI" ,fontname="Helvetica"];
  Node3 [label="llvm::ProfileSummaryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ProfileSummaryInfo.html",tooltip="Analysis providing profile information."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node4 [label="llvm::IRBuilder\< TargetFolder,\l IRBuilderCallbackInserter \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilder.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::IRBuilderBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilderBase.html",tooltip="Common base class shared among various IRBuilders."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultConstrainedRounding" ,fontname="Helvetica"];
  Node6 [label="RoundingMode",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultOperandBundles" ,fontname="Helvetica"];
  Node7 [label="llvm::ArrayRef\< llvm\l::OperandBundleDefT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::OperandBundleDefT \>" ,fontname="Helvetica"];
  Node8 [label="llvm::ArrayRef\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip="ArrayRef - Represent a constant reference to an array (0 or more elements consecutively in memory),..."];
  Node9 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InsertPt" ,fontname="Helvetica"];
  Node9 [label="iterator",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BB" ,fontname="Helvetica"];
  Node10 [label="llvm::BasicBlock",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BasicBlock.html",tooltip="LLVM Basic Block Representation."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaximumAlignment" ,fontname="Helvetica"];
  Node12 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasHungOffUses\nNumUserOperands\nSubclassOptionalData\nHasDescriptor\nHasMetadata\nMaxAlignmentExponent\nHasName\nIsUsedByMD" ,fontname="Helvetica"];
  Node13 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::ilist_node_with\l_parent\< BasicBlock,\l Function \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::ilist_node\< BasicBlock,\l Options... \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node23 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Function \>" ,fontname="Helvetica"];
  Node23 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node27 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsFPConstrained" ,fontname="Helvetica"];
  Node27 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node28 [label="llvm::LLVMContext",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LLVMContext.html",tooltip="This is an important class for using LLVM in a threaded context."];
  Node29 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pImpl" ,fontname="Helvetica"];
  Node29 [label="llvm::LLVMContextImpl",height=0.2,width=0.4,color="red",URL="$classllvm_1_1LLVMContextImpl.html",tooltip=" "];
  Node30 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Alloc" ,fontname="Helvetica"];
  Node30 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold, GrowthDelay \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node38 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" X86_MMXTy\nMetadataTy\nLabelTy\nHalfTy\nX86_AMXTy\nVoidTy\nDoubleTy\nTokenTy\nPPC_FP128Ty\nFloatTy\n..." ,fontname="Helvetica"];
  Node38 [label="llvm::Type",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Type.html",tooltip="The instances of the Type class are immutable: once they are created, they are never changed."];
  Node38 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ContainedTys" ,fontname="Helvetica"];
  Node13 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumContainedTys" ,fontname="Helvetica"];
  Node27 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiscardValueNames\nMisExpectWarningRequested\nDiagnosticsHotnessRequested\nRespectDiagnosticFilters" ,fontname="Helvetica"];
  Node13 -> Node29 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NamedStructTypesUniqueID" ,fontname="Helvetica"];
  Node155 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultConstrainedExcept" ,fontname="Helvetica"];
  Node155 [label="ExceptionBehavior",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node156 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FMF" ,fontname="Helvetica"];
  Node156 [label="llvm::FastMathFlags",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FastMathFlags.html",tooltip="Convenience struct for specifying and reasoning about fast-math flags."];
  Node157 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultFPMathTag" ,fontname="Helvetica"];
  Node157 [label="llvm::MDNode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MDNode.html",tooltip="Metadata node."];
  Node158 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="llvm::Metadata",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Metadata.html",tooltip="Root of the metadata hierarchy."];
  Node13 -> Node158 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Storage\nSubclassData1\nSubclassData32\nSubclassData16" ,fontname="Helvetica"];
  Node50 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Inserter\nFolder" ,fontname="Helvetica"];
  Node50 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node159 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TargetFolder, IRBuilder\lCallbackInserter \>" ,fontname="Helvetica"];
  Node159 [label="llvm::IRBuilder\< FolderTy,\l InserterTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IRBuilder.html",tooltip="This provides a uniform API for creating instructions and inserting them into a basic block: either a..."];
  Node5 -> Node159 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MaxArraySizeForCombine" ,fontname="Helvetica"];
  Node160 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BFI" ,fontname="Helvetica"];
  Node160 [label="llvm::BlockFrequencyInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BlockFrequencyInfo.html",tooltip="BlockFrequencyInfo pass uses BlockFrequencyInfoImpl implementation to estimate IR basic block frequen..."];
  Node161 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AA" ,fontname="Helvetica"];
  Node161 [label="llvm::AAResults",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AAResults.html",tooltip=" "];
  Node162 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ORE" ,fontname="Helvetica"];
  Node162 [label="llvm::OptimizationRemark\lEmitter",height=0.2,width=0.4,color="black",URL="$classllvm_1_1OptimizationRemarkEmitter.html",tooltip="The optimization diagnostic interface."];
  Node163 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TLI" ,fontname="Helvetica"];
  Node163 [label="llvm::TargetLibraryInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1TargetLibraryInfo.html",tooltip="Provides information about what library functions are available for the current target."];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MadeIRChange" ,fontname="Helvetica"];
  Node164 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DT" ,fontname="Helvetica"];
  Node164 [label="llvm::DominatorTree",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTree.html",tooltip="Concrete subclass of DominatorTreeBase that is used to compute a normal dominator tree."];
  Node165 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="llvm::DominatorTreeBase\l\< BasicBlock, false \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip=" "];
  Node166 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node166 [label="ParentPtr",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node167 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node167 [label="llvm::SmallVector\<\l BasicBlock *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node168 -> Node167 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="llvm::SmallVectorImpl\l\< BasicBlock * \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node170 -> Node167 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="llvm::SmallVectorStorage\l\< BasicBlock *, N \>",height=0.2,width=0.4,color="red",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node173 -> Node167 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node173 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node27 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node175 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node175 [label="llvm::DomTreeNodeBase\l\< BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip=" "];
  Node176 -> Node175 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock \>" ,fontname="Helvetica"];
  Node176 [label="llvm::DomTreeNodeBase\l\< NodeT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DomTreeNodeBase.html",tooltip="Base class for the actual dominator tree node."];
  Node13 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node177 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Insert\nDelete" ,fontname="Helvetica"];
  Node177 [label="static constexpr UpdateKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node178 -> Node165 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node178 [label="unique_ptr\< DomTreeNodeBase\l\< BasicBlock \> \>\>",height=0.2,width=0.4,color="black",URL="$classDenseMap_3_01BasicBlock_01_5_00_01std_1_1unique__ptr_3_01DomTreeNodeBase_3_01BasicBlock_01_4_01_4_4.html",tooltip=" "];
  Node179 -> Node165 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, false \>" ,fontname="Helvetica"];
  Node179 [label="llvm::DominatorTreeBase\l\< NodeT, IsPostDom \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DominatorTreeBase.html",tooltip="Core dominator tree base class."];
  Node180 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RootNode" ,fontname="Helvetica"];
  Node180 [label="DomTreeNodeBase\< NodeT \> *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node181 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DomTreeNodes" ,fontname="Helvetica"];
  Node181 [label="unique_ptr\< DomTreeNodeBase\l\< NodeT \> \>\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node166 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Parent" ,fontname="Helvetica"];
  Node182 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Roots" ,fontname="Helvetica"];
  Node182 [label="llvm::SmallVector\<\l NodeT *, IsPostDom\l ? 4 :1 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node173 -> Node182 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeT *, IsPostDom\l ? 4 :1 \>" ,fontname="Helvetica"];
  Node27 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DFSInfoValid\nIsPostDominator" ,fontname="Helvetica"];
  Node13 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SlowQueries" ,fontname="Helvetica"];
  Node177 -> Node179 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Insert\nDelete" ,fontname="Helvetica"];
  Node185 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Worklist" ,fontname="Helvetica"];
  Node185 [label="llvm::InstructionWorklist",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InstructionWorklist.html",tooltip="InstructionWorklist - This is the worklist management logic for InstCombine and other simplification ..."];
  Node186 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LI" ,fontname="Helvetica"];
  Node186 [label="llvm::LoopInfo",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfo.html",tooltip=" "];
  Node187 -> Node186 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node187 [label="llvm::LoopInfoBase\l\< BasicBlock, Loop \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip=" "];
  Node188 -> Node187 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BasicBlock, Loop \>" ,fontname="Helvetica"];
  Node188 [label="llvm::LoopInfoBase\l\< BlockT, LoopT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LoopInfoBase.html",tooltip="This class builds and contains all of the top-level loop structures in the specified function."];
  Node50 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MinimizeSize\nDL\nSQ" ,fontname="Helvetica"];
}

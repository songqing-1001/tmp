digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="llvm::iterator_facade\l_base\< ChildIteratorType,\l typename std::iterator\l_traits\< SmallVector\< BoUpSLP\l::EdgeInfo, 1 \>::iterator \>\l::iterator_category, typename\l std::iterator_traits\< SmallVector\l\< BoUpSLP::EdgeInfo, 1 \>::iterator\l \>::value_type, typename std::iterator\l_traits\< SmallVector\< BoUpSLP::EdgeInfo,\l 1 \>::iterator \>::difference_type, std::\lconditional_t\< std::is_same\< typename std\l::iterator_traits\< SmallVector\< BoUpSLP::EdgeInfo,\l 1 \>::iterator \>::value_type, typename std::iterator\l_traits\< SmallVector\< BoUpSLP::EdgeInfo, 1 \>::iterator\l \>::value_type \>::value, typename std::iterator_traits\l\< SmallVector\< BoUpSLP::EdgeInfo, 1 \>::iterator \>::pointer,\l typename std::iterator_traits\< SmallVector\< BoUpSLP::EdgeInfo,\l 1 \>::iterator \>::value_type * \>, std::conditional_t\< std::is\l_same\< typename std::iterator_traits\< SmallVector\< BoUpSLP::EdgeInfo,\l 1 \>::iterator \>::value_type, typename std::iterator_traits\< SmallVector\l\< BoUpSLP::EdgeInfo, 1 \>::iterator \>::value_type \>::value, typename std\l::iterator_traits\< SmallVector\< BoUpSLP::EdgeInfo, 1 \>::iterator \>::reference,\l typename std::iterator_traits\< SmallVector\< BoUpSLP::EdgeInfo, 1 \>::iterator \>::value_type & \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__facade__base.html",tooltip=" "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="llvm::iterator_adaptor\l_base\< ChildIteratorType,\l SmallVector\< BoUpSLP::EdgeInfo,\l 1 \>::iterator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1iterator__adaptor__base.html",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::GraphTraits\<\l BoUpSLP * \>::ChildIteratorType",height=0.2,width=0.4,color="black",URL="$structllvm_1_1GraphTraits_3_01BoUpSLP_01_5_01_4_1_1ChildIteratorType.html",tooltip="Add the VectorizableTree to the index iterator to be able to return TreeEntry pointers."];
}

digraph "llvm::orc::SimpleRemoteEPC::Setup"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::orc::SimpleRemoteEPC\l::Setup",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A setup object containing callbacks to construct a memory manager and memory access object."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CreateMemoryAccess" ,fontname="Helvetica"];
  Node2 [label="llvm::unique_function\l\< llvm::Expected \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1unique__function.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::Expected \>" ,fontname="Helvetica"];
  Node3 [label="llvm::unique_function\l\< FunctionT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1unique__function.html",tooltip="unique_function is a type-erasing functor similar to std::function."];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CreateMemoryManager" ,fontname="Helvetica"];
  Node4 [label="llvm::unique_function\l\< CreateMemoryManagerFn \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1unique__function.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< CreateMemoryManagerFn \>" ,fontname="Helvetica"];
}

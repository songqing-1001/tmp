digraph "llvm::TimeTraceProfiler"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::TimeTraceProfiler",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Entries" ,fontname="Helvetica"];
  Node2 [label="llvm::SmallVector\<\l TimeTraceProfilerEntry,\l 128 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::SmallVectorImpl\l\< TimeTraceProfilerEntry \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TimeTraceProfilerEntry \>" ,fontname="Helvetica"];
  Node4 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node5 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::SmallVectorStorage\l\< TimeTraceProfilerEntry, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node6 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TimeTraceProfilerEntry, N \>" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node6 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node8 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TimeTraceProfilerEntry,\l 128 \>" ,fontname="Helvetica"];
  Node8 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node4 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 -> Node9 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Stack" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallVector\<\l TimeTraceProfilerEntry, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node3 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TimeTraceProfilerEntry,\l 16 \>" ,fontname="Helvetica"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ThreadName" ,fontname="Helvetica"];
  Node11 [label="llvm::SmallString\< 0 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallString.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::SmallVector\<\l char, InternalLen \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="llvm::SmallVectorImpl\l\< char \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node4 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char \>" ,fontname="Helvetica"];
  Node14 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::SmallVectorStorage\l\< char, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node6 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node7 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char, N \>" ,fontname="Helvetica"];
  Node8 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< char, InternalLen \>" ,fontname="Helvetica"];
  Node15 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< 0 \>" ,fontname="Helvetica"];
  Node15 [label="llvm::SmallString\<\l InternalLen \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallString.html",tooltip="SmallString - A SmallString is just a SmallVector with methods and accessors that make it work better..."];
  Node12 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CountAndTotalPerName" ,fontname="Helvetica"];
  Node16 [label="llvm::StringMap\< CountAnd\lDurationType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node18 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node18 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node19 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumItems\nNumBuckets\nItemSize\nNumTombstones" ,fontname="Helvetica"];
  Node19 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node20 -> Node17 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TombstoneIntVal" ,fontname="Helvetica"];
  Node20 [label="uintptr_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node21 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node23 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node24 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node25 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node25 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node26 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node16 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< CountAndDurationType \>" ,fontname="Helvetica"];
  Node27 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node17 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node27 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BeginningOfTime\nPid\nTid\nProcName\nStartTime\nTimeTraceGranularity" ,fontname="Helvetica"];
  Node28 [label="const",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

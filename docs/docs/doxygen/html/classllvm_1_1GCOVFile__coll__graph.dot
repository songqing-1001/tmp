digraph "llvm::GCOVFile"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::GCOVFile",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="GCOVFile - Collects coverage information for one pair of coverage file (.gcno and ...."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" version" ,fontname="Helvetica"];
  Node2 [label="GCOVVersion",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" identToFunction" ,fontname="Helvetica"];
  Node3 [label="map\< uint32_t, llvm\l::GCOVFunction * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" filenames" ,fontname="Helvetica"];
  Node4 [label="vector\< std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" functions" ,fontname="Helvetica"];
  Node5 [label="llvm::SmallVector\<\l std::unique_ptr\< llvm\l::GCOVFunction \>, 16 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::SmallVectorImpl\l\< std::unique_ptr\< llvm\l::GCOVFunction \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction \> \>" ,fontname="Helvetica"];
  Node7 [label="llvm::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVectorImpl.html",tooltip="This class consists of common code factored out of the SmallVector class to reduce code duplication b..."];
  Node8 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::SmallVectorStorage\l\< std::unique_ptr\< llvm\l::GCOVFunction \>, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node9 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction\l \>, N \>" ,fontname="Helvetica"];
  Node10 [label="llvm::SmallVectorStorage\l\< T, N \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip="Storage for the SmallVector elements."];
  Node9 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node11 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::unique_ptr\<\l llvm::GCOVFunction\l \>, 16 \>" ,fontname="Helvetica"];
  Node11 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip="This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small."];
  Node7 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="llvm::SmallVectorStorage\l\< T, CalculateSmallVectorDefault\lInlinedElements\< T \>::value \>",height=0.2,width=0.4,color="black",URL="$structllvm_1_1SmallVectorStorage.html",tooltip=" "];
  Node9 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InlineElts" ,fontname="Helvetica"];
  Node10 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< T, CalculateSmallVector\lDefaultInlinedElements\l\< T \>::value \>" ,fontname="Helvetica"];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" checksum\nrunCount\nprogramCount" ,fontname="Helvetica"];
  Node13 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node14 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" filenameToIdx" ,fontname="Helvetica"];
  Node14 [label="llvm::StringMap\< unsigned \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node16 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node17 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumItems\nNumBuckets\nItemSize\nNumTombstones" ,fontname="Helvetica"];
  Node17 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TombstoneIntVal" ,fontname="Helvetica"];
  Node18 [label="uintptr_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node22 -> Node21 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node22 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node23 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node23 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node24 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node25 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< unsigned \>" ,fontname="Helvetica"];
  Node25 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node15 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node25 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GCNOInitialized" ,fontname="Helvetica"];
  Node26 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node27 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cwd" ,fontname="Helvetica"];
  Node27 [label="llvm::StringRef",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringRef.html",tooltip="StringRef - Represent a constant reference to a string, i.e."];
  Node28 -> Node27 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" npos" ,fontname="Helvetica"];
  Node28 [label="size_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

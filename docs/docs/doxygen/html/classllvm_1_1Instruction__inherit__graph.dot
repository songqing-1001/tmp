digraph "llvm::Instruction"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::Instruction",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::User",height=0.2,width=0.4,color="black",URL="$classllvm_1_1User.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="llvm::Value",height=0.2,width=0.4,color="black",URL="$classllvm_1_1Value.html",tooltip="LLVM Value Representation."];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="llvm::ilist_node_with\l_parent\< Instruction,\l BasicBlock \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="llvm::ilist_node\< Instruction,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< Instruction,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< Instruction,\l Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< Instruction,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node8 [label="llvm::ilist_node_impl\l\< OptionsT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip="Implementation for an ilist node."];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="OptionsT::node_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, Options... \>" ,fontname="Helvetica"];
  Node10 [label="llvm::ilist_node\< T,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ilist_detail::compute\l_node_options::type \l::node_base_type\< T, Options... \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node11 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< T, Options...\l \>::type \>" ,fontname="Helvetica"];
  Node13 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Instruction, BasicBlock \>" ,fontname="Helvetica"];
  Node13 [label="llvm::ilist_node_with\l_parent\< NodeTy, ParentTy,\l Options \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__with__parent.html",tooltip="An ilist node that can access its parent list."];
  Node14 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="llvm::ilist_node\< NodeTy,\l Options... \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::ilist_node_impl\l\< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ilist__node__impl.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type ::\lnode_base_type",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node15 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ilist_detail::compute\l_node_options\< NodeTy,\l Options... \>::type \>" ,fontname="Helvetica"];
  Node10 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< NodeTy, Options... \>" ,fontname="Helvetica"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="llvm::AtomicCmpXchgInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicCmpXchgInst.html",tooltip="An instruction that atomically checks whether a specified value is in a memory location,..."];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="llvm::AtomicRMWInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AtomicRMWInst.html",tooltip="an instruction that atomically reads a memory location, combines it with another value,..."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::BinaryOperator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BinaryOperator.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="llvm::BranchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BranchInst.html",tooltip="Conditional or Unconditional Branch instruction."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="llvm::CallBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallBase.html",tooltip="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..."];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="llvm::CallBrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CallBrInst.html",tooltip="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..."];
  Node21 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="llvm::CallInst",height=0.2,width=0.4,color="red",URL="$classllvm_1_1CallInst.html",tooltip="This class represents a function call, abstracting a target machine's calling convention."];
  Node21 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="llvm::GCStatepointInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GCStatepointInst.html",tooltip="Represents a gc.statepoint intrinsic call."];
  Node21 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="llvm::InvokeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InvokeInst.html",tooltip="Invoke instruction."];
  Node1 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="llvm::CatchReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchReturnInst.html",tooltip=" "];
  Node1 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="llvm::CatchSwitchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchSwitchInst.html",tooltip=" "];
  Node1 -> Node118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="llvm::CleanupReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CleanupReturnInst.html",tooltip=" "];
  Node1 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="llvm::CmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CmpInst.html",tooltip="This class is the base class for the comparison instructions."];
  Node119 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="llvm::FCmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FCmpInst.html",tooltip="This instruction compares its operands according to the predicate given to the constructor."];
  Node119 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="llvm::ICmpInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ICmpInst.html",tooltip="This instruction compares its operands according to the predicate given to the constructor."];
  Node1 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="llvm::ExtractElementInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ExtractElementInst.html",tooltip="This instruction extracts a single (scalar) element from a VectorType value."];
  Node1 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="llvm::FenceInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1FenceInst.html",tooltip="An instruction for ordering other memory operations."];
  Node1 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="llvm::FuncletPadInst",height=0.2,width=0.4,color="red",URL="$classllvm_1_1FuncletPadInst.html",tooltip=" "];
  Node124 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="llvm::CatchPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1CatchPadInst.html",tooltip=" "];
  Node1 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="llvm::GetElementPtrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1GetElementPtrInst.html",tooltip="an instruction for type-safe pointer arithmetic to access elements of arrays and structs"];
  Node1 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="llvm::IndirectBrInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IndirectBrInst.html",tooltip="Indirect Branch Instruction."];
  Node1 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="llvm::InsertElementInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertElementInst.html",tooltip="This instruction inserts a single (scalar) element into a VectorType value."];
  Node1 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="llvm::InsertValueInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1InsertValueInst.html",tooltip="This instruction inserts a struct field of array element value into an aggregate value."];
  Node1 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="llvm::LandingPadInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1LandingPadInst.html",tooltip="The landingpad instruction holds all of the information necessary to generate correct exception handl..."];
  Node1 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="llvm::PHINode",height=0.2,width=0.4,color="black",URL="$classllvm_1_1PHINode.html",tooltip=" "];
  Node1 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="llvm::ResumeInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ResumeInst.html",tooltip="Resume the propagation of an exception."];
  Node1 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="llvm::ReturnInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ReturnInst.html",tooltip="Return a value (possibly void), from a function."];
  Node1 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="llvm::SelectInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SelectInst.html",tooltip="This class represents the LLVM 'select' instruction."];
  Node1 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="llvm::ShuffleVectorInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ShuffleVectorInst.html",tooltip="This instruction constructs a fixed permutation of two input vectors."];
  Node1 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="llvm::StoreInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StoreInst.html",tooltip="An instruction for storing to memory."];
  Node1 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="llvm::SwitchInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SwitchInst.html",tooltip="Multiway switch."];
  Node1 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="llvm::UnaryInstruction",height=0.2,width=0.4,color="red",URL="$classllvm_1_1UnaryInstruction.html",tooltip=" "];
  Node1 -> Node160 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="llvm::UnreachableInst",height=0.2,width=0.4,color="black",URL="$classllvm_1_1UnreachableInst.html",tooltip="This function has undefined behavior."];
}

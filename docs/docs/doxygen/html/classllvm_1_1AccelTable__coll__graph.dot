digraph "llvm::AccelTable&lt; DataT &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="llvm::AccelTable\< DataT \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This class holds an abstract representation of an Accelerator Table, consisting of a sequence of buck..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="llvm::AccelTableBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AccelTableBase.html",tooltip="A base class holding non-template-dependant functionality of the AccelTable class."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Hashes" ,fontname="Helvetica"];
  Node3 [label="vector\< HashData * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Hash" ,fontname="Helvetica"];
  Node4 [label="HashFn *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Allocator" ,fontname="Helvetica"];
  Node5 [label="llvm::BumpPtrAllocatorImpl\l\< AllocatorT, SlabSize,\l SizeThreshold, GrowthDelay \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1BumpPtrAllocatorImpl.html",tooltip="Allocate memory in an ever growing pool, as if by bump-pointer."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="llvm::AllocatorBase\l\< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node7 -> Node6 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BumpPtrAllocatorImpl\l\< MallocAllocator, 4096,\l 4096, 128 \> \>" ,fontname="Helvetica"];
  Node7 [label="llvm::AllocatorBase\l\< DerivedT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM-style allocators."];
  Node8 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="llvm::detail::AllocatorHolder\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="llvm::MallocAllocator",height=0.2,width=0.4,color="black",URL="$classllvm_1_1MallocAllocator.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="llvm::AllocatorBase\l\< MallocAllocator \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1AllocatorBase.html",tooltip=" "];
  Node7 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node11 -> Node8 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< MallocAllocator \>" ,fontname="Helvetica"];
  Node11 [label="llvm::detail::AllocatorHolder\l\< Alloc \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node12 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Alloc",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UniqueHashCount\nBucketCount" ,fontname="Helvetica"];
  Node13 [label="uint32_t",height=0.2,width=0.4,color="black",URL="$classuint32__t.html",tooltip=" "];
  Node14 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Entries" ,fontname="Helvetica"];
  Node14 [label="llvm::StringMap\< HashData,\l BumpPtrAllocator & \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="llvm::StringMapImpl",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapImpl.html",tooltip="StringMapImpl - This is the base class of StringMap that is shared among all of its instantiations."];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TheTable" ,fontname="Helvetica"];
  Node16 [label="llvm::StringMapEntryBase",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMapEntryBase.html",tooltip="StringMapEntryBase - Shared base class of StringMapEntry instances."];
  Node17 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumItems\nNumBuckets\nItemSize\nNumTombstones" ,fontname="Helvetica"];
  Node17 [label="unsigned",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TombstoneIntVal" ,fontname="Helvetica"];
  Node18 [label="uintptr_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node14 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="llvm::detail::AllocatorHolder\l\< BumpPtrAllocator & \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1detail_1_1AllocatorHolder.html",tooltip=" "];
  Node20 -> Node19 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="BumpPtrAllocator &",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node19 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< BumpPtrAllocator & \>" ,fontname="Helvetica"];
  Node21 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< HashData, BumpPtrAllocator & \>" ,fontname="Helvetica"];
  Node21 [label="llvm::StringMap\< ValueTy,\l AllocatorTy \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1StringMap.html",tooltip="StringMap - This is an unconventional map that is specialized for handling keys that are \"strings\",..."];
  Node15 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Buckets" ,fontname="Helvetica"];
  Node22 [label="vector\< HashList \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

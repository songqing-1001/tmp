digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node4451 [label="clang::APNumericStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1APNumericStorage.html",tooltip="Used by IntegerLiteral/FloatingLiteral to store the numeric without leaking memory."];
  Node4451 -> Node4452 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4452 [label="clang::APFloatStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1APFloatStorage.html",tooltip=" "];
  Node4452 -> Node1101 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node1101 [label="clang::FloatingLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1FloatingLiteral.html",tooltip=" "];
  Node4451 -> Node4453 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4453 [label="clang::APIntStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1APIntStorage.html",tooltip=" "];
  Node4453 -> Node1100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1100 [label="clang::FixedPointLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1FixedPointLiteral.html",tooltip=" "];
  Node4453 -> Node1107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1107 [label="clang::IntegerLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1IntegerLiteral.html",tooltip=" "];
  Node4307 [label="clang::AttributeCommonInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1AttributeCommonInfo.html",tooltip=" "];
  Node4307 -> Node4308 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4308 [label="clang::Attr",height=0.2,width=0.4,color="black",URL="$classclang_1_1Attr.html",tooltip="Attr - This represents one attribute."];
  Node4308 -> Node4309 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4309 [label="clang::InheritableAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritableAttr.html",tooltip=" "];
  Node4309 -> Node4310 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4310 [label="clang::DeclOrStmtAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclOrStmtAttr.html",tooltip=" "];
  Node4309 -> Node4311 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4311 [label="clang::HLSLAnnotationAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1HLSLAnnotationAttr.html",tooltip=" "];
  Node4309 -> Node4312 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4312 [label="clang::InheritableParamAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritableParamAttr.html",tooltip=" "];
  Node4312 -> Node4313 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4313 [label="clang::ParameterABIAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParameterABIAttr.html",tooltip="A parameter attribute which changes the argument-passing ABI rule for the parameter."];
  Node4308 -> Node4314 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4314 [label="clang::StmtAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1StmtAttr.html",tooltip=" "];
  Node4308 -> Node4315 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4315 [label="clang::TypeAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeAttr.html",tooltip=" "];
  Node4307 -> Node550 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node550 [label="clang::ParsedAttr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParsedAttr.html",tooltip="ParsedAttr - Represents a syntactic attribute."];
  Node3801 [label="clang::ConceptReference",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConceptReference.html",tooltip="Common data class for constructs that reference concepts with template arguments."];
  Node3801 -> Node1074 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1074 [label="clang::ConceptSpecializationExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConceptSpecializationExpr.html",tooltip="Represents the specialization of a concept - evaluates to a prvalue of type bool."];
  Node3801 -> Node3802 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3802 [label="clang::TypeConstraint",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeConstraint.html",tooltip=" "];
  Node3577 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node3577 -> Node3578 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3578 [label="clang::AccessSpecDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1AccessSpecDecl.html",tooltip="Represents an access specifier followed by colon ':'."];
  Node3577 -> Node3550 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3550 [label="clang::BlockDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BlockDecl.html",tooltip="Represents a block literal declaration, which is like an unnamed FunctionDecl."];
  Node3577 -> Node465 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node465 [label="clang::CapturedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CapturedDecl.html",tooltip="Represents the body of a CapturedStmt, and serves as its DeclContext."];
  Node3577 -> Node3579 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3579 [label="clang::ClassScopeFunction\lSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ClassScopeFunctionSpecializationDecl.html",tooltip="Declaration of a function specialization at template class scope."];
  Node3577 -> Node3580 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3580 [label="clang::EmptyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1EmptyDecl.html",tooltip="Represents an empty-declaration."];
  Node3577 -> Node3551 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3551 [label="clang::ExportDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExportDecl.html",tooltip="Represents a standard C++ module export declaration."];
  Node3577 -> Node3552 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3552 [label="clang::ExternCContextDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExternCContextDecl.html",tooltip="Declaration context for names declared as extern \"C\" in C++."];
  Node3577 -> Node3581 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3581 [label="clang::FileScopeAsmDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FileScopeAsmDecl.html",tooltip=" "];
  Node3577 -> Node495 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node495 [label="clang::FriendDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FriendDecl.html",tooltip="FriendDecl - Represents the declaration of a friend entity, which can be a function,..."];
  Node3577 -> Node3582 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3582 [label="clang::FriendTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FriendTemplateDecl.html",tooltip="Declaration of a friend template."];
  Node3577 -> Node503 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node503 [label="clang::ImplicitConceptSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImplicitConceptSpecializationDecl.html",tooltip=" "];
  Node3577 -> Node504 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node504 [label="clang::ImportDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImportDecl.html",tooltip="Describes a module import declaration, which makes the contents of the named module visible in the cu..."];
  Node3577 -> Node2562 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2562 [label="clang::LifetimeExtendedTemporaryDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LifetimeExtendedTemporaryDecl.html",tooltip="Implicit declaration of a temporary that was materialized by a MaterializeTemporaryExpr and lifetime-..."];
  Node3577 -> Node3554 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3554 [label="clang::LinkageSpecDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LinkageSpecDecl.html",tooltip="Represents a linkage specification."];
  Node3577 -> Node3583 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3583 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node3583 -> Node3584 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3584 [label="clang::BaseUsingDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BaseUsingDecl.html",tooltip="Represents a C++ declaration that introduces decls from somewhere else."];
  Node3584 -> Node2550 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2550 [label="clang::UsingDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingDecl.html",tooltip="Represents a C++ using-declaration."];
  Node3584 -> Node2548 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2548 [label="clang::UsingEnumDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingEnumDecl.html",tooltip="Represents a C++ using-enum-declaration."];
  Node3583 -> Node3553 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3553 [label="clang::HLSLBufferDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1HLSLBufferDecl.html",tooltip="HLSLBufferDecl - Represent a cbuffer or tbuffer declaration."];
  Node3583 -> Node3585 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3585 [label="clang::LabelDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LabelDecl.html",tooltip="Represents the declaration of a label."];
  Node3583 -> Node1911 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1911 [label="clang::NamespaceAliasDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamespaceAliasDecl.html",tooltip="Represents a C++ namespace alias."];
  Node3583 -> Node1909 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1909 [label="clang::NamespaceDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamespaceDecl.html",tooltip="Represent a C++ namespace."];
  Node3583 -> Node3586 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3586 [label="clang::ObjCCompatibleAliasDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCCompatibleAliasDecl.html",tooltip="ObjCCompatibleAliasDecl - Represents alias of a class."];
  Node3583 -> Node3555 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3555 [label="clang::ObjCContainerDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCContainerDecl.html",tooltip="ObjCContainerDecl - Represents a container for method declarations."];
  Node3555 -> Node3556 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3556 [label="clang::ObjCCategoryDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCCategoryDecl.html",tooltip="ObjCCategoryDecl - Represents a category declaration."];
  Node3555 -> Node3557 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3557 [label="clang::ObjCImplDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCImplDecl.html",tooltip=" "];
  Node3557 -> Node3558 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3558 [label="clang::ObjCCategoryImplDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCCategoryImplDecl.html",tooltip="ObjCCategoryImplDecl - An object of this class encapsulates a category @implementation declaration."];
  Node3557 -> Node3559 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3559 [label="clang::ObjCImplementationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCImplementationDecl.html",tooltip="ObjCImplementationDecl - Represents a class definition - this is where method definitions are specifi..."];
  Node3555 -> Node1907 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1907 [label="clang::ObjCInterfaceDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCInterfaceDecl.html",tooltip="Represents an ObjC class declaration."];
  Node3555 -> Node1905 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1905 [label="clang::ObjCProtocolDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCProtocolDecl.html",tooltip="Represents an Objective-C protocol declaration."];
  Node3583 -> Node3560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3560 [label="clang::ObjCMethodDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCMethodDecl.html",tooltip="ObjCMethodDecl - Represents an instance or class method declaration."];
  Node3583 -> Node3587 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3587 [label="clang::ObjCPropertyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCPropertyDecl.html",tooltip="Represents one property declaration in an Objective-C interface."];
  Node3583 -> Node3588 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3588 [label="clang::TemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateDecl.html",tooltip="The base class of all kinds of template declarations (e.g., class, function, etc.)."];
  Node3588 -> Node3589 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3589 [label="clang::BuiltinTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BuiltinTemplateDecl.html",tooltip="Represents the builtin template declaration which is used to implement __make_integer_seq and other b..."];
  Node3588 -> Node2572 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2572 [label="clang::ConceptDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConceptDecl.html",tooltip="Declaration of a C++20 concept."];
  Node3588 -> Node1899 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1899 [label="clang::RedeclarableTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RedeclarableTemplateDecl.html",tooltip="Declaration of a redeclarable template."];
  Node1899 -> Node1900 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1900 [label="clang::ClassTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ClassTemplateDecl.html",tooltip="Declaration of a class template."];
  Node1899 -> Node1901 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1901 [label="clang::FunctionTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionTemplateDecl.html",tooltip="Declaration of a template function."];
  Node1899 -> Node1902 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1902 [label="clang::TypeAliasTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeAliasTemplateDecl.html",tooltip="Declaration of an alias template."];
  Node1899 -> Node1903 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1903 [label="clang::VarTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1VarTemplateDecl.html",tooltip="Declaration of a variable template."];
  Node3588 -> Node565 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node565 [label="clang::TemplateTemplateParmDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateTemplateParmDecl.html",tooltip="TemplateTemplateParmDecl - Declares a template template parameter, e.g., \"T\" in."];
  Node3583 -> Node3590 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3590 [label="clang::TypeDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeDecl.html",tooltip="Represents a declaration of a type."];
  Node3590 -> Node1892 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1892 [label="clang::TagDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TagDecl.html",tooltip="Represents the declaration of a struct/union/class/enum."];
  Node1892 -> Node1893 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1893 [label="clang::EnumDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1EnumDecl.html",tooltip="Represents an enum."];
  Node1892 -> Node1894 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1894 [label="clang::RecordDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RecordDecl.html",tooltip="Represents a struct/union/class."];
  Node1894 -> Node1895 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1895 [label="clang::CXXRecordDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXRecordDecl.html",tooltip="Represents a C++ struct/union/class."];
  Node1895 -> Node1896 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1896 [label="clang::ClassTemplateSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ClassTemplateSpecializationDecl.html",tooltip="Represents a class template specialization, which refers to a class template with a given set of temp..."];
  Node1896 -> Node1897 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1897 [label="clang::ClassTemplatePartial\lSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ClassTemplatePartialSpecializationDecl.html",tooltip=" "];
  Node3590 -> Node566 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node566 [label="clang::TemplateTypeParmDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateTypeParmDecl.html",tooltip="Declaration of a template type parameter."];
  Node3590 -> Node1885 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1885 [label="clang::TypedefNameDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypedefNameDecl.html",tooltip="Base class for declarations which introduce a typedef-name."];
  Node1885 -> Node1886 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1886 [label="clang::ObjCTypeParamDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCTypeParamDecl.html",tooltip="Represents the declaration of an Objective-C type parameter."];
  Node1885 -> Node1887 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1887 [label="clang::TypeAliasDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeAliasDecl.html",tooltip="Represents the declaration of a typedef-name via a C++11 alias-declaration."];
  Node1885 -> Node1888 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1888 [label="clang::TypedefDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypedefDecl.html",tooltip="Represents the declaration of a typedef-name via the 'typedef' type specifier."];
  Node3590 -> Node2554 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2554 [label="clang::UnresolvedUsingTypenameDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingTypenameDecl.html",tooltip="Represents a dependent using declaration which was marked with typename."];
  Node3583 -> Node3591 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3591 [label="clang::UnresolvedUsingIf\lExistsDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingIfExistsDecl.html",tooltip="This node is generated when a using-declaration that was annotated with attribute((using_if_exists)) ..."];
  Node3583 -> Node3592 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3592 [label="clang::UsingDirectiveDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingDirectiveDecl.html",tooltip="Represents C++ using-directive."];
  Node3583 -> Node572 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node572 [label="clang::UsingPackDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingPackDecl.html",tooltip="Represents a pack of using declarations that a single using-declarator pack-expanded into."];
  Node3583 -> Node1882 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1882 [label="clang::UsingShadowDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingShadowDecl.html",tooltip="Represents a shadow declaration implicitly introduced into a scope by a (resolved) using-declaration ..."];
  Node1882 -> Node1883 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1883 [label="clang::ConstructorUsingShadowDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstructorUsingShadowDecl.html",tooltip="Represents a shadow constructor declaration introduced into a class by a C++11 using-declaration that..."];
  Node3583 -> Node3593 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3593 [label="clang::ValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node3593 -> Node3594 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3594 [label="clang::BindingDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BindingDecl.html",tooltip="A binding in a decomposition declaration."];
  Node3593 -> Node3595 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3595 [label="clang::DeclaratorDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclaratorDecl.html",tooltip="Represents a ValueDecl that came out of a declarator."];
  Node3595 -> Node2566 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2566 [label="clang::FieldDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FieldDecl.html",tooltip="Represents a member of a struct/union/class."];
  Node2566 -> Node2567 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2567 [label="clang::ObjCAtDefsFieldDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtDefsFieldDecl.html",tooltip="Represents a field declaration created by an @defs(...)."];
  Node2566 -> Node2568 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2568 [label="clang::ObjCIvarDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCIvarDecl.html",tooltip="ObjCIvarDecl - Represents an ObjC instance variable."];
  Node3595 -> Node1913 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1913 [label="clang::FunctionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionDecl.html",tooltip="Represents a function declaration or definition."];
  Node1913 -> Node1914 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1914 [label="clang::CXXDeductionGuideDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDeductionGuideDecl.html",tooltip="Represents a C++ deduction guide declaration."];
  Node1913 -> Node1915 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1915 [label="clang::CXXMethodDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXMethodDecl.html",tooltip="Represents a static or instance method of a struct/union/class."];
  Node1915 -> Node475 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node475 [label="clang::CXXConstructorDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXConstructorDecl.html",tooltip="Represents a C++ constructor within a class."];
  Node1915 -> Node1916 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1916 [label="clang::CXXConversionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXConversionDecl.html",tooltip="Represents a C++ conversion function within a class."];
  Node1915 -> Node1917 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1917 [label="clang::CXXDestructorDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDestructorDecl.html",tooltip="Represents a C++ destructor within a class."];
  Node3595 -> Node3596 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3596 [label="clang::MSPropertyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSPropertyDecl.html",tooltip="An instance of this class represents the declaration of a property member."];
  Node3595 -> Node508 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node508 [label="clang::NonTypeTemplateParmDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NonTypeTemplateParmDecl.html",tooltip="NonTypeTemplateParmDecl - Declares a non-type template parameter, e.g., \"Size\" in."];
  Node3595 -> Node1875 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1875 [label="clang::VarDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1VarDecl.html",tooltip="Represents a variable declaration or definition."];
  Node1875 -> Node489 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node489 [label="clang::DecompositionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1DecompositionDecl.html",tooltip="A decomposition declaration."];
  Node1875 -> Node1876 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1876 [label="clang::ImplicitParamDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImplicitParamDecl.html",tooltip=" "];
  Node1875 -> Node1877 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1877 [label="clang::OMPCapturedExprDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCapturedExprDecl.html",tooltip="Pseudo declaration for capturing expressions."];
  Node1875 -> Node1878 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1878 [label="clang::ParmVarDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParmVarDecl.html",tooltip="Represents a parameter to a function."];
  Node1875 -> Node1879 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1879 [label="clang::VarTemplateSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1VarTemplateSpecializationDecl.html",tooltip="Represents a variable template specialization, which refers to a variable template with a given set o..."];
  Node1879 -> Node1880 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1880 [label="clang::VarTemplatePartial\lSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1VarTemplatePartialSpecializationDecl.html",tooltip=" "];
  Node3593 -> Node2570 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2570 [label="clang::EnumConstantDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1EnumConstantDecl.html",tooltip="An instance of this object exists for each enum constant that is defined."];
  Node3593 -> Node2564 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2564 [label="clang::IndirectFieldDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1IndirectFieldDecl.html",tooltip="Represents a field injected from an anonymous union/struct into the parent scope."];
  Node3593 -> Node2560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2560 [label="clang::MSGuidDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSGuidDecl.html",tooltip="A global _GUID constant."];
  Node3593 -> Node3562 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3562 [label="clang::OMPDeclareReductionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeclareReductionDecl.html",tooltip="This represents '#pragma omp declare reduction ...' directive."];
  Node3593 -> Node2558 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2558 [label="clang::TemplateParamObjectDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateParamObjectDecl.html",tooltip="A template parameter object."];
  Node3593 -> Node2556 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2556 [label="clang::UnnamedGlobalConstantDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnnamedGlobalConstantDecl.html",tooltip="An artificial decl, representing a global anonymous constant value which is uniquified by value withi..."];
  Node3593 -> Node2552 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2552 [label="clang::UnresolvedUsingValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingValueDecl.html",tooltip="Represents a dependent using declaration which was not marked with typename."];
  Node3593 -> Node3597 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3597 [label="clang::OMPDeclarativeDirective\l\< ValueDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeclarativeDirective.html",tooltip=" "];
  Node3597 -> Node3561 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3561 [label="clang::OMPDeclareMapperDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeclareMapperDecl.html",tooltip="This represents '#pragma omp declare mapper ...' directive."];
  Node3577 -> Node3598 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3598 [label="clang::ObjCPropertyImplDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCPropertyImplDecl.html",tooltip="ObjCPropertyImplDecl - Represents implementation declaration of a property in a class or category imp..."];
  Node3577 -> Node551 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node551 [label="clang::PragmaCommentDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1PragmaCommentDecl.html",tooltip="Represents a #pragma comment line."];
  Node3577 -> Node552 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node552 [label="clang::PragmaDetectMismatchDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1PragmaDetectMismatchDecl.html",tooltip="Represents a #pragma detect_mismatch line."];
  Node3577 -> Node3563 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3563 [label="clang::RequiresExprBodyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RequiresExprBodyDecl.html",tooltip="Represents the body of a requires-expression."];
  Node3577 -> Node3599 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3599 [label="clang::StaticAssertDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1StaticAssertDecl.html",tooltip="Represents a C++11 static_assert declaration."];
  Node3577 -> Node3600 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3600 [label="clang::TopLevelStmtDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TopLevelStmtDecl.html",tooltip="A declaration that models statements at global scope."];
  Node3577 -> Node1890 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1890 [label="clang::TranslationUnitDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TranslationUnitDecl.html",tooltip="The top declaration context."];
  Node3577 -> Node3601 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3601 [label="clang::OMPDeclarativeDirective\l\< Decl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeclarativeDirective.html",tooltip=" "];
  Node3601 -> Node3602 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3602 [label="clang::OMPAllocateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAllocateDecl.html",tooltip="This represents '#pragma omp allocate ...' directive."];
  Node3601 -> Node3603 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3603 [label="clang::OMPRequiresDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPRequiresDecl.html",tooltip="This represents '#pragma omp requires...' directive."];
  Node3601 -> Node3604 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3604 [label="clang::OMPThreadPrivateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPThreadPrivateDecl.html",tooltip="This represents '#pragma omp threadprivate ...' directive."];
  Node3571 [label="clang::detail::Declaration\lNameExtra",height=0.2,width=0.4,color="black",URL="$classclang_1_1detail_1_1DeclarationNameExtra.html",tooltip="DeclarationNameExtra is used as a base of various uncommon special names."];
  Node3571 -> Node3094 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3094 [label="clang::detail::CXXDeduction\lGuideNameExtra",height=0.2,width=0.4,color="black",URL="$classclang_1_1detail_1_1CXXDeductionGuideNameExtra.html",tooltip="Contains extra information for the name of a C++ deduction guide."];
  Node3571 -> Node3095 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3095 [label="clang::detail::CXXLiteral\lOperatorIdName",height=0.2,width=0.4,color="black",URL="$classclang_1_1detail_1_1CXXLiteralOperatorIdName.html",tooltip="Contains the actual identifier that makes up the name of a C++ literal operator."];
  Node3571 -> Node3185 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3185 [label="clang::MultiKeywordSelector",height=0.2,width=0.4,color="black",URL="$classclang_1_1MultiKeywordSelector.html",tooltip="One of these variable length records is kept for each selector containing more than one keyword."];
  Node3549 [label="clang::DeclContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclContext.html",tooltip="DeclContext - This is used only as base class of specific decl types that can act as declaration cont..."];
  Node3549 -> Node3550 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node465 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3551 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3552 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node1913 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3553 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3554 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node1909 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3555 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3561 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3562 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node3563 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node1892 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3549 -> Node1890 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3254 [label="clang::ExtQualsTypeCommonBase",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtQualsTypeCommonBase.html",tooltip="Base class that is common to both the ExtQuals and Type classes, which allows QualType to access the ..."];
  Node3254 -> Node3175 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3175 [label="clang::ExtQuals",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtQuals.html",tooltip="We can encode up to four bits in the low bits of a type pointer, but there are many more type qualifi..."];
  Node3254 -> Node3255 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3255 [label="clang::Type",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type.html",tooltip="The base class of the type hierarchy."];
  Node3255 -> Node3068 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3068 [label="clang::AdjustedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1AdjustedType.html",tooltip="Represents a type which was implicitly adjusted by the semantic engine for arbitrary reasons."];
  Node3068 -> Node3069 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3069 [label="clang::DecayedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DecayedType.html",tooltip="Represents a pointer type decayed from an array or function type."];
  Node3255 -> Node3070 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3070 [label="clang::ArrayType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ArrayType.html",tooltip="Represents an array type, per C99 6.7.5.2 - Array Declarators."];
  Node3070 -> Node469 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node469 [label="clang::ConstantArrayType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstantArrayType.html",tooltip="Represents the canonical version of C arrays with a specified constant size."];
  Node3070 -> Node3071 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3071 [label="clang::DependentSizedArrayType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentSizedArrayType.html",tooltip="Represents an array type in C++ whose size is a value-dependent expression."];
  Node3070 -> Node3072 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3072 [label="clang::IncompleteArrayType",height=0.2,width=0.4,color="black",URL="$classclang_1_1IncompleteArrayType.html",tooltip="Represents a C array with an unspecified size."];
  Node3070 -> Node3073 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3073 [label="clang::VariableArrayType",height=0.2,width=0.4,color="black",URL="$classclang_1_1VariableArrayType.html",tooltip="Represents a C array with a specified size that is not an integer-constant-expression."];
  Node3255 -> Node3074 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3074 [label="clang::AtomicType",height=0.2,width=0.4,color="black",URL="$classclang_1_1AtomicType.html",tooltip=" "];
  Node3255 -> Node3075 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3075 [label="clang::AttributedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1AttributedType.html",tooltip="An attributed type is a type to which a type attribute has been applied."];
  Node3255 -> Node3077 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3077 [label="clang::BitIntType",height=0.2,width=0.4,color="black",URL="$classclang_1_1BitIntType.html",tooltip="A fixed int type of a specified bitwidth."];
  Node3255 -> Node3078 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3078 [label="clang::BlockPointerType",height=0.2,width=0.4,color="black",URL="$classclang_1_1BlockPointerType.html",tooltip="Pointer to a block type."];
  Node3255 -> Node3079 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3079 [label="clang::BTFTagAttributedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1BTFTagAttributedType.html",tooltip=" "];
  Node3255 -> Node3256 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3256 [label="clang::BuiltinType",height=0.2,width=0.4,color="black",URL="$classclang_1_1BuiltinType.html",tooltip="This class is used for builtin types like 'int'."];
  Node3255 -> Node3081 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3081 [label="clang::ComplexType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ComplexType.html",tooltip="Complex values, per C99 6.2.5p11."];
  Node3255 -> Node3257 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3257 [label="clang::DecltypeType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DecltypeType.html",tooltip="Represents the type decltype(expr) (C++11)."];
  Node3257 -> Node3086 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3086 [label="clang::DependentDecltypeType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentDecltypeType.html",tooltip="Internal representation of canonical, dependent decltype(expr) types."];
  Node3255 -> Node3258 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3258 [label="clang::DeducedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedType.html",tooltip="Common base class for placeholders for types that get replaced by placeholder type deduction: C++11 a..."];
  Node3258 -> Node3076 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3076 [label="clang::AutoType",height=0.2,width=0.4,color="black",URL="$classclang_1_1AutoType.html",tooltip="Represents a C++11 auto or C++14 decltype(auto) type, possibly constrained by a type-constraint."];
  Node3258 -> Node3083 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3083 [label="clang::DeducedTemplateSpecializationType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedTemplateSpecializationType.html",tooltip="Represents a C++17 deduced template specialization type."];
  Node3255 -> Node3084 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3084 [label="clang::DependentAddressSpaceType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentAddressSpaceType.html",tooltip="Represents an extended address space qualifier where the input address space value is dependent."];
  Node3255 -> Node3085 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3085 [label="clang::DependentBitIntType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentBitIntType.html",tooltip=" "];
  Node3255 -> Node3088 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3088 [label="clang::DependentSizedExt\lVectorType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentSizedExtVectorType.html",tooltip="Represents an extended vector type where either the type or size is dependent."];
  Node3255 -> Node3093 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3093 [label="clang::DependentVectorType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentVectorType.html",tooltip="Represents a vector type where either the type or size is dependent."];
  Node3255 -> Node3259 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3259 [label="clang::FunctionType",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionType.html",tooltip="FunctionType - C99 6.7.5.3 - Function Declarators."];
  Node3259 -> Node3176 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3176 [label="clang::FunctionNoProtoType",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionNoProtoType.html",tooltip="Represents a K&R-style 'int foo()' function, which has no information available about its arguments."];
  Node3259 -> Node498 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node498 [label="clang::FunctionProtoType",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionProtoType.html",tooltip="Represents a prototype with parameter type info, e.g."];
  Node3255 -> Node3260 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3260 [label="clang::InjectedClassNameType",height=0.2,width=0.4,color="black",URL="$classclang_1_1InjectedClassNameType.html",tooltip="The injected class name of a C++ class template or class template partial specialization."];
  Node3255 -> Node3261 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3261 [label="clang::LocInfoType",height=0.2,width=0.4,color="black",URL="$classclang_1_1LocInfoType.html",tooltip="Holds a QualType and a TypeSourceInfo* that came out of a declarator parsing."];
  Node3255 -> Node3262 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3262 [label="clang::MacroQualifiedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1MacroQualifiedType.html",tooltip="Sugar type that represents a type that was qualified by a qualifier written as a macro invocation."];
  Node3255 -> Node3180 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3180 [label="clang::MatrixType",height=0.2,width=0.4,color="black",URL="$classclang_1_1MatrixType.html",tooltip="Represents a matrix type, as defined in the Matrix Types clang extensions."];
  Node3180 -> Node3181 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3181 [label="clang::ConstantMatrixType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstantMatrixType.html",tooltip="Represents a concrete matrix type with constant number of rows and columns."];
  Node3180 -> Node3182 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3182 [label="clang::DependentSizedMatrixType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentSizedMatrixType.html",tooltip="Represents a matrix type where the type and the number of rows and columns is dependent on a template..."];
  Node3255 -> Node3183 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3183 [label="clang::MemberPointerType",height=0.2,width=0.4,color="black",URL="$classclang_1_1MemberPointerType.html",tooltip="A pointer to member type per C++ 8.3.3 - Pointers to members."];
  Node3255 -> Node3187 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3187 [label="clang::ObjCObjectPointerType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCObjectPointerType.html",tooltip="Represents a pointer to an Objective C object."];
  Node3255 -> Node2407 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2407 [label="clang::ObjCObjectType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCObjectType.html",tooltip="Represents a class type in Objective C."];
  Node2407 -> Node2408 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2408 [label="clang::ObjCInterfaceType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCInterfaceType.html",tooltip="Interfaces are the core concept in Objective-C for object oriented design."];
  Node2407 -> Node2409 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2409 [label="clang::ObjCObjectTypeImpl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCObjectTypeImpl.html",tooltip="A class providing a concrete implementation of ObjCObjectType, so as to not increase the footprint of..."];
  Node3255 -> Node2405 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2405 [label="clang::ObjCTypeParamType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCTypeParamType.html",tooltip="Represents a type parameter type in Objective C."];
  Node3255 -> Node3188 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3188 [label="clang::PackExpansionType",height=0.2,width=0.4,color="black",URL="$classclang_1_1PackExpansionType.html",tooltip="Represents a pack expansion of types."];
  Node3255 -> Node3189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3189 [label="clang::ParenType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParenType.html",tooltip="Sugar for parentheses used when specifying types."];
  Node3255 -> Node3190 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3190 [label="clang::PipeType",height=0.2,width=0.4,color="black",URL="$classclang_1_1PipeType.html",tooltip="PipeType - OpenCL20."];
  Node3255 -> Node3191 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3191 [label="clang::PointerType",height=0.2,width=0.4,color="black",URL="$classclang_1_1PointerType.html",tooltip="PointerType - C99 6.7.5.1 - Pointer Declarators."];
  Node3255 -> Node3193 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3193 [label="clang::ReferenceType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ReferenceType.html",tooltip="Base for LValueReferenceType and RValueReferenceType."];
  Node3193 -> Node3194 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3194 [label="clang::LValueReferenceType",height=0.2,width=0.4,color="black",URL="$classclang_1_1LValueReferenceType.html",tooltip="An lvalue reference type, per C++11 [dcl.ref]."];
  Node3193 -> Node3195 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3195 [label="clang::RValueReferenceType",height=0.2,width=0.4,color="black",URL="$classclang_1_1RValueReferenceType.html",tooltip="An rvalue reference type, per C++11 [dcl.ref]."];
  Node3255 -> Node3196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3196 [label="clang::SubstTemplateType\lParmPackType",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTypeParmPackType.html",tooltip="Represents the result of substituting a set of types for a template type parameter pack."];
  Node3255 -> Node560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node560 [label="clang::SubstTemplateType\lParmType",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTypeParmType.html",tooltip="Represents the result of substituting a type for a template type parameter."];
  Node3255 -> Node3263 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3263 [label="clang::TagType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TagType.html",tooltip=" "];
  Node3263 -> Node3264 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3264 [label="clang::EnumType",height=0.2,width=0.4,color="black",URL="$classclang_1_1EnumType.html",tooltip="A helper class that allows the use of isa/cast/dyncast to detect TagType objects of enums."];
  Node3263 -> Node3265 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3265 [label="clang::RecordType",height=0.2,width=0.4,color="black",URL="$classclang_1_1RecordType.html",tooltip="A helper class that allows the use of isa/cast/dyncast to detect TagType objects of structs/unions/cl..."];
  Node3255 -> Node3197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3197 [label="clang::TemplateSpecializationType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateSpecializationType.html",tooltip="Represents a type template specialization; the template must be a class template, a type alias templa..."];
  Node3255 -> Node3198 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3198 [label="clang::TemplateTypeParmType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateTypeParmType.html",tooltip=" "];
  Node3255 -> Node567 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node567 [label="clang::TypedefType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypedefType.html",tooltip=" "];
  Node3255 -> Node3266 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3266 [label="clang::TypeOfExprType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeOfExprType.html",tooltip="Represents a typeof (or typeof) expression (a C2x feature and GCC extension) or a typeof_unqual expre..."];
  Node3266 -> Node3091 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3091 [label="clang::DependentTypeOfExprType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentTypeOfExprType.html",tooltip="Internal representation of canonical, dependent typeof(expr) types."];
  Node3255 -> Node3267 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3267 [label="clang::TypeOfType",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeOfType.html",tooltip="Represents typeof(type), a C2x feature and GCC extension, or `typeof_unqual(type),..."];
  Node3255 -> Node3268 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3268 [label="clang::TypeWithKeyword",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeWithKeyword.html",tooltip="A helper class for Type nodes having an ElaboratedTypeKeyword."];
  Node3268 -> Node3087 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3087 [label="clang::DependentNameType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentNameType.html",tooltip="Represents a qualified type name for which the type name is dependent."];
  Node3268 -> Node3090 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3090 [label="clang::DependentTemplate\lSpecializationType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentTemplateSpecializationType.html",tooltip="Represents a template specialization type whose template cannot be resolved, e.g."];
  Node3268 -> Node493 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node493 [label="clang::ElaboratedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ElaboratedType.html",tooltip="Represents a type that was referred to using an elaborated type keyword, e.g., struct S,..."];
  Node3255 -> Node3269 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3269 [label="clang::UnaryTransformType",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnaryTransformType.html",tooltip="A unary type transform, which is a type constructed from another."];
  Node3269 -> Node3092 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3092 [label="clang::DependentUnaryTransformType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentUnaryTransformType.html",tooltip="Internal representation of canonical, dependent __underlying_type(type) types."];
  Node3255 -> Node3270 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3270 [label="clang::UnresolvedUsingType",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingType.html",tooltip="Represents the dependent type named by a dependently-scoped typename using declaration,..."];
  Node3255 -> Node573 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node573 [label="clang::UsingType",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingType.html",tooltip=" "];
  Node3255 -> Node3199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3199 [label="clang::VectorType",height=0.2,width=0.4,color="black",URL="$classclang_1_1VectorType.html",tooltip="Represents a GCC generic vector type."];
  Node3199 -> Node3200 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3200 [label="clang::ExtVectorType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtVectorType.html",tooltip="ExtVectorType - Extended vector type."];
  Node3067 [label="FoldingSetNode",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3067 -> Node3068 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3070 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3074 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3075 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3076 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3077 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3078 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3079 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node1896 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3080 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3080 [label="clang::CodeGen::BlockByref\lHelpers",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1BlockByrefHelpers.html",tooltip="A pair of helper functions for a __block variable."];
  Node3067 -> Node467 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node467 [label="clang::CodeGen::CGFunctionInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1CGFunctionInfo.html",tooltip="CGFunctionInfo - Class to encapsulate the information about a function definition."];
  Node3067 -> Node3081 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3082 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3082 [label="clang::ConstraintSatisfaction",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstraintSatisfaction.html",tooltip="The result of a constraint satisfaction check, containing the necessary information to diagnose an un..."];
  Node3067 -> Node3083 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3084 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3085 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3086 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3087 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3088 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3089 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3089 [label="clang::DependentTemplateName",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentTemplateName.html",tooltip="Represents a dependent template name that cannot be resolved prior to template instantiation."];
  Node3067 -> Node3090 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3091 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3092 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3093 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3094 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3095 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3096 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3096 [label="clang::detail::CXXSpecial\lNameExtra",height=0.2,width=0.4,color="black",URL="$classclang_1_1detail_1_1CXXSpecialNameExtra.html",tooltip="CXXSpecialNameExtra records the type associated with one of the \"special\" kinds of declaration names ..."];
  Node3067 -> Node493 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3097 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3097 [label="clang::ento::BugReportEquiv\lClass",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BugReportEquivClass.html",tooltip=" "];
  Node3067 -> Node3098 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3098 [label="clang::ento::BugReporter\lVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BugReporterVisitor.html",tooltip="BugReporterVisitors are used to add custom diagnostics along a path."];
  Node3098 -> Node3099 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3099 [label="clang::ento::bugreporter\l::TrackingBugReporterVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1bugreporter_1_1TrackingBugReporterVisitor.html",tooltip="Visitor that tracks expressions and values."];
  Node3098 -> Node3100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3100 [label="clang::ento::ConditionBRVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ConditionBRVisitor.html",tooltip="Visitor that tries to report interesting diagnostics from conditions."];
  Node3098 -> Node3101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3101 [label="clang::ento::FalsePositive\lRefutationBRVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1FalsePositiveRefutationBRVisitor.html",tooltip="The bug visitor will walk all the nodes in a path and collect all the constraints."];
  Node3098 -> Node3102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3102 [label="clang::ento::LikelyFalse\lPositiveSuppressionBRVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1LikelyFalsePositiveSuppressionBRVisitor.html",tooltip="Suppress reports that might lead to known false positives."];
  Node3098 -> Node3103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3103 [label="clang::ento::NilReceiver\lBRVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1NilReceiverBRVisitor.html",tooltip=" "];
  Node3098 -> Node3104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3104 [label="clang::ento::NoStateChange\lFuncVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1NoStateChangeFuncVisitor.html",tooltip="Put a diagnostic on return statement (or on } in its absence) of all inlined functions for which some..."];
  Node3098 -> Node3105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3105 [label="clang::ento::retaincountchecker\l::RefCountReportVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1retaincountchecker_1_1RefCountReportVisitor.html",tooltip=" "];
  Node3105 -> Node3106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3106 [label="clang::ento::retaincountchecker\l::RefLeakReportVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1retaincountchecker_1_1RefLeakReportVisitor.html",tooltip=" "];
  Node3098 -> Node3107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3107 [label="clang::ento::SuppressInline\lDefensiveChecksVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SuppressInlineDefensiveChecksVisitor.html",tooltip=" "];
  Node3098 -> Node3108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3108 [label="clang::ento::TagVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1TagVisitor.html",tooltip="The visitor detects NoteTags and displays the event notes they contain."];
  Node3098 -> Node3109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3109 [label="clang::ento::taint\l::TaintBugVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1taint_1_1TaintBugVisitor.html",tooltip="The bug visitor prints a diagnostic message at the location where a given variable was tainted."];
  Node3098 -> Node3110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3110 [label="clang::ento::TrackConstraint\lBRVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1TrackConstraintBRVisitor.html",tooltip=" "];
  Node3098 -> Node3111 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3111 [label="clang::ento::UndefOrNull\lArgVisitor",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1UndefOrNullArgVisitor.html",tooltip="When a region containing undefined value or '0' value is passed as an argument in a call,..."];
  Node3067 -> Node3112 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3112 [label="clang::ento::CompoundValData",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CompoundValData.html",tooltip=" "];
  Node3067 -> Node3113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3113 [label="clang::ento::ExplodedNode",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ExplodedNode.html",tooltip=" "];
  Node3067 -> Node3114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3114 [label="clang::ento::LazyCompound\lValData",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1LazyCompoundValData.html",tooltip=" "];
  Node3067 -> Node3115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3115 [label="clang::ento::MemRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1MemRegion.html",tooltip="MemRegion - The root abstract class for all memory regions."];
  Node3115 -> Node3116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3116 [label="clang::ento::MemSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1MemSpaceRegion.html",tooltip="MemSpaceRegion - A memory region that represents a \"memory space\"; for example, the set of global var..."];
  Node3116 -> Node3117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3117 [label="clang::ento::CodeSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CodeSpaceRegion.html",tooltip="CodeSpaceRegion - The memory space that holds the executable code of functions and blocks."];
  Node3116 -> Node3118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3118 [label="clang::ento::GlobalsSpace\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1GlobalsSpaceRegion.html",tooltip=" "];
  Node3118 -> Node3119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3119 [label="clang::ento::NonStaticGlobal\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1NonStaticGlobalSpaceRegion.html",tooltip="The region for all the non-static global variables."];
  Node3119 -> Node3120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3120 [label="clang::ento::GlobalImmutable\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1GlobalImmutableSpaceRegion.html",tooltip="The region containing globals which are considered not to be modified or point to data which could be..."];
  Node3119 -> Node3121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3121 [label="clang::ento::GlobalInternal\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1GlobalInternalSpaceRegion.html",tooltip="The region containing globals which can be modified by calls to \"internally\" defined functions - (for..."];
  Node3119 -> Node3122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3122 [label="clang::ento::GlobalSystem\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1GlobalSystemSpaceRegion.html",tooltip="The region containing globals which are defined in system/external headers and are considered modifia..."];
  Node3118 -> Node3123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3123 [label="clang::ento::StaticGlobal\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1StaticGlobalSpaceRegion.html",tooltip="The region of the static variables within the current CodeTextRegion scope."];
  Node3116 -> Node3124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3124 [label="clang::ento::HeapSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1HeapSpaceRegion.html",tooltip=" "];
  Node3116 -> Node3125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3125 [label="clang::ento::StackSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1StackSpaceRegion.html",tooltip=" "];
  Node3125 -> Node3126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3126 [label="clang::ento::StackArguments\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1StackArgumentsSpaceRegion.html",tooltip=" "];
  Node3125 -> Node3127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3127 [label="clang::ento::StackLocals\lSpaceRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1StackLocalsSpaceRegion.html",tooltip=" "];
  Node3116 -> Node3128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3128 [label="clang::ento::UnknownSpace\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1UnknownSpaceRegion.html",tooltip=" "];
  Node3115 -> Node3129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3129 [label="clang::ento::SubRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SubRegion.html",tooltip="SubRegion - A region that subsets another larger region."];
  Node3129 -> Node3130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3130 [label="clang::ento::AllocaRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1AllocaRegion.html",tooltip="AllocaRegion - A region that represents an untyped blob of bytes created by a call to 'alloca'."];
  Node3129 -> Node3131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3131 [label="clang::ento::SymbolicRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolicRegion.html",tooltip="SymbolicRegion - A special, \"non-concrete\" region."];
  Node3129 -> Node3132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3132 [label="clang::ento::TypedRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1TypedRegion.html",tooltip="TypedRegion - An abstract class representing regions that are typed."];
  Node3132 -> Node3133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3133 [label="clang::ento::BlockDataRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BlockDataRegion.html",tooltip="BlockDataRegion - A region that represents a block instance."];
  Node3132 -> Node3134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3134 [label="clang::ento::CodeTextRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CodeTextRegion.html",tooltip=" "];
  Node3134 -> Node3135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3135 [label="clang::ento::BlockCodeRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BlockCodeRegion.html",tooltip="BlockCodeRegion - A region that represents code texts of blocks (closures)."];
  Node3134 -> Node3136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3136 [label="clang::ento::FunctionCode\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1FunctionCodeRegion.html",tooltip="FunctionCodeRegion - A region that represents code texts of function."];
  Node3132 -> Node3137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3137 [label="clang::ento::TypedValueRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1TypedValueRegion.html",tooltip="TypedValueRegion - An abstract class representing regions having a typed value."];
  Node3137 -> Node3138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3138 [label="clang::ento::CompoundLiteral\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CompoundLiteralRegion.html",tooltip="CompoundLiteralRegion - A memory region representing a compound literal."];
  Node3137 -> Node3139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3139 [label="clang::ento::CXXBaseObject\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CXXBaseObjectRegion.html",tooltip=" "];
  Node3137 -> Node3140 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3140 [label="clang::ento::CXXDerivedObject\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CXXDerivedObjectRegion.html",tooltip=" "];
  Node3137 -> Node3141 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3141 [label="clang::ento::CXXTempObject\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CXXTempObjectRegion.html",tooltip=" "];
  Node3137 -> Node3142 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3142 [label="clang::ento::CXXThisRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CXXThisRegion.html",tooltip="CXXThisRegion - Represents the region for the implicit 'this' parameter in a call to a C++ method."];
  Node3137 -> Node3143 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3143 [label="clang::ento::DeclRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1DeclRegion.html",tooltip=" "];
  Node3143 -> Node3144 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3144 [label="clang::ento::FieldRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1FieldRegion.html",tooltip=" "];
  Node3143 -> Node3145 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3145 [label="clang::ento::ObjCIvarRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ObjCIvarRegion.html",tooltip=" "];
  Node3143 -> Node3146 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3146 [label="clang::ento::VarRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1VarRegion.html",tooltip=" "];
  Node3146 -> Node3147 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3147 [label="clang::ento::NonParamVar\lRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1NonParamVarRegion.html",tooltip=" "];
  Node3146 -> Node3148 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3148 [label="clang::ento::ParamVarRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ParamVarRegion.html",tooltip="ParamVarRegion - Represents a region for paremters."];
  Node3137 -> Node3149 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3149 [label="clang::ento::ElementRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ElementRegion.html",tooltip="ElementRegion is used to represent both array elements and casts."];
  Node3137 -> Node3150 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3150 [label="clang::ento::ObjCStringRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ObjCStringRegion.html",tooltip="The region associated with an ObjCStringLiteral."];
  Node3137 -> Node3151 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3151 [label="clang::ento::StringRegion",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1StringRegion.html",tooltip="StringRegion - Region associated with a StringLiteral."];
  Node3067 -> Node3152 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3152 [label="clang::ento::PathDiagnostic",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnostic.html",tooltip="PathDiagnostic - PathDiagnostic objects represent a single path-sensitive diagnostic."];
  Node3067 -> Node3153 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3153 [label="clang::ento::PathDiagnostic\lConsumer::PDFileEntry",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticConsumer_1_1PDFileEntry.html",tooltip=" "];
  Node3067 -> Node3154 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3154 [label="clang::ento::PathDiagnostic\lPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticPiece.html",tooltip=" "];
  Node3154 -> Node3155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3155 [label="clang::ento::PathDiagnostic\lCallPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticCallPiece.html",tooltip=" "];
  Node3154 -> Node3156 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3156 [label="clang::ento::PathDiagnostic\lControlFlowPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticControlFlowPiece.html",tooltip=" "];
  Node3154 -> Node3157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3157 [label="clang::ento::PathDiagnostic\lSpotPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticSpotPiece.html",tooltip=" "];
  Node3157 -> Node3158 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3158 [label="clang::ento::PathDiagnostic\lEventPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticEventPiece.html",tooltip=" "];
  Node3157 -> Node3159 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3159 [label="clang::ento::PathDiagnostic\lMacroPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticMacroPiece.html",tooltip=" "];
  Node3157 -> Node3160 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3160 [label="clang::ento::PathDiagnostic\lNotePiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticNotePiece.html",tooltip=" "];
  Node3157 -> Node3161 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3161 [label="clang::ento::PathDiagnostic\lPopUpPiece",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PathDiagnosticPopUpPiece.html",tooltip=" "];
  Node3067 -> Node3162 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3162 [label="clang::ento::PointerToMemberData",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1PointerToMemberData.html",tooltip=" "];
  Node3067 -> Node3163 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3163 [label="clang::ento::ProgramState",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1ProgramState.html",tooltip=" "];
  Node3067 -> Node3164 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3164 [label="clang::ento::SymExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymExpr.html",tooltip="Symbolic value."];
  Node3164 -> Node3165 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3165 [label="clang::ento::BinarySymExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BinarySymExpr.html",tooltip="Represents a symbolic expression involving a binary operator."];
  Node3165 -> Node3166 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3166 [label="clang::ento::BinarySymExpr\lImpl\< LHSTYPE, RHSTYPE,\l ClassKind \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1BinarySymExprImpl.html",tooltip="Template implementation for all binary symbolic expressions."];
  Node3164 -> Node3167 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3167 [label="clang::ento::SymbolCast",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolCast.html",tooltip="Represents a cast expression."];
  Node3164 -> Node3168 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3168 [label="clang::ento::SymbolData",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolData.html",tooltip="A symbol representing data which can be stored in a memory location (region)."];
  Node3168 -> Node3169 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3169 [label="clang::ento::SymbolConjured",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolConjured.html",tooltip="A symbol representing the result of an expression in the case when we do not know anything about what..."];
  Node3168 -> Node3170 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3170 [label="clang::ento::SymbolDerived",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolDerived.html",tooltip="A symbol representing the value of a MemRegion whose parent region has symbolic value."];
  Node3168 -> Node3171 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3171 [label="clang::ento::SymbolExtent",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolExtent.html",tooltip="SymbolExtent - Represents the extent (size in bytes) of a bounded region."];
  Node3168 -> Node3172 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3172 [label="clang::ento::SymbolMetadata",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolMetadata.html",tooltip="SymbolMetadata - Represents path-dependent metadata about a specific region."];
  Node3168 -> Node3173 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3173 [label="clang::ento::SymbolRegion\lValue",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1SymbolRegionValue.html",tooltip="A symbol representing the value stored at a MemRegion."];
  Node3164 -> Node3174 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3174 [label="clang::ento::UnarySymExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1UnarySymExpr.html",tooltip="Represents a symbolic expression involving a unary operator."];
  Node3067 -> Node3175 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3176 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node498 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node499 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node499 [label="clang::FunctionTemplateSpecializationInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionTemplateSpecializationInfo.html",tooltip="Provides information about a function template specialization, which is a FunctionDecl that has been ..."];
  Node3067 -> Node3177 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3177 [label="clang::LocationContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1LocationContext.html",tooltip="It wraps the AnalysisDeclContext to represent both the call stack with the help of StackFrameContext ..."];
  Node3177 -> Node3178 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3178 [label="clang::BlockInvocationContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1BlockInvocationContext.html",tooltip="It represents a block invocation (based on BlockCall)."];
  Node3177 -> Node3179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3179 [label="clang::StackFrameContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1StackFrameContext.html",tooltip="It represents a stack frame of the call stack (based on CallEvent)."];
  Node3067 -> Node3180 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3183 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3184 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3184 [label="clang::ModuleMacro",height=0.2,width=0.4,color="black",URL="$classclang_1_1ModuleMacro.html",tooltip="Represents a macro directive exported by a module."];
  Node3067 -> Node2560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3185 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3186 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3186 [label="clang::NestedNameSpecifier",height=0.2,width=0.4,color="black",URL="$classclang_1_1NestedNameSpecifier.html",tooltip="Represents a C++ nested name specifier, such as \"\\::std::vector<int>::\"."];
  Node3067 -> Node3187 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node2409 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node2405 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3188 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3189 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3190 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3191 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3192 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3192 [label="clang::QualifiedTemplateName",height=0.2,width=0.4,color="black",URL="$classclang_1_1QualifiedTemplateName.html",tooltip="Represents a template name that was expressed as a qualified name."];
  Node3067 -> Node3193 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::SubstTemplateTemplate\lParmPackStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTemplateParmPackStorage.html",tooltip="A structure for storing an already-substituted template template parameter pack."];
  Node3067 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::SubstTemplateTemplate\lParmStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTemplateParmStorage.html",tooltip="A structure for storing the information associated with a substituted template template parameter."];
  Node3067 -> Node3196 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node2558 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3197 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3198 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node567 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node2556 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node573 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node1879 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3067 -> Node3199 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2571 [label="clang::Mergeable\< Concept\lDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2571 -> Node2572 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2569 [label="clang::Mergeable\< EnumConstant\lDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2569 -> Node2570 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2565 [label="clang::Mergeable\< FieldDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2565 -> Node2566 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2563 [label="clang::Mergeable\< Indirect\lFieldDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2563 -> Node2564 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2561 [label="clang::Mergeable\< Lifetime\lExtendedTemporaryDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2561 -> Node2562 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2559 [label="clang::Mergeable\< MSGuid\lDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2559 -> Node2560 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2557 [label="clang::Mergeable\< Template\lParamObjectDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2557 -> Node2558 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2555 [label="clang::Mergeable\< Unnamed\lGlobalConstantDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2555 -> Node2556 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2553 [label="clang::Mergeable\< Unresolved\lUsingTypenameDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2553 -> Node2554 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2551 [label="clang::Mergeable\< Unresolved\lUsingValueDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2551 -> Node2552 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2549 [label="clang::Mergeable\< UsingDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2549 -> Node2550 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2547 [label="clang::Mergeable\< UsingEnum\lDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2547 -> Node2548 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2546 [label="clang::Mergeable\< UsingPack\lDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Mergeable.html",tooltip=" "];
  Node2546 -> Node572 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2406 [label="clang::ObjCProtocolQualifiers\l\< ObjCObjectType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCProtocolQualifiers.html",tooltip=" "];
  Node2406 -> Node2407 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2404 [label="clang::ObjCProtocolQualifiers\l\< ObjCTypeParamType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCProtocolQualifiers.html",tooltip=" "];
  Node2404 -> Node2405 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2299 [label="clang::OMPClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPClause.html",tooltip="This is a basic class for representing single OpenMP clause."];
  Node2299 -> Node2300 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2300 [label="clang::OMPAcqRelClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAcqRelClause.html",tooltip="This represents 'acq_rel' clause in the '#pragma omp atomic|flush' directives."];
  Node2299 -> Node2301 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2301 [label="clang::OMPAcquireClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAcquireClause.html",tooltip="This represents 'acquire' clause in the '#pragma omp atomic|flush' directives."];
  Node2299 -> Node2302 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2302 [label="clang::OMPAtClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAtClause.html",tooltip="This represents 'at' clause in the '#pragma omp error' directive."];
  Node2299 -> Node2303 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2303 [label="clang::OMPAtomicDefaultMem\lOrderClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAtomicDefaultMemOrderClause.html",tooltip="This represents 'atomic_default_mem_order' clause in the '#pragma omp requires' directive."];
  Node2299 -> Node2304 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2304 [label="clang::OMPCaptureClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCaptureClause.html",tooltip="This represents 'capture' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2305 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2305 [label="clang::OMPCompareClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCompareClause.html",tooltip="This represents 'compare' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2306 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2306 [label="clang::OMPDefaultClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDefaultClause.html",tooltip="This represents 'default' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2307 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2307 [label="clang::OMPDefaultmapClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDefaultmapClause.html",tooltip="This represents 'defaultmap' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2308 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2308 [label="clang::OMPDepobjClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDepobjClause.html",tooltip="This represents implicit clause 'depobj' for the '#pragma omp depobj' directive."];
  Node2299 -> Node2309 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2309 [label="clang::OMPDestroyClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDestroyClause.html",tooltip="This represents 'destroy' clause in the '#pragma omp depobj' directive or the '#pragma omp interop' d..."];
  Node2299 -> Node2264 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2264 [label="clang::OMPDeviceClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeviceClause.html",tooltip="This represents 'device' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2265 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2265 [label="clang::OMPDistScheduleClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDistScheduleClause.html",tooltip="This represents 'dist_schedule' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2310 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2310 [label="clang::OMPDynamicAllocators\lClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDynamicAllocatorsClause.html",tooltip="This represents 'dynamic_allocators' clause in the '#pragma omp requires' directive."];
  Node2299 -> Node2268 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2268 [label="clang::OMPGrainsizeClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPGrainsizeClause.html",tooltip="This represents 'grainsize' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2311 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2311 [label="clang::OMPHintClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPHintClause.html",tooltip="This represents 'hint' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2269 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2269 [label="clang::OMPIfClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPIfClause.html",tooltip="This represents 'if' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2312 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2312 [label="clang::OMPMergeableClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMergeableClause.html",tooltip="This represents 'mergeable' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2313 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2313 [label="clang::OMPMessageClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMessageClause.html",tooltip="This represents 'message' clause in the '#pragma omp error' directive."];
  Node2299 -> Node2314 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2314 [label="clang::OMPNoChildClause\l\< ClauseKind \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2299 -> Node2315 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2315 [label="clang::OMPNogroupClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNogroupClause.html",tooltip="This represents 'nogroup' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2272 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2272 [label="clang::OMPNumTasksClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNumTasksClause.html",tooltip="This represents 'num_tasks' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2273 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2273 [label="clang::OMPNumTeamsClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNumTeamsClause.html",tooltip="This represents 'num_teams' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2316 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2316 [label="clang::OMPOrderClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOrderClause.html",tooltip="This represents 'order' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node538 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node538 [label="clang::OMPOrderedClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOrderedClause.html",tooltip="This represents 'ordered' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2317 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2317 [label="clang::OMPPartialClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPPartialClause.html",tooltip="Representation of the 'partial' clause of the '#pragma omp unroll' directive."];
  Node2299 -> Node2275 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2275 [label="clang::OMPPriorityClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPPriorityClause.html",tooltip="This represents 'priority' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2318 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2318 [label="clang::OMPProcBindClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPProcBindClause.html",tooltip="This represents 'proc_bind' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2319 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2319 [label="clang::OMPReadClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPReadClause.html",tooltip="This represents 'read' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2320 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2320 [label="clang::OMPRelaxedClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPRelaxedClause.html",tooltip="This represents 'relaxed' clause in the '#pragma omp atomic' directives."];
  Node2299 -> Node2321 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2321 [label="clang::OMPReleaseClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPReleaseClause.html",tooltip="This represents 'release' clause in the '#pragma omp atomic|flush' directives."];
  Node2299 -> Node2322 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2322 [label="clang::OMPReverseOffload\lClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPReverseOffloadClause.html",tooltip="This represents 'reverse_offload' clause in the '#pragma omp requires' directive."];
  Node2299 -> Node2276 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2276 [label="clang::OMPScheduleClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPScheduleClause.html",tooltip="This represents 'schedule' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2323 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2323 [label="clang::OMPSeqCstClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSeqCstClause.html",tooltip="This represents 'seq_cst' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2324 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2324 [label="clang::OMPSeverityClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSeverityClause.html",tooltip="This represents 'severity' clause in the '#pragma omp error' directive."];
  Node2299 -> Node2325 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2325 [label="clang::OMPSIMDClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSIMDClause.html",tooltip="This represents 'simd' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node542 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node542 [label="clang::OMPSizesClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSizesClause.html",tooltip="This represents the 'sizes' clause in the '#pragma omp tile' directive."];
  Node2299 -> Node2277 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2277 [label="clang::OMPThreadLimitClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPThreadLimitClause.html",tooltip="This represents 'thread_limit' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2326 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2326 [label="clang::OMPUnifiedSharedMemory\lClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUnifiedSharedMemoryClause.html",tooltip="This represents 'unified_shared_memory' clause in the '#pragma omp requires' directive."];
  Node2299 -> Node2327 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2327 [label="clang::OMPUntiedClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUntiedClause.html",tooltip="This represents 'untied' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node545 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node545 [label="clang::OMPUpdateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUpdateClause.html",tooltip="This represents 'update' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2328 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2328 [label="clang::OMPUseClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUseClause.html",tooltip="This represents the 'use' clause in '#pragma omp ...' directives."];
  Node2299 -> Node548 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node548 [label="clang::OMPUsesAllocators\lClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUsesAllocatorsClause.html",tooltip="This represents clause 'uses_allocators' in the '#pragma omp target'-based directives."];
  Node2299 -> Node2329 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2329 [label="clang::OMPVarListClause\< T \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip="This represents clauses with the list of variables like 'private', 'firstprivate',..."];
  Node2329 -> Node2291 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2291 [label="clang::OMPMappableExprList\lClause\< T \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip="This represents clauses with a list of expressions that are mappable."];
  Node2299 -> Node2330 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2330 [label="clang::OMPWriteClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPWriteClause.html",tooltip="This represents 'write' clause in the '#pragma omp atomic' directive."];
  Node2299 -> Node2331 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2331 [label="clang::OMPNoChildClause\l\< llvm::omp::OMPC_bind \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2331 -> Node2332 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2332 [label="clang::OMPBindClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPBindClause.html",tooltip="This represents 'bind' clause in the '#pragma omp ...' directives."];
  Node2299 -> Node2333 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2333 [label="clang::OMPNoChildClause\l\< llvm::omp::OMPC_full \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2333 -> Node2334 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2334 [label="clang::OMPFullClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFullClause.html",tooltip="Representation of the 'full' clause of the '#pragma omp unroll' directive."];
  Node2299 -> Node2335 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2335 [label="clang::OMPNoChildClause\l\< llvm::omp::OMPC_nowait \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2335 -> Node2336 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2336 [label="clang::OMPNowaitClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNowaitClause.html",tooltip="This represents 'nowait' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2337 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2337 [label="clang::OMPNoChildClause\l\< llvm::omp::OMPC_threads \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2337 -> Node2338 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2338 [label="clang::OMPThreadsClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPThreadsClause.html",tooltip="This represents 'threads' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2339 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2339 [label="clang::OMPNoChildClause\l\< llvm::omp::OMPC_unified\l_address \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1OMPNoChildClause.html",tooltip=" "];
  Node2339 -> Node2340 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2340 [label="clang::OMPUnifiedAddress\lClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUnifiedAddressClause.html",tooltip="This represents 'unified_address' clause in the '#pragma omp requires' directive."];
  Node2299 -> Node2341 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2341 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_align,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2341 -> Node2342 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2342 [label="clang::OMPAlignClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAlignClause.html",tooltip="This represents the 'align' clause in the '#pragma omp allocate' directive."];
  Node2299 -> Node2343 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2343 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_allocator,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2343 -> Node2344 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2344 [label="clang::OMPAllocatorClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAllocatorClause.html",tooltip="This represents 'allocator' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2345 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2345 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_collapse,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2345 -> Node2346 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2346 [label="clang::OMPCollapseClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCollapseClause.html",tooltip="This represents 'collapse' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2347 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2347 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_detach,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2347 -> Node2348 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2348 [label="clang::OMPDetachClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDetachClause.html",tooltip="This represents 'detach' clause in the '#pragma omp task' directive."];
  Node2299 -> Node2349 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2349 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_filter,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2349 -> Node2266 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2266 [label="clang::OMPFilterClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFilterClause.html",tooltip="This represents 'filter' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2350 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2350 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_final,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2350 -> Node2267 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2267 [label="clang::OMPFinalClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFinalClause.html",tooltip="This represents 'final' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2351 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2351 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_nocontext,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2351 -> Node2270 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2270 [label="clang::OMPNocontextClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNocontextClause.html",tooltip="This represents 'nocontext' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2352 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2352 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_novariants,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2352 -> Node2271 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2271 [label="clang::OMPNovariantsClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNovariantsClause.html",tooltip="This represents 'novariants' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2353 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2353 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_num\l_threads, OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2353 -> Node2274 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2274 [label="clang::OMPNumThreadsClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNumThreadsClause.html",tooltip="This represents 'num_threads' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2354 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2354 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_ompx\l_dyn_cgroup_mem, OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2354 -> Node2278 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2278 [label="clang::OMPXDynCGroupMemClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPXDynCGroupMemClause.html",tooltip="This represents 'ompx_dyn_cgroup_mem' clause in the '#pragma omp target ...' directive."];
  Node2299 -> Node2355 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2355 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_safelen,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2355 -> Node2356 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2356 [label="clang::OMPSafelenClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSafelenClause.html",tooltip="This represents 'safelen' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2357 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2357 [label="clang::OMPOneStmtClause\l\< llvm::omp::OMPC_simdlen,\l OMPClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOneStmtClause.html",tooltip=" "];
  Node2357 -> Node2358 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2358 [label="clang::OMPSimdlenClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSimdlenClause.html",tooltip="This represents 'simdlen' clause in the '#pragma omp ...' directive."];
  Node2299 -> Node2359 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2359 [label="clang::OMPVarListClause\l\< OMPAffinityClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2359 -> Node516 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node516 [label="clang::OMPAffinityClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAffinityClause.html",tooltip="This represents clause 'affinity' in the '#pragma omp task'-based directives."];
  Node2299 -> Node2360 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2360 [label="clang::OMPVarListClause\l\< OMPAlignedClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2360 -> Node517 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node517 [label="clang::OMPAlignedClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAlignedClause.html",tooltip="This represents clause 'aligned' in the '#pragma omp ...' directives."];
  Node2299 -> Node2361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2361 [label="clang::OMPVarListClause\l\< OMPAllocateClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2361 -> Node518 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node518 [label="clang::OMPAllocateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAllocateClause.html",tooltip="This represents clause 'allocate' in the '#pragma omp ...' directives."];
  Node2299 -> Node2362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2362 [label="clang::OMPVarListClause\l\< OMPCopyinClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2362 -> Node521 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node521 [label="clang::OMPCopyinClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCopyinClause.html",tooltip="This represents clause 'copyin' in the '#pragma omp ...' directives."];
  Node2299 -> Node2363 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2363 [label="clang::OMPVarListClause\l\< OMPCopyprivateClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2363 -> Node522 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node522 [label="clang::OMPCopyprivateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCopyprivateClause.html",tooltip="This represents clause 'copyprivate' in the '#pragma omp ...' directives."];
  Node2299 -> Node2364 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2364 [label="clang::OMPVarListClause\l\< OMPDependClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2364 -> Node523 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node523 [label="clang::OMPDependClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDependClause.html",tooltip="This represents implicit clause 'depend' for the '#pragma omp task' directive."];
  Node2299 -> Node2365 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2365 [label="clang::OMPVarListClause\l\< OMPExclusiveClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2365 -> Node524 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node524 [label="clang::OMPExclusiveClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPExclusiveClause.html",tooltip="This represents clause 'exclusive' in the '#pragma omp scan' directive."];
  Node2299 -> Node2366 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2366 [label="clang::OMPVarListClause\l\< OMPFirstprivateClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2366 -> Node525 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node525 [label="clang::OMPFirstprivateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFirstprivateClause.html",tooltip="This represents clause 'firstprivate' in the '#pragma omp ...' directives."];
  Node2299 -> Node2367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2367 [label="clang::OMPVarListClause\l\< OMPFlushClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2367 -> Node526 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node526 [label="clang::OMPFlushClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFlushClause.html",tooltip="This represents implicit clause 'flush' for the '#pragma omp flush' directive."];
  Node2299 -> Node2368 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2368 [label="clang::OMPVarListClause\l\< OMPFromClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2368 -> Node2292 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2292 [label="clang::OMPMappableExprList\lClause\< OMPFromClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2292 -> Node527 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node527 [label="clang::OMPFromClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFromClause.html",tooltip="This represents clause 'from' in the '#pragma omp ...' directives."];
  Node2299 -> Node2369 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2369 [label="clang::OMPVarListClause\l\< OMPHasDeviceAddrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2369 -> Node2293 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2293 [label="clang::OMPMappableExprList\lClause\< OMPHasDeviceAddrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2293 -> Node528 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node528 [label="clang::OMPHasDeviceAddrClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPHasDeviceAddrClause.html",tooltip="This represents clause 'has_device_ptr' in the '#pragma omp ...' directives."];
  Node2299 -> Node2370 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2370 [label="clang::OMPVarListClause\l\< OMPInclusiveClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2370 -> Node529 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node529 [label="clang::OMPInclusiveClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPInclusiveClause.html",tooltip="This represents clause 'inclusive' in the '#pragma omp scan' directive."];
  Node2299 -> Node2371 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2371 [label="clang::OMPVarListClause\l\< OMPInitClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2371 -> Node530 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node530 [label="clang::OMPInitClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPInitClause.html",tooltip="This represents the 'init' clause in '#pragma omp ...' directives."];
  Node2299 -> Node2372 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2372 [label="clang::OMPVarListClause\l\< OMPInReductionClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2372 -> Node531 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node531 [label="clang::OMPInReductionClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPInReductionClause.html",tooltip="This represents clause 'in_reduction' in the '#pragma omp task' directives."];
  Node2299 -> Node2373 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2373 [label="clang::OMPVarListClause\l\< OMPIsDevicePtrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2373 -> Node2294 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2294 [label="clang::OMPMappableExprList\lClause\< OMPIsDevicePtrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2294 -> Node532 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node532 [label="clang::OMPIsDevicePtrClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPIsDevicePtrClause.html",tooltip="This represents clause 'is_device_ptr' in the '#pragma omp ...' directives."];
  Node2299 -> Node2374 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2374 [label="clang::OMPVarListClause\l\< OMPLastprivateClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2374 -> Node534 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node534 [label="clang::OMPLastprivateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPLastprivateClause.html",tooltip="This represents clause 'lastprivate' in the '#pragma omp ...' directives."];
  Node2299 -> Node2375 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2375 [label="clang::OMPVarListClause\l\< OMPLinearClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2375 -> Node535 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node535 [label="clang::OMPLinearClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPLinearClause.html",tooltip="This represents clause 'linear' in the '#pragma omp ...' directives."];
  Node2299 -> Node2376 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2376 [label="clang::OMPVarListClause\l\< OMPMapClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2376 -> Node2295 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2295 [label="clang::OMPMappableExprList\lClause\< OMPMapClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2295 -> Node536 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node536 [label="clang::OMPMapClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMapClause.html",tooltip="This represents clause 'map' in the '#pragma omp ...' directives."];
  Node2299 -> Node2377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2377 [label="clang::OMPVarListClause\l\< OMPNontemporalClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2377 -> Node537 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node537 [label="clang::OMPNontemporalClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPNontemporalClause.html",tooltip="This represents clause 'nontemporal' in the '#pragma omp ...' directives."];
  Node2299 -> Node2378 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2378 [label="clang::OMPVarListClause\l\< OMPPrivateClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2378 -> Node539 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node539 [label="clang::OMPPrivateClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPPrivateClause.html",tooltip="This represents clause 'private' in the '#pragma omp ...' directives."];
  Node2299 -> Node2379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2379 [label="clang::OMPVarListClause\l\< OMPReductionClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2379 -> Node540 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node540 [label="clang::OMPReductionClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPReductionClause.html",tooltip="This represents clause 'reduction' in the '#pragma omp ...' directives."];
  Node2299 -> Node2380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2380 [label="clang::OMPVarListClause\l\< OMPSharedClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2380 -> Node541 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node541 [label="clang::OMPSharedClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSharedClause.html",tooltip="This represents clause 'shared' in the '#pragma omp ...' directives."];
  Node2299 -> Node2381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2381 [label="clang::OMPVarListClause\l\< OMPTaskReductionClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2381 -> Node543 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node543 [label="clang::OMPTaskReductionClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskReductionClause.html",tooltip="This represents clause 'task_reduction' in the '#pragma omp taskgroup' directives."];
  Node2299 -> Node2382 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2382 [label="clang::OMPVarListClause\l\< OMPToClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2382 -> Node2296 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2296 [label="clang::OMPMappableExprList\lClause\< OMPToClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2296 -> Node544 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node544 [label="clang::OMPToClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPToClause.html",tooltip="This represents clause 'to' in the '#pragma omp ...' directives."];
  Node2299 -> Node2383 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2383 [label="clang::OMPVarListClause\l\< OMPUseDeviceAddrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2383 -> Node2297 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2297 [label="clang::OMPMappableExprList\lClause\< OMPUseDeviceAddrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2297 -> Node546 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node546 [label="clang::OMPUseDeviceAddrClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUseDeviceAddrClause.html",tooltip="This represents clause 'use_device_addr' in the '#pragma omp ...' directives."];
  Node2299 -> Node2384 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2384 [label="clang::OMPVarListClause\l\< OMPUseDevicePtrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPVarListClause.html",tooltip=" "];
  Node2384 -> Node2298 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2298 [label="clang::OMPMappableExprList\lClause\< OMPUseDevicePtrClause \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMappableExprListClause.html",tooltip=" "];
  Node2298 -> Node547 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node547 [label="clang::OMPUseDevicePtrClause",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUseDevicePtrClause.html",tooltip="This represents clause 'use_device_ptr' in the '#pragma omp ...' directives."];
  Node2290 [label="clang::OMPClauseMappable\lExprCommon",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPClauseMappableExprCommon.html",tooltip="Struct that defines common infrastructure to handle mappable expressions used in OpenMP clauses."];
  Node2290 -> Node2291 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2292 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2293 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2294 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2295 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2296 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2297 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2290 -> Node2298 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 [label="clang::OMPClauseWithPreInit",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPClauseWithPreInit.html",tooltip="Class that handles pre-initialization statement for some clauses, like 'shedule', 'firstprivate' etc."];
  Node2262 -> Node2263 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2263 [label="clang::OMPClauseWithPost\lUpdate",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPClauseWithPostUpdate.html",tooltip="Class that handles post-update expression for some clauses, like 'lastprivate', 'reduction' etc."];
  Node2263 -> Node531 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2263 -> Node534 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2263 -> Node535 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2263 -> Node540 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2263 -> Node543 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2264 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2265 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2266 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2267 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node525 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2268 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2269 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2270 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2271 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2272 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2273 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2274 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2275 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2276 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2277 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2262 -> Node2278 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1912 [label="clang::Redeclarable\l\< FunctionDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1912 -> Node1913 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1910 [label="clang::Redeclarable\l\< NamespaceAliasDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1910 -> Node1911 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1908 [label="clang::Redeclarable\l\< NamespaceDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1908 -> Node1909 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1906 [label="clang::Redeclarable\l\< ObjCInterfaceDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1906 -> Node1907 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1904 [label="clang::Redeclarable\l\< ObjCProtocolDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1904 -> Node1905 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1898 [label="clang::Redeclarable\l\< RedeclarableTemplateDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1898 -> Node1899 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1891 [label="clang::Redeclarable\l\< TagDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1891 -> Node1892 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1889 [label="clang::Redeclarable\l\< TranslationUnitDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1889 -> Node1890 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1884 [label="clang::Redeclarable\l\< TypedefNameDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1884 -> Node1885 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1881 [label="clang::Redeclarable\l\< UsingShadowDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1881 -> Node1882 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1874 [label="clang::Redeclarable\l\< VarDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node1874 -> Node1875 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node943 [label="clang::Stmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt.html",tooltip="Stmt - This represents one statement."];
  Node943 -> Node944 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node944 [label="clang::AsmStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1AsmStmt.html",tooltip="AsmStmt is the base class for GCCAsmStmt and MSAsmStmt."];
  Node944 -> Node945 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node945 [label="clang::GCCAsmStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1GCCAsmStmt.html",tooltip="This represents a GCC inline-assembly statement extension."];
  Node944 -> Node946 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node946 [label="clang::MSAsmStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSAsmStmt.html",tooltip="This represents a Microsoft inline-assembly statement extension."];
  Node943 -> Node947 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node947 [label="clang::BreakStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1BreakStmt.html",tooltip="BreakStmt - This represents a break."];
  Node943 -> Node948 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node948 [label="clang::CapturedStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CapturedStmt.html",tooltip="This captures a statement into a function."];
  Node943 -> Node468 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node468 [label="clang::CompoundStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CompoundStmt.html",tooltip="CompoundStmt - This represents a group of statements like { stmt stmt }."];
  Node943 -> Node949 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node949 [label="clang::ContinueStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ContinueStmt.html",tooltip="ContinueStmt - This represents a continue."];
  Node943 -> Node950 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node950 [label="clang::CoreturnStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CoreturnStmt.html",tooltip="Represents a 'co_return' statement in the C++ Coroutines TS."];
  Node943 -> Node471 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node471 [label="clang::CoroutineBodyStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CoroutineBodyStmt.html",tooltip="Represents the body of a coroutine."];
  Node943 -> Node951 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node951 [label="clang::CXXCatchStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXCatchStmt.html",tooltip="CXXCatchStmt - This represents a C++ catch block."];
  Node943 -> Node952 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node952 [label="clang::CXXForRangeStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXForRangeStmt.html",tooltip="CXXForRangeStmt - This represents C++0x [stmt.ranged]'s ranged for statement, represented as 'for (ra..."];
  Node943 -> Node485 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node485 [label="clang::CXXTryStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXTryStmt.html",tooltip="CXXTryStmt - A C++ try block, including all handlers."];
  Node943 -> Node953 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node953 [label="clang::DeclStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclStmt.html",tooltip="DeclStmt - Adaptor class for mixing declarations with statements and expressions."];
  Node943 -> Node954 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node954 [label="clang::DoStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1DoStmt.html",tooltip="DoStmt - This represents a 'do/while' stmt."];
  Node943 -> Node955 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node955 [label="clang::ForStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ForStmt.html",tooltip="ForStmt - This represents a 'for (init;cond;inc)' stmt."];
  Node943 -> Node956 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node956 [label="clang::GotoStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1GotoStmt.html",tooltip="GotoStmt - This represents a direct goto."];
  Node943 -> Node501 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node501 [label="clang::IfStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1IfStmt.html",tooltip="IfStmt - This represents an if/then/else."];
  Node943 -> Node957 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node957 [label="clang::IndirectGotoStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1IndirectGotoStmt.html",tooltip="IndirectGotoStmt - This represents an indirect goto."];
  Node943 -> Node958 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node958 [label="clang::MSDependentExistsStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSDependentExistsStmt.html",tooltip="Representation of a Microsoft __if_exists or __if_not_exists statement with a dependent name."];
  Node943 -> Node959 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node959 [label="clang::NullStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1NullStmt.html",tooltip="NullStmt - This is the null statement \";\": C99 6.8.3p3."];
  Node943 -> Node960 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node960 [label="clang::ObjCAtCatchStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtCatchStmt.html",tooltip="Represents Objective-C's @catch statement."];
  Node943 -> Node961 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node961 [label="clang::ObjCAtFinallyStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtFinallyStmt.html",tooltip="Represents Objective-C's @finally statement."];
  Node943 -> Node962 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node962 [label="clang::ObjCAtSynchronizedStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtSynchronizedStmt.html",tooltip="Represents Objective-C's @synchronized statement."];
  Node943 -> Node963 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node963 [label="clang::ObjCAtThrowStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtThrowStmt.html",tooltip="Represents Objective-C's @throw statement."];
  Node943 -> Node510 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node510 [label="clang::ObjCAtTryStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAtTryStmt.html",tooltip="Represents Objective-C's @try ... @catch ... @finally statement."];
  Node943 -> Node964 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node964 [label="clang::ObjCAutoreleasePoolStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAutoreleasePoolStmt.html",tooltip="Represents Objective-C's @autoreleasepool Statement."];
  Node943 -> Node965 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node965 [label="clang::ObjCForCollectionStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCForCollectionStmt.html",tooltip="Represents Objective-C's collection statement."];
  Node943 -> Node966 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node966 [label="clang::OMPCanonicalLoop",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCanonicalLoop.html",tooltip="Representation of an OpenMP canonical loop."];
  Node943 -> Node967 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node967 [label="clang::OMPExecutableDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPExecutableDirective.html",tooltip="This is a basic class for representing single OpenMP executable directive."];
  Node967 -> Node968 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node968 [label="clang::OMPAtomicDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAtomicDirective.html",tooltip="This represents '#pragma omp atomic' directive."];
  Node967 -> Node969 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node969 [label="clang::OMPBarrierDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPBarrierDirective.html",tooltip="This represents '#pragma omp barrier' directive."];
  Node967 -> Node970 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node970 [label="clang::OMPCancelDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCancelDirective.html",tooltip="This represents '#pragma omp cancel' directive."];
  Node967 -> Node971 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node971 [label="clang::OMPCancellationPoint\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCancellationPointDirective.html",tooltip="This represents '#pragma omp cancellation point' directive."];
  Node967 -> Node972 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node972 [label="clang::OMPCriticalDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPCriticalDirective.html",tooltip="This represents '#pragma omp critical' directive."];
  Node967 -> Node973 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node973 [label="clang::OMPDepobjDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDepobjDirective.html",tooltip="This represents '#pragma omp depobj' directive."];
  Node967 -> Node974 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node974 [label="clang::OMPDispatchDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDispatchDirective.html",tooltip="This represents '#pragma omp dispatch' directive."];
  Node967 -> Node975 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node975 [label="clang::OMPErrorDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPErrorDirective.html",tooltip="This represents '#pragma omp error' directive."];
  Node967 -> Node976 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node976 [label="clang::OMPFlushDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPFlushDirective.html",tooltip="This represents '#pragma omp flush' directive."];
  Node967 -> Node977 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node977 [label="clang::OMPInteropDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPInteropDirective.html",tooltip="This represents '#pragma omp interop' directive."];
  Node967 -> Node978 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node978 [label="clang::OMPLoopBasedDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPLoopBasedDirective.html",tooltip="The base class for all loop-based directives, including loop transformation directives."];
  Node978 -> Node979 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node979 [label="clang::OMPLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPLoopDirective.html",tooltip="This is a common base class for loop directives ('omp simd', 'omp for', 'omp for simd' etc...."];
  Node979 -> Node980 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node980 [label="clang::OMPDistributeDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDistributeDirective.html",tooltip="This represents '#pragma omp distribute' directive."];
  Node979 -> Node981 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node981 [label="clang::OMPDistributeParallel\lForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDistributeParallelForDirective.html",tooltip="This represents '#pragma omp distribute parallel for' composite directive."];
  Node979 -> Node982 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node982 [label="clang::OMPDistributeParallel\lForSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDistributeParallelForSimdDirective.html",tooltip="This represents '#pragma omp distribute parallel for simd' composite directive."];
  Node979 -> Node983 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node983 [label="clang::OMPDistributeSimd\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDistributeSimdDirective.html",tooltip="This represents '#pragma omp distribute simd' composite directive."];
  Node979 -> Node984 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node984 [label="clang::OMPForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPForDirective.html",tooltip="This represents '#pragma omp for' directive."];
  Node979 -> Node985 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node985 [label="clang::OMPForSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPForSimdDirective.html",tooltip="This represents '#pragma omp for simd' directive."];
  Node979 -> Node986 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node986 [label="clang::OMPGenericLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPGenericLoopDirective.html",tooltip="This represents '#pragma omp loop' directive."];
  Node979 -> Node987 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node987 [label="clang::OMPMaskedTaskLoop\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMaskedTaskLoopDirective.html",tooltip="This represents '#pragma omp masked taskloop' directive."];
  Node979 -> Node988 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node988 [label="clang::OMPMaskedTaskLoop\lSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMaskedTaskLoopSimdDirective.html",tooltip="This represents '#pragma omp masked taskloop simd' directive."];
  Node979 -> Node989 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node989 [label="clang::OMPMasterTaskLoop\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMasterTaskLoopDirective.html",tooltip="This represents '#pragma omp master taskloop' directive."];
  Node979 -> Node990 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node990 [label="clang::OMPMasterTaskLoop\lSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMasterTaskLoopSimdDirective.html",tooltip="This represents '#pragma omp master taskloop simd' directive."];
  Node979 -> Node991 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node991 [label="clang::OMPParallelForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelForDirective.html",tooltip="This represents '#pragma omp parallel for' directive."];
  Node979 -> Node992 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node992 [label="clang::OMPParallelForSimd\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelForSimdDirective.html",tooltip="This represents '#pragma omp parallel for simd' directive."];
  Node979 -> Node993 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node993 [label="clang::OMPParallelGeneric\lLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelGenericLoopDirective.html",tooltip="This represents '#pragma omp parallel loop' directive."];
  Node979 -> Node994 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node994 [label="clang::OMPParallelMasked\lTaskLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMaskedTaskLoopDirective.html",tooltip="This represents '#pragma omp parallel masked taskloop' directive."];
  Node979 -> Node995 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node995 [label="clang::OMPParallelMasked\lTaskLoopSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMaskedTaskLoopSimdDirective.html",tooltip="This represents '#pragma omp parallel masked taskloop simd' directive."];
  Node979 -> Node996 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node996 [label="clang::OMPParallelMaster\lTaskLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMasterTaskLoopDirective.html",tooltip="This represents '#pragma omp parallel master taskloop' directive."];
  Node979 -> Node997 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node997 [label="clang::OMPParallelMaster\lTaskLoopSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMasterTaskLoopSimdDirective.html",tooltip="This represents '#pragma omp parallel master taskloop simd' directive."];
  Node979 -> Node998 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node998 [label="clang::OMPSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSimdDirective.html",tooltip="This represents '#pragma omp simd' directive."];
  Node979 -> Node999 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node999 [label="clang::OMPTargetParallel\lForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetParallelForDirective.html",tooltip="This represents '#pragma omp target parallel for' directive."];
  Node979 -> Node1000 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1000 [label="clang::OMPTargetParallel\lForSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetParallelForSimdDirective.html",tooltip="This represents '#pragma omp target parallel for simd' directive."];
  Node979 -> Node1001 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1001 [label="clang::OMPTargetParallel\lGenericLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetParallelGenericLoopDirective.html",tooltip="This represents '#pragma omp target parallel loop' directive."];
  Node979 -> Node1002 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1002 [label="clang::OMPTargetSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetSimdDirective.html",tooltip="This represents '#pragma omp target simd' directive."];
  Node979 -> Node1003 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1003 [label="clang::OMPTargetTeamsDistribute\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsDistributeDirective.html",tooltip="This represents '#pragma omp target teams distribute' combined directive."];
  Node979 -> Node1004 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1004 [label="clang::OMPTargetTeamsDistribute\lParallelForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsDistributeParallelForDirective.html",tooltip="This represents '#pragma omp target teams distribute parallel for' combined directive."];
  Node979 -> Node1005 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1005 [label="clang::OMPTargetTeamsDistribute\lParallelForSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsDistributeParallelForSimdDirective.html",tooltip="This represents '#pragma omp target teams distribute parallel for simd' combined directive."];
  Node979 -> Node1006 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1006 [label="clang::OMPTargetTeamsDistribute\lSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsDistributeSimdDirective.html",tooltip="This represents '#pragma omp target teams distribute simd' combined directive."];
  Node979 -> Node1007 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1007 [label="clang::OMPTargetTeamsGeneric\lLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsGenericLoopDirective.html",tooltip="This represents '#pragma omp target teams loop' directive."];
  Node979 -> Node1008 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1008 [label="clang::OMPTaskLoopDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskLoopDirective.html",tooltip="This represents '#pragma omp taskloop' directive."];
  Node979 -> Node1009 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1009 [label="clang::OMPTaskLoopSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskLoopSimdDirective.html",tooltip="This represents '#pragma omp taskloop simd' directive."];
  Node979 -> Node1010 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1010 [label="clang::OMPTeamsDistribute\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsDistributeDirective.html",tooltip="This represents '#pragma omp teams distribute' directive."];
  Node979 -> Node1011 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1011 [label="clang::OMPTeamsDistribute\lParallelForDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsDistributeParallelForDirective.html",tooltip="This represents '#pragma omp teams distribute parallel for' composite directive."];
  Node979 -> Node1012 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1012 [label="clang::OMPTeamsDistribute\lParallelForSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsDistributeParallelForSimdDirective.html",tooltip="This represents '#pragma omp teams distribute parallel for simd' composite directive."];
  Node979 -> Node1013 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1013 [label="clang::OMPTeamsDistribute\lSimdDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsDistributeSimdDirective.html",tooltip="This represents '#pragma omp teams distribute simd' combined directive."];
  Node979 -> Node1014 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1014 [label="clang::OMPTeamsGenericLoop\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsGenericLoopDirective.html",tooltip="This represents '#pragma omp teams loop' directive."];
  Node978 -> Node1015 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1015 [label="clang::OMPLoopTransformation\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPLoopTransformationDirective.html",tooltip="The base class for all loop transformation directives."];
  Node1015 -> Node1016 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1016 [label="clang::OMPTileDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTileDirective.html",tooltip="This represents the '#pragma omp tile' loop transformation directive."];
  Node1015 -> Node1017 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1017 [label="clang::OMPUnrollDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPUnrollDirective.html",tooltip="This represents the '#pragma omp unroll' loop transformation directive."];
  Node967 -> Node1018 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1018 [label="clang::OMPMaskedDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMaskedDirective.html",tooltip="This represents '#pragma omp masked' directive."];
  Node967 -> Node1019 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1019 [label="clang::OMPMasterDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMasterDirective.html",tooltip="This represents '#pragma omp master' directive."];
  Node967 -> Node1020 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1020 [label="clang::OMPMetaDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPMetaDirective.html",tooltip="This represents '#pragma omp metadirective' directive."];
  Node967 -> Node1021 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1021 [label="clang::OMPOrderedDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPOrderedDirective.html",tooltip="This represents '#pragma omp ordered' directive."];
  Node967 -> Node1022 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1022 [label="clang::OMPParallelDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelDirective.html",tooltip="This represents '#pragma omp parallel' directive."];
  Node967 -> Node1023 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1023 [label="clang::OMPParallelMasked\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMaskedDirective.html",tooltip="This represents '#pragma omp parallel masked' directive."];
  Node967 -> Node1024 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1024 [label="clang::OMPParallelMaster\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelMasterDirective.html",tooltip="This represents '#pragma omp parallel master' directive."];
  Node967 -> Node1025 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1025 [label="clang::OMPParallelSections\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPParallelSectionsDirective.html",tooltip="This represents '#pragma omp parallel sections' directive."];
  Node967 -> Node1026 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1026 [label="clang::OMPScanDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPScanDirective.html",tooltip="This represents '#pragma omp scan' directive."];
  Node967 -> Node1027 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1027 [label="clang::OMPSectionDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSectionDirective.html",tooltip="This represents '#pragma omp section' directive."];
  Node967 -> Node1028 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1028 [label="clang::OMPSectionsDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSectionsDirective.html",tooltip="This represents '#pragma omp sections' directive."];
  Node967 -> Node1029 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1029 [label="clang::OMPSingleDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPSingleDirective.html",tooltip="This represents '#pragma omp single' directive."];
  Node967 -> Node1030 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1030 [label="clang::OMPTargetDataDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetDataDirective.html",tooltip="This represents '#pragma omp target data' directive."];
  Node967 -> Node1031 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1031 [label="clang::OMPTargetDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetDirective.html",tooltip="This represents '#pragma omp target' directive."];
  Node967 -> Node1032 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1032 [label="clang::OMPTargetEnterData\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetEnterDataDirective.html",tooltip="This represents '#pragma omp target enter data' directive."];
  Node967 -> Node1033 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1033 [label="clang::OMPTargetExitData\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetExitDataDirective.html",tooltip="This represents '#pragma omp target exit data' directive."];
  Node967 -> Node1034 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1034 [label="clang::OMPTargetParallel\lDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetParallelDirective.html",tooltip="This represents '#pragma omp target parallel' directive."];
  Node967 -> Node1035 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1035 [label="clang::OMPTargetTeamsDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetTeamsDirective.html",tooltip="This represents '#pragma omp target teams' directive."];
  Node967 -> Node1036 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1036 [label="clang::OMPTargetUpdateDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTargetUpdateDirective.html",tooltip="This represents '#pragma omp target update' directive."];
  Node967 -> Node1037 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1037 [label="clang::OMPTaskDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskDirective.html",tooltip="This represents '#pragma omp task' directive."];
  Node967 -> Node1038 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1038 [label="clang::OMPTaskgroupDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskgroupDirective.html",tooltip="This represents '#pragma omp taskgroup' directive."];
  Node967 -> Node1039 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1039 [label="clang::OMPTaskwaitDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskwaitDirective.html",tooltip="This represents '#pragma omp taskwait' directive."];
  Node967 -> Node1040 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1040 [label="clang::OMPTaskyieldDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTaskyieldDirective.html",tooltip="This represents '#pragma omp taskyield' directive."];
  Node967 -> Node1041 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1041 [label="clang::OMPTeamsDirective",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPTeamsDirective.html",tooltip="This represents '#pragma omp teams' directive."];
  Node943 -> Node557 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node557 [label="clang::ReturnStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ReturnStmt.html",tooltip="ReturnStmt - This represents a return, optionally of an expression: return; return 4;."];
  Node943 -> Node1042 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1042 [label="clang::SEHExceptStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1SEHExceptStmt.html",tooltip=" "];
  Node943 -> Node1043 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1043 [label="clang::SEHFinallyStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1SEHFinallyStmt.html",tooltip=" "];
  Node943 -> Node1044 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1044 [label="clang::SEHLeaveStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1SEHLeaveStmt.html",tooltip="Represents a __leave statement."];
  Node943 -> Node1045 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1045 [label="clang::SEHTryStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1SEHTryStmt.html",tooltip=" "];
  Node943 -> Node1046 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1046 [label="clang::SwitchCase",height=0.2,width=0.4,color="black",URL="$classclang_1_1SwitchCase.html",tooltip=" "];
  Node1046 -> Node466 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node466 [label="clang::CaseStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1CaseStmt.html",tooltip="CaseStmt - Represent a case statement."];
  Node1046 -> Node1047 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1047 [label="clang::DefaultStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1DefaultStmt.html",tooltip=" "];
  Node943 -> Node561 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node561 [label="clang::SwitchStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1SwitchStmt.html",tooltip="SwitchStmt - This represents a 'switch' stmt."];
  Node943 -> Node1048 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1048 [label="clang::ValueStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueStmt.html",tooltip="Represents a statement that could possibly have a value and type."];
  Node1048 -> Node463 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node463 [label="clang::AttributedStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1AttributedStmt.html",tooltip="Represents an attribute applied to a statement."];
  Node1048 -> Node1049 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 [label="clang::Expr",height=0.2,width=0.4,color="black",URL="$classclang_1_1Expr.html",tooltip="This represents one expression."];
  Node1049 -> Node1050 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1050 [label="clang::AbstractConditional\lOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1AbstractConditionalOperator.html",tooltip="AbstractConditionalOperator - An abstract base class for ConditionalOperator and BinaryConditionalOpe..."];
  Node1050 -> Node1051 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1051 [label="clang::BinaryConditional\lOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1BinaryConditionalOperator.html",tooltip="BinaryConditionalOperator - The GNU extension to the conditional operator which allows the middle ope..."];
  Node1050 -> Node1052 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1052 [label="clang::ConditionalOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConditionalOperator.html",tooltip="ConditionalOperator - The ?: ternary operator."];
  Node1049 -> Node1053 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1053 [label="clang::AddrLabelExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1AddrLabelExpr.html",tooltip="AddrLabelExpr - The GNU address of label extension, representing &&label."];
  Node1049 -> Node1054 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1054 [label="clang::ArrayInitIndexExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ArrayInitIndexExpr.html",tooltip="Represents the index of the current element of an array being initialized by an ArrayInitLoopExpr."];
  Node1049 -> Node1055 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1055 [label="clang::ArrayInitLoopExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ArrayInitLoopExpr.html",tooltip="Represents a loop initializing the elements of an array."];
  Node1049 -> Node1056 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1056 [label="clang::ArraySubscriptExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ArraySubscriptExpr.html",tooltip="ArraySubscriptExpr - [C99 6.5.2.1] Array Subscripting."];
  Node1049 -> Node1057 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1057 [label="clang::ArrayTypeTraitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ArrayTypeTraitExpr.html",tooltip="An Embarcadero array type trait, as used in the implementation of __array_rank and __array_extent."];
  Node1049 -> Node1058 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1058 [label="clang::AsTypeExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1AsTypeExpr.html",tooltip="AsTypeExpr - Clang builtin function __builtin_astype [OpenCL 6.2.4.2] This AST node provides support ..."];
  Node1049 -> Node1059 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1059 [label="clang::AtomicExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1AtomicExpr.html",tooltip="AtomicExpr - Variadic atomic builtins: __atomic_exchange, __atomic_fetch_*, __atomic_load,..."];
  Node1049 -> Node1060 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1060 [label="clang::BinaryOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1BinaryOperator.html",tooltip="A builtin binary operation expression such as \"x + y\" or \"x <= y\"."];
  Node1060 -> Node1061 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1061 [label="clang::CompoundAssignOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1CompoundAssignOperator.html",tooltip="CompoundAssignOperator - For compound assignments (e.g."];
  Node1049 -> Node1062 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1062 [label="clang::BlockExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1BlockExpr.html",tooltip="BlockExpr - Adaptor class for mixing a BlockDecl with expressions."];
  Node1049 -> Node1063 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1063 [label="clang::CallExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CallExpr.html",tooltip="CallExpr - Represents a function call (C99 6.5.2.2, C++ [expr.call])."];
  Node1063 -> Node1064 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1064 [label="clang::CUDAKernelCallExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CUDAKernelCallExpr.html",tooltip="Represents a call to a CUDA kernel function."];
  Node1063 -> Node1065 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1065 [label="clang::CXXMemberCallExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXMemberCallExpr.html",tooltip="Represents a call to a member function that may be written either with member call syntax (e...."];
  Node1063 -> Node1066 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1066 [label="clang::CXXOperatorCallExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXOperatorCallExpr.html",tooltip="A call to an overloaded operator written using operator syntax."];
  Node1063 -> Node1067 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1067 [label="clang::UserDefinedLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1UserDefinedLiteral.html",tooltip="A call to a literal operator (C++11 [over.literal]) written as a user-defined literal (C++11 [lit...."];
  Node1049 -> Node1068 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1068 [label="clang::CastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CastExpr.html",tooltip="CastExpr - Base class for type casts, including both implicit casts (ImplicitCastExpr) and explicit c..."];
  Node1068 -> Node1069 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1069 [label="clang::ExplicitCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExplicitCastExpr.html",tooltip="ExplicitCastExpr - An explicit cast written in the source code."];
  Node1069 -> Node464 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node464 [label="clang::BuiltinBitCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1BuiltinBitCastExpr.html",tooltip="Represents a C++2a __builtin_bit_cast(T, v) expression."];
  Node1069 -> Node472 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node472 [label="clang::CStyleCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CStyleCastExpr.html",tooltip="CStyleCastExpr - An explicit cast in C (C99 6.5.4) or a C-style cast in C++ (C++ [expr...."];
  Node1069 -> Node480 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node480 [label="clang::CXXFunctionalCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXFunctionalCastExpr.html",tooltip="Represents an explicit C++ type conversion that uses \"functional\" notation (C++ [expr...."];
  Node1069 -> Node1070 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1070 [label="clang::CXXNamedCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXNamedCastExpr.html",tooltip="Abstract class common to all of the C++ \"named\"/\"keyword\" casts."];
  Node1070 -> Node473 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node473 [label="clang::CXXAddrspaceCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXAddrspaceCastExpr.html",tooltip="A C++ addrspace_cast expression (currently only enabled for OpenCL)."];
  Node1070 -> Node474 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node474 [label="clang::CXXConstCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXConstCastExpr.html",tooltip="A C++ const_cast expression (C++ [expr.const.cast])."];
  Node1070 -> Node479 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node479 [label="clang::CXXDynamicCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDynamicCastExpr.html",tooltip="A C++ dynamic_cast expression (C++ [expr.dynamic.cast])."];
  Node1070 -> Node483 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node483 [label="clang::CXXReinterpretCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXReinterpretCastExpr.html",tooltip="A C++ reinterpret_cast expression (C++ [expr.reinterpret.cast])."];
  Node1070 -> Node484 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node484 [label="clang::CXXStaticCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXStaticCastExpr.html",tooltip="A C++ static_cast expression (C++ [expr.static.cast])."];
  Node1069 -> Node511 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node511 [label="clang::ObjCBridgedCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCBridgedCastExpr.html",tooltip="An Objective-C \"bridged\" cast expression, which casts between Objective-C pointers and C pointers,..."];
  Node1068 -> Node502 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node502 [label="clang::ImplicitCastExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImplicitCastExpr.html",tooltip="ImplicitCastExpr - Allows us to explicitly represent implicit type conversions, which have no direct ..."];
  Node1049 -> Node1071 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1071 [label="clang::CharacterLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1CharacterLiteral.html",tooltip=" "];
  Node1049 -> Node1072 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1072 [label="clang::ChooseExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ChooseExpr.html",tooltip="ChooseExpr - GNU builtin-in function __builtin_choose_expr."];
  Node1049 -> Node1073 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1073 [label="clang::CompoundLiteralExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CompoundLiteralExpr.html",tooltip="CompoundLiteralExpr - [C99 6.5.2.5]."];
  Node1049 -> Node1074 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 -> Node1075 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1075 [label="clang::ConvertVectorExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConvertVectorExpr.html",tooltip="ConvertVectorExpr - Clang builtin function __builtin_convertvector This AST node provides support for..."];
  Node1049 -> Node1076 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1076 [label="clang::CoroutineSuspendExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CoroutineSuspendExpr.html",tooltip="Represents an expression that might suspend coroutine execution; either a co_await or co_yield expres..."];
  Node1076 -> Node1077 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1077 [label="clang::CoawaitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CoawaitExpr.html",tooltip="Represents a 'co_await' expression."];
  Node1076 -> Node1078 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1078 [label="clang::CoyieldExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CoyieldExpr.html",tooltip="Represents a 'co_yield' expression."];
  Node1049 -> Node1079 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1079 [label="clang::CXXBindTemporaryExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXBindTemporaryExpr.html",tooltip="Represents binding an expression to a temporary."];
  Node1049 -> Node1080 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1080 [label="clang::CXXBoolLiteralExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXBoolLiteralExpr.html",tooltip="A boolean literal, per ([C++ lex.bool] Boolean literals)."];
  Node1049 -> Node1081 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1081 [label="clang::CXXConstructExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXConstructExpr.html",tooltip="Represents a call to a C++ constructor."];
  Node1081 -> Node1082 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1082 [label="clang::CXXTemporaryObjectExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXTemporaryObjectExpr.html",tooltip="Represents a C++ functional cast expression that builds a temporary object."];
  Node1049 -> Node476 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node476 [label="clang::CXXDefaultArgExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDefaultArgExpr.html",tooltip="A default argument (C++ [dcl.fct.default])."];
  Node1049 -> Node477 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node477 [label="clang::CXXDefaultInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDefaultInitExpr.html",tooltip="A use of a default initializer in a constructor or in aggregate initialization."];
  Node1049 -> Node1083 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1083 [label="clang::CXXDeleteExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDeleteExpr.html",tooltip="Represents a delete expression for memory deallocation and destructor calls, e.g."];
  Node1049 -> Node478 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node478 [label="clang::CXXDependentScope\lMemberExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXDependentScopeMemberExpr.html",tooltip="Represents a C++ member access expression where the actual member referenced could not be resolved be..."];
  Node1049 -> Node1084 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1084 [label="clang::CXXFoldExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXFoldExpr.html",tooltip="Represents a folding of a pack over an operator."];
  Node1049 -> Node1085 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1085 [label="clang::CXXInheritedCtorInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXInheritedCtorInitExpr.html",tooltip="Represents a call to an inherited base class constructor from an inheriting constructor."];
  Node1049 -> Node481 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node481 [label="clang::CXXNewExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXNewExpr.html",tooltip="Represents a new-expression for memory allocation and constructor calls, e.g: \"new CXXNewExpr(foo)\"."];
  Node1049 -> Node1086 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1086 [label="clang::CXXNoexceptExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXNoexceptExpr.html",tooltip="Represents a C++11 noexcept expression (C++ [expr.unary.noexcept])."];
  Node1049 -> Node1087 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1087 [label="clang::CXXNullPtrLiteralExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXNullPtrLiteralExpr.html",tooltip="The null pointer literal (C++11 [lex.nullptr])"];
  Node1049 -> Node482 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node482 [label="clang::CXXParenListInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXParenListInitExpr.html",tooltip="Represents a list-initialization with parenthesis."];
  Node1049 -> Node1088 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1088 [label="clang::CXXPseudoDestructorExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXPseudoDestructorExpr.html",tooltip="Represents a C++ pseudo-destructor (C++ [expr.pseudo])."];
  Node1049 -> Node1089 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1089 [label="clang::CXXRewrittenBinary\lOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXRewrittenBinaryOperator.html",tooltip="A rewritten comparison expression that was originally written using operator syntax."];
  Node1049 -> Node1090 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1090 [label="clang::CXXScalarValueInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXScalarValueInitExpr.html",tooltip="An expression \"T()\" which creates a value-initialized rvalue of type T, which is a non-class type."];
  Node1049 -> Node1091 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1091 [label="clang::CXXStdInitializer\lListExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXStdInitializerListExpr.html",tooltip="Implicit construction of a std::initializer_list<T> object from an array temporary within list-initia..."];
  Node1049 -> Node1092 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1092 [label="clang::CXXThisExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXThisExpr.html",tooltip="Represents the this expression in C++."];
  Node1049 -> Node1093 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1093 [label="clang::CXXThrowExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXThrowExpr.html",tooltip="A C++ throw-expression (C++ [except.throw])."];
  Node1049 -> Node1094 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1094 [label="clang::CXXTypeidExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXTypeidExpr.html",tooltip="A C++ typeid expression (C++ [expr.typeid]), which gets the type_info that corresponds to the supplie..."];
  Node1049 -> Node486 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node486 [label="clang::CXXUnresolvedConstructExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXUnresolvedConstructExpr.html",tooltip="Describes an explicit type conversion that uses functional notion but could not be resolved because o..."];
  Node1049 -> Node1095 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1095 [label="clang::CXXUuidofExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1CXXUuidofExpr.html",tooltip="A Microsoft C++ __uuidof expression, which gets the _GUID that corresponds to the supplied type or ex..."];
  Node1049 -> Node488 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node488 [label="clang::DeclRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclRefExpr.html",tooltip="A reference to a declared variable, function, enum, etc."];
  Node1049 -> Node1096 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1096 [label="clang::DependentCoawaitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentCoawaitExpr.html",tooltip="Represents a 'co_await' expression while the type of the promise is dependent."];
  Node1049 -> Node491 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node491 [label="clang::DependentScopeDecl\lRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentScopeDeclRefExpr.html",tooltip="A qualified reference to a name whose declaration cannot yet be resolved."];
  Node1049 -> Node492 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node492 [label="clang::DesignatedInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DesignatedInitExpr.html",tooltip="Represents a C99 designated initializer expression."];
  Node1049 -> Node1097 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1097 [label="clang::DesignatedInitUpdateExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1DesignatedInitUpdateExpr.html",tooltip=" "];
  Node1049 -> Node1098 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1098 [label="clang::ExpressionTraitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExpressionTraitExpr.html",tooltip="An expression trait intrinsic."];
  Node1049 -> Node1099 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1099 [label="clang::ExtVectorElementExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtVectorElementExpr.html",tooltip="ExtVectorElementExpr - This represents access to specific elements of a vector, and may occur on the ..."];
  Node1049 -> Node1100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 -> Node1101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 -> Node1102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1102 [label="clang::FullExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1FullExpr.html",tooltip="FullExpr - Represents a \"full-expression\" node."];
  Node1102 -> Node470 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node470 [label="clang::ConstantExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstantExpr.html",tooltip="ConstantExpr - An expression that occurs in a constant context and optionally the result of evaluatin..."];
  Node1102 -> Node494 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node494 [label="clang::ExprWithCleanups",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExprWithCleanups.html",tooltip="Represents an expression – generally a full-expression – that introduces cleanups to be run at the en..."];
  Node1049 -> Node497 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node497 [label="clang::FunctionParmPackExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionParmPackExpr.html",tooltip="Represents a reference to a function parameter pack or init-capture pack that has been substituted bu..."];
  Node1049 -> Node500 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node500 [label="clang::GenericSelectionExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1GenericSelectionExpr.html",tooltip="Represents a C11 generic selection."];
  Node1049 -> Node1103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1103 [label="clang::GNUNullExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1GNUNullExpr.html",tooltip="GNUNullExpr - Implements the GNU __null extension, which is a name for a null pointer constant that h..."];
  Node1049 -> Node1104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1104 [label="clang::ImaginaryLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImaginaryLiteral.html",tooltip="ImaginaryLiteral - We support imaginary integer and floating point literals, like \"1...."];
  Node1049 -> Node1105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1105 [label="clang::ImplicitValueInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImplicitValueInitExpr.html",tooltip="Represents an implicitly-generated value initialization of an object of a given type."];
  Node1049 -> Node1106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1106 [label="clang::InitListExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1InitListExpr.html",tooltip="Describes an C or C++ initializer list."];
  Node1049 -> Node1107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 -> Node505 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node505 [label="clang::LambdaExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1LambdaExpr.html",tooltip="A C++ lambda expression, which produces a function object (of unspecified type) that can be invoked l..."];
  Node1049 -> Node1108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1108 [label="clang::MaterializeTemporaryExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1MaterializeTemporaryExpr.html",tooltip="Represents a prvalue temporary that is written into memory so that a reference can bind to it."];
  Node1049 -> Node1109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1109 [label="clang::MatrixSubscriptExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1MatrixSubscriptExpr.html",tooltip="MatrixSubscriptExpr - Matrix subscript expression for the MatrixType extension."];
  Node1049 -> Node507 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node507 [label="clang::MemberExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1MemberExpr.html",tooltip="MemberExpr - [C99 6.5.2.3] Structure and Union Members."];
  Node1049 -> Node1110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1110 [label="clang::MSPropertyRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSPropertyRefExpr.html",tooltip="A member reference to an MSPropertyDecl."];
  Node1049 -> Node1111 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1111 [label="clang::MSPropertySubscriptExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1MSPropertySubscriptExpr.html",tooltip="MS property subscript expression."];
  Node1049 -> Node1112 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1112 [label="clang::NoInitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1NoInitExpr.html",tooltip="Represents a place-holder for an object not to be initialized by anything."];
  Node1049 -> Node509 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node509 [label="clang::ObjCArrayLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCArrayLiteral.html",tooltip="ObjCArrayLiteral - used for objective-c array containers; as in: @[\"Hello\", NSApp,..."];
  Node1049 -> Node1113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1113 [label="clang::ObjCAvailabilityCheckExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCAvailabilityCheckExpr.html",tooltip="A runtime availability query."];
  Node1049 -> Node1114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1114 [label="clang::ObjCBoolLiteralExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCBoolLiteralExpr.html",tooltip="ObjCBoolLiteralExpr - Objective-C Boolean Literal."];
  Node1049 -> Node1115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1115 [label="clang::ObjCBoxedExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCBoxedExpr.html",tooltip="ObjCBoxedExpr - used for generalized expression boxing."];
  Node1049 -> Node512 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node512 [label="clang::ObjCDictionaryLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCDictionaryLiteral.html",tooltip="ObjCDictionaryLiteral - AST node to represent objective-c dictionary literals; as in:\"name\" : NSUserN..."];
  Node1049 -> Node1116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1116 [label="clang::ObjCEncodeExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCEncodeExpr.html",tooltip="ObjCEncodeExpr, used for @encode in Objective-C."];
  Node1049 -> Node1117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1117 [label="clang::ObjCIndirectCopyRestoreExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCIndirectCopyRestoreExpr.html",tooltip="ObjCIndirectCopyRestoreExpr - Represents the passing of a function argument by indirect copy-restore ..."];
  Node1049 -> Node1118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1118 [label="clang::ObjCIsaExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCIsaExpr.html",tooltip="ObjCIsaExpr - Represent X->isa and X.isa when X is an ObjC 'id' type."];
  Node1049 -> Node1119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1119 [label="clang::ObjCIvarRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCIvarRefExpr.html",tooltip="ObjCIvarRefExpr - A reference to an ObjC instance variable."];
  Node1049 -> Node513 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node513 [label="clang::ObjCMessageExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCMessageExpr.html",tooltip="An expression that sends a message to the given Objective-C object or class."];
  Node1049 -> Node1120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1120 [label="clang::ObjCPropertyRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCPropertyRefExpr.html",tooltip="ObjCPropertyRefExpr - A dot-syntax expression to access an ObjC property."];
  Node1049 -> Node1121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1121 [label="clang::ObjCProtocolExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCProtocolExpr.html",tooltip="ObjCProtocolExpr used for protocol expression in Objective-C."];
  Node1049 -> Node1122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1122 [label="clang::ObjCSelectorExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCSelectorExpr.html",tooltip="ObjCSelectorExpr used for @selector in Objective-C."];
  Node1049 -> Node1123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1123 [label="clang::ObjCStringLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCStringLiteral.html",tooltip="ObjCStringLiteral, used for Objective-C string literals i.e."];
  Node1049 -> Node1124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1124 [label="clang::ObjCSubscriptRefExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCSubscriptRefExpr.html",tooltip="ObjCSubscriptRefExpr - used for array and dictionary subscripting."];
  Node1049 -> Node515 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node515 [label="clang::OffsetOfExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OffsetOfExpr.html",tooltip="OffsetOfExpr - [C99 7.17] - This represents an expression of the form offsetof(record-type,..."];
  Node1049 -> Node1125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1125 [label="clang::OMPArraySectionExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPArraySectionExpr.html",tooltip="OpenMP 5.0 [2.1.5, Array Sections]."];
  Node1049 -> Node519 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node519 [label="clang::OMPArrayShapingExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPArrayShapingExpr.html",tooltip="An explicit cast in C or a C-style cast in C++, which uses the syntax ([s1][s2]......"];
  Node1049 -> Node533 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node533 [label="clang::OMPIteratorExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPIteratorExpr.html",tooltip="OpenMP 5.0 [2.1.6 Iterators] Iterators are identifiers that expand to multiple values in the clause o..."];
  Node1049 -> Node1126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1126 [label="clang::OpaqueValueExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OpaqueValueExpr.html",tooltip="OpaqueValueExpr - An expression referring to an opaque object of a fixed type and value class."];
  Node1049 -> Node1127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1127 [label="clang::OverloadExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1OverloadExpr.html",tooltip="A reference to an overloaded function set, either an UnresolvedLookupExpr or an UnresolvedMemberExpr."];
  Node1127 -> Node570 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node570 [label="clang::UnresolvedLookupExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedLookupExpr.html",tooltip="A reference to a name which we were able to look up during parsing but could not resolve to a specifi..."];
  Node1127 -> Node571 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node571 [label="clang::UnresolvedMemberExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedMemberExpr.html",tooltip="Represents a C++ member access expression for which lookup produced a set of overloaded functions."];
  Node1049 -> Node1128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1128 [label="clang::PackExpansionExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1PackExpansionExpr.html",tooltip="Represents a C++11 pack expansion that produces a sequence of expressions."];
  Node1049 -> Node1129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1129 [label="clang::ParenExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParenExpr.html",tooltip="ParenExpr - This represents a parethesized expression, e.g."];
  Node1049 -> Node549 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node549 [label="clang::ParenListExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParenListExpr.html",tooltip=" "];
  Node1049 -> Node553 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node553 [label="clang::PredefinedExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1PredefinedExpr.html",tooltip="[C99 6.4.2.2] - A predefined identifier such as func."];
  Node1049 -> Node554 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node554 [label="clang::PseudoObjectExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1PseudoObjectExpr.html",tooltip="PseudoObjectExpr - An expression which accesses a pseudo-object l-value."];
  Node1049 -> Node555 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node555 [label="clang::RecoveryExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1RecoveryExpr.html",tooltip="Frontend produces RecoveryExprs on semantic errors that prevent creating other well-formed expression..."];
  Node1049 -> Node556 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node556 [label="clang::RequiresExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1RequiresExpr.html",tooltip="C++2a [expr.prim.req]: A requires-expression provides a concise way to express requirements on templa..."];
  Node1049 -> Node1130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1130 [label="clang::ShuffleVectorExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1ShuffleVectorExpr.html",tooltip="ShuffleVectorExpr - clang-specific builtin-in function __builtin_shufflevector."];
  Node1049 -> Node558 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node558 [label="clang::SizeOfPackExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1SizeOfPackExpr.html",tooltip="Represents an expression that computes the length of a parameter pack."];
  Node1049 -> Node1131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1131 [label="clang::SourceLocExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1SourceLocExpr.html",tooltip="Represents a function call to one of __builtin_LINE(), __builtin_COLUMN(), __builtin_FUNCTION(),..."];
  Node1049 -> Node1132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1132 [label="clang::StmtExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1StmtExpr.html",tooltip="StmtExpr - This is the GNU Statement Expression extension: ({int X=4; X;})."];
  Node1049 -> Node559 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node559 [label="clang::StringLiteral",height=0.2,width=0.4,color="black",URL="$classclang_1_1StringLiteral.html",tooltip="StringLiteral - This represents a string literal expression, e.g."];
  Node1049 -> Node1133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1133 [label="clang::SubstNonTypeTemplate\lParmExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstNonTypeTemplateParmExpr.html",tooltip="Represents a reference to a non-type template parameter that has been substituted with a template arg..."];
  Node1049 -> Node1134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1134 [label="clang::SubstNonTypeTemplate\lParmPackExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstNonTypeTemplateParmPackExpr.html",tooltip="Represents a reference to a non-type template parameter pack that has been substituted with a non-tem..."];
  Node1049 -> Node1135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1135 [label="clang::SYCLUniqueStableNameExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1SYCLUniqueStableNameExpr.html",tooltip=" "];
  Node1049 -> Node568 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node568 [label="clang::TypeTraitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeTraitExpr.html",tooltip="A type trait used in the implementation of various C++11 and Library TR1 trait templates."];
  Node1049 -> Node1136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1136 [label="clang::TypoExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypoExpr.html",tooltip="TypoExpr - Internal placeholder for expressions where typo correction still needs to be performed and..."];
  Node1049 -> Node1137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1137 [label="clang::UnaryExprOrTypeTraitExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnaryExprOrTypeTraitExpr.html",tooltip="UnaryExprOrTypeTraitExpr - expression with either a type or (unevaluated) expression operand."];
  Node1049 -> Node569 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node569 [label="clang::UnaryOperator",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnaryOperator.html",tooltip="UnaryOperator - This represents the unary-expression's (except sizeof and alignof),..."];
  Node1049 -> Node1138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1138 [label="clang::VAArgExpr",height=0.2,width=0.4,color="black",URL="$classclang_1_1VAArgExpr.html",tooltip="Represents a call to the builtin function __builtin_va_arg."];
  Node1048 -> Node1139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1139 [label="clang::LabelStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1LabelStmt.html",tooltip="LabelStmt - Represents a label, which has a substatement."];
  Node943 -> Node574 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node574 [label="clang::WhileStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1WhileStmt.html",tooltip="WhileStmt - This represents a 'while' stmt."];
  Node751 [label="clang::TemplateParmPosition",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateParmPosition.html",tooltip="Defines the position of a template parameter within a template parameter list."];
  Node751 -> Node508 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node751 -> Node565 [dir="back",color="darkgreen",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 [label="TrailingObjects",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node460 -> Node461 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node461 [label="clang::ASTConstraintSatisfaction",height=0.2,width=0.4,color="black",URL="$structclang_1_1ASTConstraintSatisfaction.html",tooltip="The result of a constraint satisfaction check, containing the necessary information to diagnose an un..."];
  Node460 -> Node462 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node462 [label="clang::ASTTemplateArgument\lListInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1ASTTemplateArgumentListInfo.html",tooltip="Represents an explicit template argument list in C++, e.g., the \"<int>\" in \"sort<int>\"."];
  Node460 -> Node463 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node464 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node465 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node466 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node467 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node468 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node469 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node470 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node471 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node472 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node473 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node474 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node475 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node476 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node477 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node478 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node479 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node480 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node481 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node482 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node483 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node484 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node485 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node486 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node487 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node487 [label="clang::DeclGroup",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclGroup.html",tooltip=" "];
  Node460 -> Node488 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node489 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node490 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node490 [label="clang::DependentFunction\lTemplateSpecializationInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentFunctionTemplateSpecializationInfo.html",tooltip="Provides information about a dependent function-template specialization declaration."];
  Node460 -> Node491 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node492 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node493 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node494 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node495 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node496 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node496 [label="clang::FunctionDecl\l::DefaultedFunctionInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionDecl_1_1DefaultedFunctionInfo.html",tooltip="Stashed information about a defaulted function definition whose body has not yet been lazily generate..."];
  Node460 -> Node497 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node498 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node499 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node500 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node501 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node502 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node503 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node504 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node505 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node506 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node506 [label="clang::MacroArgs",height=0.2,width=0.4,color="black",URL="$classclang_1_1MacroArgs.html",tooltip="MacroArgs - An instance of this class captures information about the formal arguments specified to a ..."];
  Node460 -> Node507 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node508 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node509 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node510 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node511 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node512 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node513 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node514 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node514 [label="clang::ObjCTypeParamList",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCTypeParamList.html",tooltip="Stores a list of Objective-C type parameters for a parameterized class or a category/extension thereo..."];
  Node460 -> Node515 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node516 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node517 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node518 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node519 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node520 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node520 [label="clang::OMPChildren",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPChildren.html",tooltip="Contains data for OpenMP directives: clauses, children expressions/statements (helpers for codegen) a..."];
  Node460 -> Node521 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node522 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node523 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node524 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node525 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node526 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node527 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node528 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node529 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node530 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node531 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node532 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node533 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node534 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node535 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node536 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node537 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node538 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node539 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node540 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node541 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node542 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node543 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node544 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node545 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node546 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node547 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node548 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node549 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node550 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node551 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node552 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node553 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node554 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node555 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node556 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node557 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node558 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node559 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node560 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node561 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node562 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node562 [label="clang::TemplateArgumentList",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateArgumentList.html",tooltip="A template argument list."];
  Node460 -> Node563 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node563 [label="clang::TemplateIdAnnotation",height=0.2,width=0.4,color="black",URL="$structclang_1_1TemplateIdAnnotation.html",tooltip="Information about a template-id annotation token."];
  Node460 -> Node564 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node564 [label="clang::TemplateParameterList",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateParameterList.html",tooltip="Stores a list of template parameters for a TemplateDecl and its derived classes."];
  Node460 -> Node565 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node566 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node567 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node568 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node569 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node570 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node571 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node572 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node573 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 -> Node574 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="clang::UncommonTemplateName\lStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1UncommonTemplateNameStorage.html",tooltip="Implementation class used to describe either a set of overloaded template names or an already-substit..."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="clang::AssumedTemplateStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1AssumedTemplateStorage.html",tooltip="A structure for storing the information associated with a name that has been assumed to be a template..."];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::OverloadedTemplate\lStorage",height=0.2,width=0.4,color="black",URL="$classclang_1_1OverloadedTemplateStorage.html",tooltip="A structure for storing the information associated with an overloaded template name."];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}

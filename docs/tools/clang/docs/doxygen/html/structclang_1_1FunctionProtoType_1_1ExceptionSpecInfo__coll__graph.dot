digraph "clang::FunctionProtoType::ExceptionSpecInfo"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::FunctionProtoType\l::ExceptionSpecInfo",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Holds information about the various types of exception specification."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Exceptions" ,fontname="Helvetica"];
  Node2 [label="llvm::ArrayRef\< clang\l::QualType \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< clang::QualType \>" ,fontname="Helvetica"];
  Node3 [label="llvm::ArrayRef\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1ArrayRef.html",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SourceTemplate\nSourceDecl" ,fontname="Helvetica"];
  Node4 [label="clang::FunctionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionDecl.html",tooltip="Represents a function declaration or definition."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::DeclaratorDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclaratorDecl.html",tooltip="Represents a ValueDecl that came out of a declarator."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::ValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node8 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextInContextAndBits" ,fontname="Helvetica"];
  Node9 [label="PointerIntPair\< clang\l::Decl *, 3, ModuleOwnership\lKind \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node10 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node11 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="clang::DeclContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclContext.html",tooltip="DeclContext - This is used only as base class of specific decl types that can act as declaration cont..."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TagDeclBits" ,fontname="Helvetica"];
  Node12 [label="clang::DeclContext\l::TagDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by TagDecl."];
  Node13 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EnumDeclBits" ,fontname="Helvetica"];
  Node13 [label="clang::DeclContext\l::EnumDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by EnumDecl."];
  Node14 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @42" ,fontname="Helvetica"];
  Node14 [label="anonymous:@42",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlockDeclBits" ,fontname="Helvetica"];
  Node15 [label="clang::DeclContext\l::BlockDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by BlockDecl."];
  Node16 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCMethodDeclBits" ,fontname="Helvetica"];
  Node16 [label="clang::DeclContext\l::ObjCMethodDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by ObjCMethodDecl."];
  Node17 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPDeclareReductionDeclBits" ,fontname="Helvetica"];
  Node17 [label="clang::DeclContext\l::OMPDeclareReductionDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by OMPDeclareReductionDecl."];
  Node18 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LinkageSpecDeclBits" ,fontname="Helvetica"];
  Node18 [label="clang::DeclContext\l::LinkageSpecDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by LinkageSpecDecl."];
  Node19 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RecordDeclBits" ,fontname="Helvetica"];
  Node19 [label="clang::DeclContext\l::RecordDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by RecordDecl."];
  Node20 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCContainerDeclBits" ,fontname="Helvetica"];
  Node20 [label="clang::DeclContext\l::ObjCContainerDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by ObjCContainerDecl."];
  Node21 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXConstructorDeclBits" ,fontname="Helvetica"];
  Node21 [label="clang::DeclContext\l::CXXConstructorDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by CXXConstructorDecl."];
  Node22 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FunctionDeclBits" ,fontname="Helvetica"];
  Node22 [label="clang::DeclContext\l::FunctionDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by FunctionDecl."];
  Node23 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclContextBits" ,fontname="Helvetica"];
  Node23 [label="clang::DeclContext\l::DeclContextBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by DeclContext."];
  Node8 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDecl\nLastDecl" ,fontname="Helvetica"];
  Node24 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="clang::Redeclarable\l\< FunctionDecl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RedeclLink" ,fontname="Helvetica"];
  Node25 [label="clang::Redeclarable\l\< decl_type \>::DeclLink",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable_1_1DeclLink.html",tooltip=" "];
  Node4 -> Node24 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node26 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< FunctionDecl \>" ,fontname="Helvetica"];
  Node26 [label="clang::Redeclarable\l\< decl_type \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1Redeclarable.html",tooltip="Provides common interface for the Decls that can be redeclared."];
  Node25 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RedeclLink" ,fontname="Helvetica"];
  Node27 -> Node26 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node27 [label="decl_type *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node28 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultedInfo" ,fontname="Helvetica"];
  Node28 [label="clang::FunctionDecl\l::DefaultedFunctionInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionDecl_1_1DefaultedFunctionInfo.html",tooltip="Stashed information about a defaulted function definition whose body has not yet been lazily generate..."];
  Node29 -> Node28 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="llvm::TrailingObjects\l\< DefaultedFunctionInfo,\l DeclAccessPair \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node30 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Body" ,fontname="Helvetica"];
  Node30 [label="clang::LazyOffsetPtr\l\< Stmt, uint64_t, &External\lASTSource::GetExternalDeclStmt \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1LazyOffsetPtr.html",tooltip=" "];
  Node31 -> Node30 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ptr" ,fontname="Helvetica"];
  Node31 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node32 -> Node30 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Stmt, uint64_t, &External\lASTSource::GetExternalDeclStmt \>" ,fontname="Helvetica"];
  Node32 [label="clang::LazyOffsetPtr\l\< T, OffsT, Get \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1LazyOffsetPtr.html",tooltip="A lazy pointer to an AST node (of base type T) that resides within an external AST source."];
  Node31 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ptr" ,fontname="Helvetica"];
  Node33 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NoexceptExpr" ,fontname="Helvetica"];
  Node33 [label="clang::Expr",height=0.2,width=0.4,color="black",URL="$classclang_1_1Expr.html",tooltip="This represents one expression."];
  Node34 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="clang::ValueStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueStmt.html",tooltip="Represents a statement that could possibly have a value and type."];
  Node35 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="clang::Stmt",height=0.2,width=0.4,color="red",URL="$classclang_1_1Stmt.html",tooltip="Stmt - This represents one statement."];
  Node36 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThrowExprBits" ,fontname="Helvetica"];
  Node36 [label="clang::Stmt::CXXThrowExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThrowExprBitfields.html",tooltip=" "];
  Node37 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NullStmtBits" ,fontname="Helvetica"];
  Node37 [label="clang::Stmt::NullStmtBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1NullStmtBitfields.html",tooltip=" "];
  Node38 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCIndirectCopyRestoreExprBits" ,fontname="Helvetica"];
  Node38 [label="clang::Stmt::ObjCIndirect\lCopyRestoreExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1ObjCIndirectCopyRestoreExprBitfields.html",tooltip=" "];
  Node39 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SubstNonTypeTemplateParm\lExprBits" ,fontname="Helvetica"];
  Node39 [label="clang::Stmt::SubstNonType\lTemplateParmExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1SubstNonTypeTemplateParmExprBitfields.html",tooltip=" "];
  Node40 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThisExprBits" ,fontname="Helvetica"];
  Node40 [label="clang::Stmt::CXXThisExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThisExprBitfields.html",tooltip=" "];
  Node41 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXBoolLiteralExprBits" ,fontname="Helvetica"];
  Node41 [label="clang::Stmt::CXXBoolLiteral\lExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXBoolLiteralExprBitfields.html",tooltip=" "];
  Node42 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CastExprBits" ,fontname="Helvetica"];
  Node42 [label="clang::Stmt::CastExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CastExprBitfields.html",tooltip=" "];
  Node43 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UnaryExprOrTypeTraitExprBits" ,fontname="Helvetica"];
  Node43 [label="clang::Stmt::UnaryExprOr\lTypeTraitExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1UnaryExprOrTypeTraitExprBitfields.html",tooltip=" "];
  Node44 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BinaryOperatorBits" ,fontname="Helvetica"];
  Node44 [label="clang::Stmt::BinaryOperator\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1BinaryOperatorBitfields.html",tooltip=" "];
  Node45 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXNewExprBits" ,fontname="Helvetica"];
  Node45 [label="clang::Stmt::CXXNewExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXNewExprBitfields.html",tooltip=" "];
  Node46 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXRewrittenBinaryOperatorBits" ,fontname="Helvetica"];
  Node46 [label="clang::Stmt::CXXRewritten\lBinaryOperatorBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXRewrittenBinaryOperatorBitfields.html",tooltip=" "];
  Node47 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CallExprBits" ,fontname="Helvetica"];
  Node47 [label="clang::Stmt::CallExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CallExprBitfields.html",tooltip=" "];
  Node48 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExprBits" ,fontname="Helvetica"];
  Node48 [label="clang::Stmt::ExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1ExprBitfields.html",tooltip=" "];
  Node49 -> Node35 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OverloadExprBits" ,fontname="Helvetica"];
  Node49 [label="clang::Stmt::OverloadExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1OverloadExprBitfields.html",tooltip=" "];
  Node99 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Type" ,fontname="Helvetica"];
  Node99 [label="ExceptionSpecificationType",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

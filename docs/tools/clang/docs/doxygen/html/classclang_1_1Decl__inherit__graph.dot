digraph "clang::Decl"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::Decl",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::AccessSpecDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1AccessSpecDecl.html",tooltip="Represents an access specifier followed by colon ':'."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::BlockDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BlockDecl.html",tooltip="Represents a block literal declaration, which is like an unnamed FunctionDecl."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::CapturedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1CapturedDecl.html",tooltip="Represents the body of a CapturedStmt, and serves as its DeclContext."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::ClassScopeFunction\lSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ClassScopeFunctionSpecializationDecl.html",tooltip="Declaration of a function specialization at template class scope."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::EmptyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1EmptyDecl.html",tooltip="Represents an empty-declaration."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="clang::ExportDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExportDecl.html",tooltip="Represents a standard C++ module export declaration."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="clang::ExternCContextDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExternCContextDecl.html",tooltip="Declaration context for names declared as extern \"C\" in C++."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="clang::FileScopeAsmDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FileScopeAsmDecl.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="clang::FriendDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FriendDecl.html",tooltip="FriendDecl - Represents the declaration of a friend entity, which can be a function,..."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="clang::FriendTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FriendTemplateDecl.html",tooltip="Declaration of a friend template."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="clang::ImplicitConceptSpecializationDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImplicitConceptSpecializationDecl.html",tooltip=" "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="clang::ImportDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ImportDecl.html",tooltip="Describes a module import declaration, which makes the contents of the named module visible in the cu..."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="clang::LifetimeExtendedTemporaryDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LifetimeExtendedTemporaryDecl.html",tooltip="Implicit declaration of a temporary that was materialized by a MaterializeTemporaryExpr and lifetime-..."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="clang::LinkageSpecDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LinkageSpecDecl.html",tooltip="Represents a linkage specification."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="clang::BaseUsingDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1BaseUsingDecl.html",tooltip="Represents a C++ declaration that introduces decls from somewhere else."];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="clang::UsingDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingDecl.html",tooltip="Represents a C++ using-declaration."];
  Node17 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="clang::UsingEnumDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingEnumDecl.html",tooltip="Represents a C++ using-enum-declaration."];
  Node16 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="clang::HLSLBufferDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1HLSLBufferDecl.html",tooltip="HLSLBufferDecl - Represent a cbuffer or tbuffer declaration."];
  Node16 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="clang::LabelDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1LabelDecl.html",tooltip="Represents the declaration of a label."];
  Node16 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="clang::NamespaceAliasDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamespaceAliasDecl.html",tooltip="Represents a C++ namespace alias."];
  Node16 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="clang::NamespaceDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamespaceDecl.html",tooltip="Represent a C++ namespace."];
  Node16 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="clang::ObjCCompatibleAliasDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCCompatibleAliasDecl.html",tooltip="ObjCCompatibleAliasDecl - Represents alias of a class."];
  Node16 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="clang::ObjCContainerDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCContainerDecl.html",tooltip="ObjCContainerDecl - Represents a container for method declarations."];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="clang::ObjCCategoryDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCCategoryDecl.html",tooltip="ObjCCategoryDecl - Represents a category declaration."];
  Node25 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="clang::ObjCImplDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1ObjCImplDecl.html",tooltip=" "];
  Node25 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="clang::ObjCInterfaceDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCInterfaceDecl.html",tooltip="Represents an ObjC class declaration."];
  Node25 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="clang::ObjCProtocolDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCProtocolDecl.html",tooltip="Represents an Objective-C protocol declaration."];
  Node16 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="clang::ObjCMethodDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCMethodDecl.html",tooltip="ObjCMethodDecl - Represents an instance or class method declaration."];
  Node16 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="clang::ObjCPropertyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCPropertyDecl.html",tooltip="Represents one property declaration in an Objective-C interface."];
  Node16 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="clang::TemplateDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1TemplateDecl.html",tooltip="The base class of all kinds of template declarations (e.g., class, function, etc.)."];
  Node16 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="clang::TypeDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1TypeDecl.html",tooltip="Represents a declaration of a type."];
  Node16 -> Node56 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="clang::UnresolvedUsingIf\lExistsDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingIfExistsDecl.html",tooltip="This node is generated when a using-declaration that was annotated with attribute((using_if_exists)) ..."];
  Node16 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="clang::UsingDirectiveDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingDirectiveDecl.html",tooltip="Represents C++ using-directive."];
  Node16 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="clang::UsingPackDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingPackDecl.html",tooltip="Represents a pack of using declarations that a single using-declarator pack-expanded into."];
  Node16 -> Node59 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="clang::UsingShadowDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1UsingShadowDecl.html",tooltip="Represents a shadow declaration implicitly introduced into a scope by a (resolved) using-declaration ..."];
  Node16 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="clang::ValueDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node1 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="clang::ObjCPropertyImplDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ObjCPropertyImplDecl.html",tooltip="ObjCPropertyImplDecl - Represents implementation declaration of a property in a class or category imp..."];
  Node1 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="clang::PragmaCommentDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1PragmaCommentDecl.html",tooltip="Represents a #pragma comment line."];
  Node1 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="clang::PragmaDetectMismatchDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1PragmaDetectMismatchDecl.html",tooltip="Represents a #pragma detect_mismatch line."];
  Node1 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="clang::RequiresExprBodyDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RequiresExprBodyDecl.html",tooltip="Represents the body of a requires-expression."];
  Node1 -> Node95 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="clang::StaticAssertDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1StaticAssertDecl.html",tooltip="Represents a C++11 static_assert declaration."];
  Node1 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="clang::TopLevelStmtDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TopLevelStmtDecl.html",tooltip="A declaration that models statements at global scope."];
  Node1 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="clang::TranslationUnitDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TranslationUnitDecl.html",tooltip="The top declaration context."];
  Node1 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="clang::OMPDeclarativeDirective\l\< Decl \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPDeclarativeDirective.html",tooltip=" "];
  Node98 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="clang::OMPAllocateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPAllocateDecl.html",tooltip="This represents '#pragma omp allocate ...' directive."];
  Node98 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="clang::OMPRequiresDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPRequiresDecl.html",tooltip="This represents '#pragma omp requires...' directive."];
  Node98 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="clang::OMPThreadPrivateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1OMPThreadPrivateDecl.html",tooltip="This represents '#pragma omp threadprivate ...' directive."];
}

digraph "clang::CodeGenOptions"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::CodeGenOptions",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="CodeGenOptions - Track various options which control how the code is optimized and passed to the back..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::CodeGenOptionsBase",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGenOptionsBase.html",tooltip="Bitfields of CodeGenOptions, split out from CodeGenOptions to ensure that this large collection of bi..."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" XRayInstrumentationBundle" ,fontname="Helvetica"];
  Node3 [label="clang::XRayInstrSet",height=0.2,width=0.4,color="black",URL="$structclang_1_1XRayInstrSet.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mask" ,fontname="Helvetica"];
  Node4 [label="uint32_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CoveragePrefixMap\nDebugPrefixMap" ,fontname="Helvetica"];
  Node5 [label="map\< std::string, std\l::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Reciprocals\nCommandLineArgs\nSanitizeCoverageAllowlist\lFiles\nDefaultFunctionAttrs\nRewriteMapFiles\nSanitizeCoverageIgnorelist\lFiles\nPassPlugins\nDependentLibraries\nNoBuiltinFuncs\nSanitizeMetadataIgnorelist\lFiles\n..." ,fontname="Helvetica"];
  Node6 [label="vector\< std::string \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Argv0\nCoverageVersion" ,fontname="Helvetica"];
  Node7 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FP32DenormalMode\nFPDenormalMode" ,fontname="Helvetica"];
  Node8 [label="DenormalMode",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SanitizeTrap\nSanitizeRecover" ,fontname="Helvetica"];
  Node9 [label="clang::SanitizerSet",height=0.2,width=0.4,color="black",URL="$structclang_1_1SanitizerSet.html",tooltip=" "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mask" ,fontname="Helvetica"];
  Node10 [label="clang::SanitizerMask",height=0.2,width=0.4,color="black",URL="$classclang_1_1SanitizerMask.html",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ProfileRemappingFile\nStackProtectorGuardSymbol\nProfileInstrumentUsePath\nTrapFuncName\nCodeModel\nSymbolPartition\nStackUsageOutput\nOptRecordFormat\nPreferVectorWidth\nMainFileName\n..." ,fontname="Helvetica"];
  Node11 [label="string",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node12 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CmdArgs" ,fontname="Helvetica"];
  Node12 [label="vector\< uint8_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node13 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OptimizationRemark\nOptimizationRemarkAnalysis\nOptimizationRemarkMissed" ,fontname="Helvetica"];
  Node13 [label="clang::CodeGenOptions\l::OptRemark",height=0.2,width=0.4,color="black",URL="$structclang_1_1CodeGenOptions_1_1OptRemark.html",tooltip="Optimization remark with an optional regular expression pattern."];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind" ,fontname="Helvetica"];
  Node14 [label="RemarkKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Regex" ,fontname="Helvetica"];
  Node15 [label="shared_ptr\< llvm::Regex \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node11 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Pattern" ,fontname="Helvetica"];
  Node16 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RelocationModel" ,fontname="Helvetica"];
  Node16 [label="Model",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagnosticsHotnessThreshold" ,fontname="Helvetica"];
  Node17 [label="optional\< uint64_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DiagnosticsMisExpectTolerance" ,fontname="Helvetica"];
  Node18 [label="optional\< uint32_t \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LinkBitcodeFiles" ,fontname="Helvetica"];
  Node19 [label="vector\< clang::CodeGenOptions\l::BitcodeFileToLink \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
}

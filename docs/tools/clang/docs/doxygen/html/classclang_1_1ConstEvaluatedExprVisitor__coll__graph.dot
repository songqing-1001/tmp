digraph "clang::ConstEvaluatedExprVisitor&lt; ImplClass &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::ConstEvaluatedExpr\lVisitor\< ImplClass \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="ConstEvaluatedExprVisitor - This class visits 'const Expr *'s."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::EvaluatedExprVisitor\lBase\< llvm::make_const_ptr,\l ImplClass \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1EvaluatedExprVisitorBase.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::StmtVisitorBase\l\< llvm::make_const_ptr,\l ImplClass, void \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1StmtVisitorBase.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" P" ,fontname="Helvetica"];
  Node4 [label="ParamTys",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node3 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::make_const\l_ptr, ImplClass, void \>" ,fontname="Helvetica"];
  Node5 [label="clang::StmtVisitorBase\l\< Ptr, ImplClass, RetTy,\l ParamTys \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1StmtVisitorBase.html",tooltip="StmtVisitorBase - This class implements a simple visitor for Stmt subclasses."];
  Node4 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" P" ,fontname="Helvetica"];
  Node6 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
  Node6 [label="clang::ASTContext",height=0.2,width=0.4,color="black",URL="$classclang_1_1ASTContext.html",tooltip="Holds long-lived AST nodes (such as types and decls) that can be referred to throughout the semantic ..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="llvm::RefCountedBase\l\< ASTContext \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RefCountedBase.html",tooltip=" "];
  Node8 -> Node7 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ASTContext \>" ,fontname="Helvetica"];
  Node8 [label="llvm::RefCountedBase\l\< Derived \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1RefCountedBase.html",tooltip=" "];
  Node9 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CompCategories" ,fontname="Helvetica"];
  Node9 [label="clang::ComparisonCategories",height=0.2,width=0.4,color="black",URL="$classclang_1_1ComparisonCategories.html",tooltip=" "];
  Node10 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExternalSource" ,fontname="Helvetica"];
  Node10 [label="llvm::IntrusiveRefCntPtr\l\< clang::ExternalASTSource \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntrusiveRefCntPtr.html",tooltip=" "];
  Node11 -> Node10 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< clang::ExternalASTSource \>" ,fontname="Helvetica"];
  Node11 [label="llvm::IntrusiveRefCntPtr\< T \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1IntrusiveRefCntPtr.html",tooltip=" "];
  Node12 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPArrayShapingTy\nDependentTy\nSatUnsignedShortAccumTy\nUnsignedInt128Ty\nUnsignedShortFractTy\nFloat128Ty\nPseudoObjectTy\nInt128Ty\nSignedCharTy\nARCUnbridgedCastTy\n..." ,fontname="Helvetica"];
  Node12 [label="clang::CanQual\< Type \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1CanQual.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Type \>" ,fontname="Helvetica"];
  Node13 [label="clang::CanQual\< T \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1CanQual.html",tooltip="Represents a canonical, potentially-qualified type."];
  Node14 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CUDAExternalDeviceDeclODRUsed\lByHost" ,fontname="Helvetica"];
  Node14 [label="llvm::DenseSet\< const\l clang::ValueDecl * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseSet.html",tooltip=" "];
  Node15 -> Node14 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const clang::ValueDecl * \>" ,fontname="Helvetica"];
  Node15 [label="llvm::DenseSet\< ValueT,\l ValueInfoT \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseSet.html",tooltip=" "];
  Node16 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Idents" ,fontname="Helvetica"];
  Node16 [label="clang::IdentifierTable",height=0.2,width=0.4,color="black",URL="$classclang_1_1IdentifierTable.html",tooltip="Implements an efficient mapping from strings to IdentifierInfo nodes."];
  Node17 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SectionInfos" ,fontname="Helvetica"];
  Node17 [label="StringMap\< clang::ASTContext\l::SectionInfo \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AutoDeductTy\nAutoRRefDeductTy" ,fontname="Helvetica"];
  Node18 [label="clang::QualType",height=0.2,width=0.4,color="black",URL="$classclang_1_1QualType.html",tooltip="A (possibly-)qualified type."];
  Node19 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MSGuidTagDecl" ,fontname="Helvetica"];
  Node19 [label="clang::TagDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TagDecl.html",tooltip="Represents the declaration of a struct/union/class/enum."];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="clang::TypeDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeDecl.html",tooltip="Represents a declaration of a type."];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node23 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextInContextAndBits" ,fontname="Helvetica"];
  Node23 [label="PointerIntPair\< clang\l::Decl *, 3, ModuleOwnership\lKind \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node24 -> Node22 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node24 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node25 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="clang::DeclContext",height=0.2,width=0.4,color="red",URL="$classclang_1_1DeclContext.html",tooltip="DeclContext - This is used only as base class of specific decl types that can act as declaration cont..."];
  Node26 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TagDeclBits" ,fontname="Helvetica"];
  Node26 [label="clang::DeclContext\l::TagDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by TagDecl."];
  Node27 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EnumDeclBits" ,fontname="Helvetica"];
  Node27 [label="clang::DeclContext\l::EnumDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by EnumDecl."];
  Node28 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @42" ,fontname="Helvetica"];
  Node28 [label="anonymous:@42",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node29 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlockDeclBits" ,fontname="Helvetica"];
  Node29 [label="clang::DeclContext\l::BlockDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by BlockDecl."];
  Node30 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCMethodDeclBits" ,fontname="Helvetica"];
  Node30 [label="clang::DeclContext\l::ObjCMethodDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by ObjCMethodDecl."];
  Node31 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPDeclareReductionDeclBits" ,fontname="Helvetica"];
  Node31 [label="clang::DeclContext\l::OMPDeclareReductionDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by OMPDeclareReductionDecl."];
  Node32 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LinkageSpecDeclBits" ,fontname="Helvetica"];
  Node32 [label="clang::DeclContext\l::LinkageSpecDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by LinkageSpecDecl."];
  Node33 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RecordDeclBits" ,fontname="Helvetica"];
  Node33 [label="clang::DeclContext\l::RecordDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by RecordDecl."];
  Node34 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCContainerDeclBits" ,fontname="Helvetica"];
  Node34 [label="clang::DeclContext\l::ObjCContainerDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by ObjCContainerDecl."];
  Node35 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXConstructorDeclBits" ,fontname="Helvetica"];
  Node35 [label="clang::DeclContext\l::CXXConstructorDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by CXXConstructorDecl."];
  Node22 -> Node25 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FirstDecl\nLastDecl" ,fontname="Helvetica"];
  Node38 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="clang::Redeclarable\l\< TagDecl \>",height=0.2,width=0.4,color="red",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node19 -> Node38 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node42 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RedeclChainComments\nCommentlessRedeclChains" ,fontname="Helvetica"];
  Node42 [label="DenseMap\< const clang\l::Decl *, const clang\l::Decl * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node43 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclRawComments" ,fontname="Helvetica"];
  Node43 [label="DenseMap\< const clang\l::Decl *, const clang\l::RawComment * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node44 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Comments" ,fontname="Helvetica"];
  Node44 [label="clang::RawCommentList",height=0.2,width=0.4,color="black",URL="$classclang_1_1RawCommentList.html",tooltip="This class represents all comments included in the translation unit, sorted in order of appearance in..."];
  Node45 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CommentsLoaded" ,fontname="Helvetica"];
  Node45 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node46 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TUKind" ,fontname="Helvetica"];
  Node46 [label="const TranslationUnitKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node47 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Selectors" ,fontname="Helvetica"];
  Node47 [label="clang::SelectorTable",height=0.2,width=0.4,color="black",URL="$classclang_1_1SelectorTable.html",tooltip="This table allows us to fully hide how we implement multi-keyword caching."];
  Node24 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumImplicitCopyAssignment\lOperators\nNumImplicitMoveAssignment\lOperatorsDeclared\nNumImplicitCopyAssignmentOperators\lDeclared\nNumImplicitMoveConstructorsDeclared\nNumImplicitDestructors\nNumImplicitMoveConstructors\nNumImplicitMoveAssignmentOperators\nNumImplicitDefaultConstructorsDeclared\nNumImplicitCopyConstructorsDeclared\nNumImplicitDestructorsDeclared\n..." ,fontname="Helvetica"];
  Node22 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VaListTagDecl" ,fontname="Helvetica"];
  Node48 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CUDAConstantEvalCtx" ,fontname="Helvetica"];
  Node48 [label="clang::ASTContext::\lCUDAConstantEvalContext",height=0.2,width=0.4,color="black",URL="$structclang_1_1ASTContext_1_1CUDAConstantEvalContext.html",tooltip=" "];
  Node45 -> Node48 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NoWrongSidedVars" ,fontname="Helvetica"];
  Node49 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclarationNames" ,fontname="Helvetica"];
  Node49 [label="clang::DeclarationNameTable",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclarationNameTable.html",tooltip="DeclarationNameTable is used to store and retrieve DeclarationName instances for the various kinds of..."];
  Node50 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BuiltinInfo" ,fontname="Helvetica"];
  Node50 [label="clang::Builtin::Context",height=0.2,width=0.4,color="black",URL="$classclang_1_1Builtin_1_1Context.html",tooltip="Holds information about both target-independent and target-specific builtins, allowing easy queries b..."];
  Node51 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CUDADeviceVarODRUsedByHost" ,fontname="Helvetica"];
  Node51 [label="llvm::DenseSet\< const\l clang::VarDecl * \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1DenseSet.html",tooltip=" "];
  Node15 -> Node51 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< const clang::VarDecl * \>" ,fontname="Helvetica"];
  Node52 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ParsedComments" ,fontname="Helvetica"];
  Node52 [label="DenseMap\< const clang\l::Decl *, clang::comments\l::FullComment * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node53 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Listener" ,fontname="Helvetica"];
  Node53 [label="clang::ASTMutationListener",height=0.2,width=0.4,color="black",URL="$classclang_1_1ASTMutationListener.html",tooltip="An abstract interface that should be implemented by listeners that want to be notified when an AST en..."];
  Node54 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< llvm::make_const\l_ptr, ImplClass \>" ,fontname="Helvetica"];
  Node54 [label="clang::EvaluatedExprVisitor\lBase\< Ptr, ImplClass \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1EvaluatedExprVisitorBase.html",tooltip="Given a potentially-evaluated expression, this visitor visits all of its potentially-evaluated subexp..."];
  Node55 -> Node54 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="clang::StmtVisitorBase\l\< Ptr, ImplClass, void \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1StmtVisitorBase.html",tooltip=" "];
  Node4 -> Node55 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" P" ,fontname="Helvetica"];
  Node5 -> Node55 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< Ptr, ImplClass, void \>" ,fontname="Helvetica"];
  Node6 -> Node54 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Context" ,fontname="Helvetica"];
}

digraph "clang::DeducedType"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="clang::DeducedType",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Common base class for placeholders for types that get replaced by placeholder type deduction: C++11 a..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::Type",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type.html",tooltip="The base class of the type hierarchy."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::ExtQualsTypeCommonBase",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtQualsTypeCommonBase.html",tooltip="Base class that is common to both the ExtQuals and Type classes, which allows QualType to access the ..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::AutoType",height=0.2,width=0.4,color="black",URL="$classclang_1_1AutoType.html",tooltip="Represents a C++11 auto or C++14 decltype(auto) type, possibly constrained by a type-constraint."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::DeducedTemplateSpecializationType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedTemplateSpecializationType.html",tooltip="Represents a C++17 deduced template specialization type."];
}

digraph "clang::BackwardDataflowWorklist"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="clang::BackwardDataflowWorklist",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A worklist implementation for backward dataflow analysis."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::DataflowWorklistBase\l\< PostOrderCFGView::BlockOrderCompare, 20 \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1DataflowWorklistBase.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< PostOrderCFGView\l::BlockOrderCompare, 20 \>" ,fontname="Helvetica"];
  Node3 [label="clang::DataflowWorklistBase\l\< Comp, QueueSize \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1DataflowWorklistBase.html",tooltip="A worklist implementation where the enqueued blocks will be dequeued based on the order defined by 'C..."];
}

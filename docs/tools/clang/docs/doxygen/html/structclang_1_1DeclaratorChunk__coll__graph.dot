digraph "clang::DeclaratorChunk"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::DeclaratorChunk",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="One instance of this struct is used for each type in a declarator that is parsed."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Arr" ,fontname="Helvetica"];
  Node2 [label="clang::DeclaratorChunk\l::ArrayTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1ArrayTypeInfo.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumElts" ,fontname="Helvetica"];
  Node3 [label="clang::Expr",height=0.2,width=0.4,color="black",URL="$classclang_1_1Expr.html",tooltip="This represents one expression."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::ValueStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueStmt.html",tooltip="Represents a statement that could possibly have a value and type."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::Stmt",height=0.2,width=0.4,color="red",URL="$classclang_1_1Stmt.html",tooltip="Stmt - This represents one statement."];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThrowExprBits" ,fontname="Helvetica"];
  Node6 [label="clang::Stmt::CXXThrowExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThrowExprBitfields.html",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NullStmtBits" ,fontname="Helvetica"];
  Node7 [label="clang::Stmt::NullStmtBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1NullStmtBitfields.html",tooltip=" "];
  Node8 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCIndirectCopyRestoreExprBits" ,fontname="Helvetica"];
  Node8 [label="clang::Stmt::ObjCIndirect\lCopyRestoreExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1ObjCIndirectCopyRestoreExprBitfields.html",tooltip=" "];
  Node9 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SubstNonTypeTemplateParm\lExprBits" ,fontname="Helvetica"];
  Node9 [label="clang::Stmt::SubstNonType\lTemplateParmExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1SubstNonTypeTemplateParmExprBitfields.html",tooltip=" "];
  Node10 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThisExprBits" ,fontname="Helvetica"];
  Node10 [label="clang::Stmt::CXXThisExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThisExprBitfields.html",tooltip=" "];
  Node11 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXBoolLiteralExprBits" ,fontname="Helvetica"];
  Node11 [label="clang::Stmt::CXXBoolLiteral\lExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXBoolLiteralExprBitfields.html",tooltip=" "];
  Node12 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CastExprBits" ,fontname="Helvetica"];
  Node12 [label="clang::Stmt::CastExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CastExprBitfields.html",tooltip=" "];
  Node69 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeQuals\nisStar\nhasStatic" ,fontname="Helvetica"];
  Node69 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node70 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ref" ,fontname="Helvetica"];
  Node70 [label="clang::DeclaratorChunk\l::ReferenceTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1ReferenceTypeInfo.html",tooltip=" "];
  Node71 -> Node70 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LValueRef\nHasRestrict" ,fontname="Helvetica"];
  Node71 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node72 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EndLoc\nLoc" ,fontname="Helvetica"];
  Node72 [label="clang::SourceLocation",height=0.2,width=0.4,color="black",URL="$classclang_1_1SourceLocation.html",tooltip="Encodes a location in the source."];
  Node73 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PipeInfo" ,fontname="Helvetica"];
  Node73 [label="clang::DeclaratorChunk\l::PipeTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1PipeTypeInfo.html",tooltip=" "];
  Node69 -> Node73 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AccessWrites" ,fontname="Helvetica"];
  Node74 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Cls" ,fontname="Helvetica"];
  Node74 [label="clang::DeclaratorChunk\l::BlockPointerTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1BlockPointerTypeInfo.html",tooltip=" "];
  Node69 -> Node74 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeQuals" ,fontname="Helvetica"];
  Node75 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Mem" ,fontname="Helvetica"];
  Node75 [label="clang::DeclaratorChunk\l::MemberPointerTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1MemberPointerTypeInfo.html",tooltip=" "];
  Node72 -> Node75 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StarLoc" ,fontname="Helvetica"];
  Node76 -> Node75 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ScopeMem" ,fontname="Helvetica"];
  Node76 [label="char",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node69 -> Node75 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeQuals" ,fontname="Helvetica"];
  Node77 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind" ,fontname="Helvetica"];
  Node77 [label="anonymous:Kind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node78 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @213" ,fontname="Helvetica"];
  Node78 [label="anonymous:@213",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node79 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ptr" ,fontname="Helvetica"];
  Node79 [label="clang::DeclaratorChunk\l::PointerTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1PointerTypeInfo.html",tooltip=" "];
  Node72 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VolatileQualLoc\nAtomicQualLoc\nConstQualLoc\nUnalignedQualLoc\nRestrictQualLoc" ,fontname="Helvetica"];
  Node69 -> Node79 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeQuals" ,fontname="Helvetica"];
  Node80 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Fun" ,fontname="Helvetica"];
  Node80 [label="clang::DeclaratorChunk\l::FunctionTypeInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1FunctionTypeInfo.html",tooltip=" "];
  Node81 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MethodQualifiers" ,fontname="Helvetica"];
  Node81 [label="clang::DeclSpec",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclSpec.html",tooltip="Captures information about \"declaration specifiers\"."];
  Node82 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TSCS___thread\nTSCS_unspecified\nTSCS__Thread_local\nTSCS_thread_local" ,fontname="Helvetica"];
  Node82 [label="static const TSCS",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExprRep" ,fontname="Helvetica"];
  Node83 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclRep" ,fontname="Helvetica"];
  Node83 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node84 -> Node83 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextInContextAndBits" ,fontname="Helvetica"];
  Node84 [label="PointerIntPair\< clang\l::Decl *, 3, ModuleOwnership\lKind \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node69 -> Node83 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node85 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeRep" ,fontname="Helvetica"];
  Node85 [label="clang::UnionOpaquePtr\l\< QualType \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1UnionOpaquePtr.html",tooltip=" "];
  Node86 -> Node85 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ptr" ,fontname="Helvetica"];
  Node86 [label="void *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node87 -> Node85 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< QualType \>" ,fontname="Helvetica"];
  Node87 [label="clang::UnionOpaquePtr\< T \>",height=0.2,width=0.4,color="black",URL="$structclang_1_1UnionOpaquePtr.html",tooltip="UnionOpaquePtr - A version of OpaquePtr suitable for membership in a union."];
  Node86 -> Node87 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ptr" ,fontname="Helvetica"];
  Node88 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateIdRep" ,fontname="Helvetica"];
  Node88 [label="clang::TemplateIdAnnotation",height=0.2,width=0.4,color="black",URL="$structclang_1_1TemplateIdAnnotation.html",tooltip="Information about a template-id annotation token."];
  Node89 -> Node88 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="llvm::TrailingObjects\l\< TemplateIdAnnotation,\l ParsedTemplateArgument \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node72 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LAngleLoc\nRAngleLoc\nTemplateNameLoc\nTemplateKWLoc" ,fontname="Helvetica"];
  Node90 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Operator" ,fontname="Helvetica"];
  Node90 [label="OverloadedOperatorKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node71 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ArgsInvalid" ,fontname="Helvetica"];
  Node91 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
  Node91 [label="clang::IdentifierInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1IdentifierInfo.html",tooltip="One of these records is kept for each identifier that is lexed."];
  Node69 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumArgs" ,fontname="Helvetica"];
  Node92 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind" ,fontname="Helvetica"];
  Node92 [label="TemplateNameKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node93 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Template" ,fontname="Helvetica"];
  Node93 [label="clang::OpaquePtr\< Template\lName \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OpaquePtr.html",tooltip=" "];
  Node94 -> Node93 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< TemplateName \>" ,fontname="Helvetica"];
  Node94 [label="clang::OpaquePtr\< PtrTy \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OpaquePtr.html",tooltip="Wrapper for void* pointer."];
  Node95 -> Node88 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TrailingObjects" ,fontname="Helvetica"];
  Node95 [label="friend",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node96 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TST_struct\nTST_ibm128\nTST_BFloat16\nTST_decimal64\nTST_float128\nTST_float16\nTST_enum\nTST_auto_type\nTST_decltype\nTST_fract\n..." ,fontname="Helvetica"];
  Node96 [label="static const TST",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node72 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExceptionSpecLocEnd\nEllipsisLoc\nExceptionSpecLocBeg\nLParenLoc\nRParenLoc\nMutableLoc\nTrailingReturnTypeLoc\nRefQualifierLoc" ,fontname="Helvetica"];
  Node97 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Params" ,fontname="Helvetica"];
  Node97 [label="clang::DeclaratorChunk\l::ParamInfo",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1ParamInfo.html",tooltip="ParamInfo - An array of paraminfo objects is allocated whenever a function declarator is parsed."];
  Node72 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IdentLoc" ,fontname="Helvetica"];
  Node98 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultArgTokens" ,fontname="Helvetica"];
  Node98 [label="unique_ptr\< llvm::SmallVector \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node91 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ident" ,fontname="Helvetica"];
  Node83 -> Node97 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Param" ,fontname="Helvetica"];
  Node99 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @215" ,fontname="Helvetica"];
  Node99 [label="anonymous:@215",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node100 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclsInPrototype" ,fontname="Helvetica"];
  Node100 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node83 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NoexceptExpr" ,fontname="Helvetica"];
  Node85 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TrailingReturnType" ,fontname="Helvetica"];
  Node101 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExceptionSpecTokens" ,fontname="Helvetica"];
  Node101 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node102 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Exceptions" ,fontname="Helvetica"];
  Node102 [label="clang::DeclaratorChunk\l::TypeAndRange",height=0.2,width=0.4,color="black",URL="$structclang_1_1DeclaratorChunk_1_1TypeAndRange.html",tooltip=" "];
  Node103 -> Node102 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Range" ,fontname="Helvetica"];
  Node103 [label="clang::SourceRange",height=0.2,width=0.4,color="black",URL="$classclang_1_1SourceRange.html",tooltip="A trivial tuple used to represent a source range."];
  Node104 -> Node102 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ty" ,fontname="Helvetica"];
  Node104 [label="clang::OpaquePtr\< QualType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1OpaquePtr.html",tooltip=" "];
  Node94 -> Node104 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< QualType \>" ,fontname="Helvetica"];
  Node105 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" QualAttrFactory" ,fontname="Helvetica"];
  Node105 [label="clang::AttributeFactory",height=0.2,width=0.4,color="black",URL="$classclang_1_1AttributeFactory.html",tooltip="A factory, from which one makes pools, from which one creates individual attributes which are dealloc..."];
  Node69 -> Node80 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" hasPrototype\nRefQualifierIsLValueRef\nisAmbiguous\nisVariadic\nNumParams\nHasTrailingReturnType\nDeleteParams\nExceptionSpecType\nNumExceptionsOrDecls" ,fontname="Helvetica"];
  Node106 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AttrList" ,fontname="Helvetica"];
  Node106 [label="clang::ParsedAttributesView",height=0.2,width=0.4,color="black",URL="$classclang_1_1ParsedAttributesView.html",tooltip=" "];
  Node103 -> Node106 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Range" ,fontname="Helvetica"];
}

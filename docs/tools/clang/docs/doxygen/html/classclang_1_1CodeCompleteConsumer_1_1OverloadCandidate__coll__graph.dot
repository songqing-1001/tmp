digraph "clang::CodeCompleteConsumer::OverloadCandidate"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::CodeCompleteConsumer\l::OverloadCandidate",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FunctionTemplate" ,fontname="Helvetica"];
  Node2 [label="clang::FunctionTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionTemplateDecl.html",tooltip="Declaration of a template function."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::RedeclarableTemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RedeclarableTemplateDecl.html",tooltip="Declaration of a redeclarable template."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::TemplateDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateDecl.html",tooltip="The base class of all kinds of template declarations (e.g., class, function, etc.)."];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::NamedDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplatedDecl" ,fontname="Helvetica"];
  Node9 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateParams" ,fontname="Helvetica"];
  Node9 [label="clang::TemplateParameterList",height=0.2,width=0.4,color="red",URL="$classclang_1_1TemplateParameterList.html",tooltip="Stores a list of template parameters for a TemplateDecl and its derived classes."];
  Node12 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="clang::Redeclarable\l\< RedeclarableTemplateDecl \>",height=0.2,width=0.4,color="red",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node3 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node16 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Common" ,fontname="Helvetica"];
  Node16 [label="clang::RedeclarableTemplate\lDecl::CommonBase",height=0.2,width=0.4,color="red",URL="$structclang_1_1RedeclarableTemplateDecl_1_1CommonBase.html",tooltip=" "];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AggregateType" ,fontname="Helvetica"];
  Node30 [label="clang::RecordDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1RecordDecl.html",tooltip="Represents a struct/union/class."];
  Node31 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="clang::TagDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TagDecl.html",tooltip="Represents the declaration of a struct/union/class/enum."];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="clang::TypeDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeDecl.html",tooltip="Represents a declaration of a type."];
  Node5 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="clang::DeclContext",height=0.2,width=0.4,color="red",URL="$classclang_1_1DeclContext.html",tooltip="DeclContext - This is used only as base class of specific decl types that can act as declaration cont..."];
  Node34 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TagDeclBits" ,fontname="Helvetica"];
  Node34 [label="clang::DeclContext\l::TagDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by TagDecl."];
  Node35 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EnumDeclBits" ,fontname="Helvetica"];
  Node35 [label="clang::DeclContext\l::EnumDeclBitfields",height=0.2,width=0.4,color="grey75",tooltip="Stores the bits used by EnumDecl."];
  Node36 -> Node33 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @42" ,fontname="Helvetica"];
  Node36 [label="anonymous:@42",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node46 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="clang::Redeclarable\l\< TagDecl \>",height=0.2,width=0.4,color="red",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node31 -> Node46 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node47 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ProtoTypeLoc" ,fontname="Helvetica"];
  Node47 [label="clang::FunctionProtoTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionProtoTypeLoc.html",tooltip=" "];
  Node48 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="clang::InheritingConcrete\lTypeLoc\< FunctionTypeLoc,\l FunctionProtoTypeLoc, FunctionProto\lType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node49 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="clang::FunctionTypeLoc",height=0.2,width=0.4,color="red",URL="$classclang_1_1FunctionTypeLoc.html",tooltip="Wrapper for source info for functions."];
  Node56 -> Node48 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< FunctionTypeLoc,\l FunctionProtoTypeLoc,\l FunctionProtoType \>" ,fontname="Helvetica"];
  Node56 [label="clang::InheritingConcrete\lTypeLoc\< Base, Derived,\l TypeClass \>",height=0.2,width=0.4,color="red",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip="A metaprogramming class designed for concrete subtypes of abstract types where all subtypes share equ..."];
  Node57 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Type" ,fontname="Helvetica"];
  Node57 [label="clang::FunctionType",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionType.html",tooltip="FunctionType - C99 6.7.5.3 - Function Declarators."];
  Node58 -> Node57 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="clang::Type",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type.html",tooltip="The base class of the type hierarchy."];
  Node59 -> Node58 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="clang::ExtQualsTypeCommonBase",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtQualsTypeCommonBase.html",tooltip="Base class that is common to both the ExtQuals and Type classes, which allows QualType to access the ..."];
  Node60 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SubstTemplateTypeParmTypeBits" ,fontname="Helvetica"];
  Node60 [label="clang::Type::SubstTemplate\lTypeParmTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1SubstTemplateTypeParmTypeBitfields.html",tooltip=" "];
  Node61 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCObjectTypeBits" ,fontname="Helvetica"];
  Node61 [label="clang::Type::ObjCObjectType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1ObjCObjectTypeBitfields.html",tooltip=" "];
  Node62 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FunctionTypeBits" ,fontname="Helvetica"];
  Node62 [label="clang::Type::FunctionType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1FunctionTypeBitfields.html",tooltip="FunctionTypeBitfields store various bits belonging to FunctionProtoType."];
  Node63 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UsingBits" ,fontname="Helvetica"];
  Node63 [label="clang::Type::UsingBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1UsingBitfields.html",tooltip=" "];
  Node64 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" VectorTypeBits" ,fontname="Helvetica"];
  Node64 [label="clang::Type::VectorTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1VectorTypeBitfields.html",tooltip=" "];
  Node65 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeWithKeywordBits" ,fontname="Helvetica"];
  Node65 [label="clang::Type::TypeWithKeyword\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1TypeWithKeywordBitfields.html",tooltip=" "];
  Node66 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypedefBits" ,fontname="Helvetica"];
  Node66 [label="clang::Type::TypedefBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1TypedefBitfields.html",tooltip=" "];
  Node67 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DependentTemplateSpecialization\lTypeBits" ,fontname="Helvetica"];
  Node67 [label="clang::Type::DependentTemplate\lSpecializationTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1DependentTemplateSpecializationTypeBitfields.html",tooltip=" "];
  Node68 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ReferenceTypeBits" ,fontname="Helvetica"];
  Node68 [label="clang::Type::ReferenceType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1ReferenceTypeBitfields.html",tooltip=" "];
  Node69 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeOfBits" ,fontname="Helvetica"];
  Node69 [label="clang::Type::TypeOfBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1TypeOfBitfields.html",tooltip=" "];
  Node70 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PackExpansionTypeBits" ,fontname="Helvetica"];
  Node70 [label="clang::Type::PackExpansion\lTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1PackExpansionTypeBitfields.html",tooltip=" "];
  Node71 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ElaboratedTypeBits" ,fontname="Helvetica"];
  Node71 [label="clang::Type::ElaboratedType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1ElaboratedTypeBitfields.html",tooltip=" "];
  Node72 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AutoTypeBits" ,fontname="Helvetica"];
  Node72 [label="clang::Type::AutoTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1AutoTypeBitfields.html",tooltip=" "];
  Node73 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SubstTemplateTypeParmPack\lTypeBits" ,fontname="Helvetica"];
  Node73 [label="clang::Type::SubstTemplate\lTypeParmPackTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1SubstTemplateTypeParmPackTypeBitfields.html",tooltip=" "];
  Node74 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AttributedTypeBits" ,fontname="Helvetica"];
  Node74 [label="clang::Type::AttributedType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1AttributedTypeBitfields.html",tooltip=" "];
  Node75 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @117" ,fontname="Helvetica"];
  Node75 [label="anonymous:@117",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node76 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeBits" ,fontname="Helvetica"];
  Node76 [label="clang::Type::TypeBitfields",height=0.2,width=0.4,color="grey75",tooltip="Bitfields required by the Type class."];
  Node77 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ConstantArrayTypeBits" ,fontname="Helvetica"];
  Node77 [label="clang::Type::ConstantArray\lTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1ConstantArrayTypeBitfields.html",tooltip=" "];
  Node78 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ArrayTypeBits" ,fontname="Helvetica"];
  Node78 [label="clang::Type::ArrayTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1ArrayTypeBitfields.html",tooltip=" "];
  Node79 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateSpecializationTypeBits" ,fontname="Helvetica"];
  Node79 [label="clang::Type::TemplateSpecialization\lTypeBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1TemplateSpecializationTypeBitfields.html",tooltip=" "];
  Node80 -> Node58 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BuiltinTypeBits" ,fontname="Helvetica"];
  Node80 [label="clang::Type::BuiltinType\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type_1_1BuiltinTypeBitfields.html",tooltip=" "];
  Node81 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Function" ,fontname="Helvetica"];
  Node81 [label="clang::FunctionDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1FunctionDecl.html",tooltip="Represents a function declaration or definition."];
  Node82 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="clang::DeclaratorDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeclaratorDecl.html",tooltip="Represents a ValueDecl that came out of a declarator."];
  Node21 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="clang::ValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node5 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="clang::Redeclarable\l\< FunctionDecl \>",height=0.2,width=0.4,color="red",URL="$classclang_1_1Redeclarable.html",tooltip=" "];
  Node81 -> Node83 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" First" ,fontname="Helvetica"];
  Node84 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DefaultedInfo" ,fontname="Helvetica"];
  Node84 [label="clang::FunctionDecl\l::DefaultedFunctionInfo",height=0.2,width=0.4,color="red",URL="$classclang_1_1FunctionDecl_1_1DefaultedFunctionInfo.html",tooltip="Stashed information about a defaulted function definition whose body has not yet been lazily generate..."];
  Node86 -> Node81 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Body" ,fontname="Helvetica"];
  Node86 [label="clang::LazyOffsetPtr\l\< Stmt, uint64_t, &External\lASTSource::GetExternalDeclStmt \>",height=0.2,width=0.4,color="red",URL="$structclang_1_1LazyOffsetPtr.html",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Template" ,fontname="Helvetica"];
}

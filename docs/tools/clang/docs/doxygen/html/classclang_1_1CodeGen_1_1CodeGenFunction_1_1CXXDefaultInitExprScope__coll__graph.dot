digraph "clang::CodeGen::CodeGenFunction::CXXDefaultInitExprScope"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::CodeGen::CodeGenFunction\l::CXXDefaultInitExprScope",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="The scope of a CXXDefaultInitExpr."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OldCXXThisAlignment" ,fontname="Helvetica"];
  Node2 [label="clang::CharUnits",height=0.2,width=0.4,color="black",URL="$classclang_1_1CharUnits.html",tooltip="CharUnits - This is an opaque type for sizes expressed in character units."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SourceLocScope" ,fontname="Helvetica"];
  Node3 [label="clang::CurrentSourceLocExpr\lScope::SourceLocExprScopeGuard",height=0.2,width=0.4,color="black",URL="$classclang_1_1CurrentSourceLocExprScope_1_1SourceLocExprScopeGuard.html",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OldCXXThisValue" ,fontname="Helvetica"];
  Node4 [label="Value *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CGF" ,fontname="Helvetica"];
  Node5 [label="clang::CodeGen::CodeGenFunction",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1CodeGenFunction.html",tooltip="CodeGenFunction - This class organizes the per-function state that is used while generating LLVM code..."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::CodeGen::CodeGenType\lCache",height=0.2,width=0.4,color="red",URL="$structclang_1_1CodeGen_1_1CodeGenTypeCache.html",tooltip="This structure provides a set of types that are commonly used during IR emission."];
  Node7 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @310" ,fontname="Helvetica"];
  Node7 [label="anonymous:@310",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SizeTy\nInt16Ty\nPtrDiffTy\nCharTy\nIntPtrTy\nIntTy\nInt64Ty\nInt8Ty\nInt32Ty" ,fontname="Helvetica"];
  Node8 [label="IntegerType *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @300" ,fontname="Helvetica"];
  Node9 [label="anonymous:@300",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node6 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SizeAlignInBytes\nSizeSizeInBytes\nPointerWidthInBits\nIntAlignInBytes\nPointerAlignInBytes\nPointerSizeInBytes\nIntSizeInBytes" ,fontname="Helvetica"];
  Node18 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node21 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurSourceLocExprScope" ,fontname="Helvetica"];
  Node21 [label="clang::CurrentSourceLocExpr\lScope",height=0.2,width=0.4,color="black",URL="$classclang_1_1CurrentSourceLocExprScope.html",tooltip="Represents the current source location and context used to determine the value of the source location..."];
  Node22 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EHStack" ,fontname="Helvetica"];
  Node22 [label="clang::CodeGen::EHScopeStack",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1EHScopeStack.html",tooltip="A stack of scopes which respond to exceptions, including cleanups and catch blocks."];
  Node23 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Bypasses" ,fontname="Helvetica"];
  Node23 [label="clang::CodeGen::VarBypass\lDetector",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1VarBypassDetector.html",tooltip="The class detects jumps which bypass local variables declaration: goto L; int a; L:"];
  Node24 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ReturnValue\nNormalCleanupDest\nReturnValuePointer" ,fontname="Helvetica"];
  Node24 [label="clang::CodeGen::Address",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1Address.html",tooltip="An aligned address."];
  Node25 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentCleanupScopeDepth\nPrologueCleanupDepth" ,fontname="Helvetica"];
  Node25 [label="clang::CodeGen::EHScopeStack\l::stable_iterator",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1EHScopeStack_1_1stable__iterator.html",tooltip="A saved depth on the scope stack."];
  Node26 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurCoro" ,fontname="Helvetica"];
  Node26 [label="clang::CodeGen::CodeGenFunction\l::CGCoroInfo",height=0.2,width=0.4,color="red",URL="$structclang_1_1CodeGen_1_1CodeGenFunction_1_1CGCoroInfo.html",tooltip=" "];
  Node28 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurFPFeatures" ,fontname="Helvetica"];
  Node28 [label="clang::FPOptions",height=0.2,width=0.4,color="red",URL="$classclang_1_1FPOptions.html",tooltip=" "];
  Node18 -> Node28 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" StorageBitSize" ,fontname="Helvetica"];
  Node30 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurrentFuncletPad" ,fontname="Helvetica"];
  Node30 [label="Instruction *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node31 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlockInfo" ,fontname="Helvetica"];
  Node31 [label="clang::CodeGen::CGBlockInfo",height=0.2,width=0.4,color="red",URL="$classclang_1_1CodeGen_1_1CGBlockInfo.html",tooltip="CGBlockInfo - Information to generate a block literal."];
  Node2 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BlockHeaderForcedGapOffset\nCXXThisOffset\nBlockAlign\nBlockHeaderForcedGapSize\nBlockSize" ,fontname="Helvetica"];
  Node24 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LocalAddress" ,fontname="Helvetica"];
  Node31 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextBlockInfo" ,fontname="Helvetica"];
  Node119 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasCapturedVariableLayout\nUsesStret\nCanBeGlobal\nNoEscape\nCapturesNonExternal\lType\nHasCXXObject\nNeedsCopyDispose" ,fontname="Helvetica"];
  Node119 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node31 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThisIndex" ,fontname="Helvetica"];
  Node121 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FnArgs" ,fontname="Helvetica"];
  Node121 [label="llvm::SmallVector\<\l const clang::ParmVarDecl\l *, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node122 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" EHSelectorSlot" ,fontname="Helvetica"];
  Node122 [label="AllocaInst *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node123 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LifetimeExtendedCleanupStack" ,fontname="Helvetica"];
  Node123 [label="llvm::SmallVector\<\l char, 256 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node124 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AllocaInsertPt" ,fontname="Helvetica"];
  Node124 [label="AssertingVH\< llvm::\lInstruction \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node125 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurSEHParent\nCurGD" ,fontname="Helvetica"];
  Node125 [label="clang::GlobalDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1GlobalDecl.html",tooltip="GlobalDecl - represents a global declaration."];
  Node126 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LambdaCaptureFields" ,fontname="Helvetica"];
  Node126 [label="DenseMap\< const clang\l::ValueDecl *, clang\l::FieldDecl * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SEHInfo\nBlockPointer\nExceptionSlot" ,fontname="Helvetica"];
  Node127 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurFn" ,fontname="Helvetica"];
  Node127 [label="Function *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node128 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Builder" ,fontname="Helvetica"];
  Node128 [label="clang::CodeGen::CGBuilderTy",height=0.2,width=0.4,color="red",URL="$classclang_1_1CodeGen_1_1CGBuilderTy.html",tooltip=" "];
  Node130 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CGM" ,fontname="Helvetica"];
  Node130 [label="clang::CodeGen::CodeGenModule",height=0.2,width=0.4,color="red",URL="$classclang_1_1CodeGen_1_1CodeGenModule.html",tooltip="This class organizes the cross-function state that is used while generating LLVM code."];
  Node6 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 -> Node130 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" GlobalUniqueCount" ,fontname="Helvetica"];
  Node133 [label="int",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node134 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" FnRetTy" ,fontname="Helvetica"];
  Node134 [label="clang::QualType",height=0.2,width=0.4,color="black",URL="$classclang_1_1QualType.html",tooltip="A (possibly-)qualified type."];
  Node135 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Target" ,fontname="Helvetica"];
  Node135 [label="clang::TargetInfo",height=0.2,width=0.4,color="red",URL="$classclang_1_1TargetInfo.html",tooltip="Exposes information about the current target."];
  Node119 -> Node135 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" HasIbm128\nBigEndian\nNoAsmVariants\nHasBFloat16\nHasFloat16\nTLSSupported\nHasLongDouble\nHalfArgsAndReturns\nHasLegalHalfType\nVLASupported\n..." ,fontname="Helvetica"];
  Node18 -> Node135 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ARMCDECoprocMask\nComplexLongDoubleUsesFP2\lRet\nIsRenderScriptTarget\nMaxAtomicPromoteWidth\nMaxAtomicInlineWidth\nAllowAMDGPUUnsafeFPAtomics\nRealTypeUsesObjCFPRetMask\nHasAArch64SVETypes\nHasAlignMac68kSupport\nSSERegParmMax\n..." ,fontname="Helvetica"];
  Node148 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" destroyARCWeak\ndestroyCXXObject\nemitARCIntrinsicUse\ndestroyARCStrongPrecise\ndestroyNonTrivialCStruct\ndestroyARCStrongImprecise" ,fontname="Helvetica"];
  Node148 [label="static Destroyer",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node149 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TaskGenTy" ,fontname="Helvetica"];
  Node149 [label="function_ref\< void\l(clang::CodeGen::CodeGenFunction\l &, llvm::Function *, const\l clang::CodeGen::OMPTaskDataTy &)\>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node133 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExpectedOMPLoopDepth" ,fontname="Helvetica"];
  Node150 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LoopStack" ,fontname="Helvetica"];
  Node150 [label="clang::CodeGen::LoopInfo\lStack",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1LoopInfoStack.html",tooltip="A stack of loop information corresponding to loop nesting levels."];
  Node151 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPParentLoopDirectiveForScan" ,fontname="Helvetica"];
  Node151 [label="clang::OMPExecutableDirective",height=0.2,width=0.4,color="red",URL="$classclang_1_1OMPExecutableDirective.html",tooltip="This is a basic class for representing single OpenMP executable directive."];
  Node119 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPFirstScanLoop\nSawAsmBlock\nAutoreleaseResult\nInNoMergeAttributedStmt\nInAlwaysInlineAttributedStmt\nIsOutlinedSEHHelper\nInNoInlineAttributedStmt\nIsInPreservedAIRegion\nCurFuncIsThunk\nIsSanitizerScope\n..." ,fontname="Helvetica"];
  Node154 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SanOpts" ,fontname="Helvetica"];
  Node154 [label="clang::SanitizerSet",height=0.2,width=0.4,color="red",URL="$structclang_1_1SanitizerSet.html",tooltip=" "];
  Node156 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPLoopNestStack" ,fontname="Helvetica"];
  Node156 [label="llvm::SmallVector\<\l llvm::CanonicalLoopInfo\l *, 4 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node157 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCEHValueStack" ,fontname="Helvetica"];
  Node157 [label="llvm::SmallVector\<\l llvm::Value *, 8 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node158 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SEHCodeSlotStack" ,fontname="Helvetica"];
  Node158 [label="llvm::SmallVector\<\l clang::CodeGen::Address, 1 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node159 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SEHTryEpilogueStack" ,fontname="Helvetica"];
  Node159 [label="llvm::SmallVector\<\l const clang::CodeGen\l::CodeGenFunction::JumpDest\l *, 2 \>",height=0.2,width=0.4,color="red",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node37 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" RetExpr" ,fontname="Helvetica"];
  Node37 [label="clang::Expr",height=0.2,width=0.4,color="red",URL="$classclang_1_1Expr.html",tooltip="This represents one expression."];
  Node160 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ReturnBlock" ,fontname="Helvetica"];
  Node160 [label="clang::CodeGen::CodeGenFunction\l::JumpDest",height=0.2,width=0.4,color="black",URL="$structclang_1_1CodeGen_1_1CodeGenFunction_1_1JumpDest.html",tooltip="A jump destination is an abstract label, branching to which may require a jump out through normal cle..."];
  Node161 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NRVOFlags" ,fontname="Helvetica"];
  Node161 [label="DenseMap\< const clang\l::VarDecl *, llvm::Value * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node162 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OMPAfterScanBlock\nOMPBeforeScanBlock\nEHResumeBlock\nOMPScanDispatch\nOMPScanExitBlock" ,fontname="Helvetica"];
  Node162 [label="BasicBlock *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextCleanupDestIndex" ,fontname="Helvetica"];
  Node163 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" LambdaThisCaptureField" ,fontname="Helvetica"];
  Node163 [label="clang::FieldDecl",height=0.2,width=0.4,color="red",URL="$classclang_1_1FieldDecl.html",tooltip="Represents a member of a struct/union/class."];
  Node169 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CapturedStmtInfo" ,fontname="Helvetica"];
  Node169 [label="clang::CodeGen::CodeGenFunction\l::CGCapturedStmtInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1CodeGen_1_1CodeGenFunction_1_1CGCapturedStmtInfo.html",tooltip="API for captured statement code generation."];
  Node104 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurFuncDecl\nCurCodeDecl" ,fontname="Helvetica"];
  Node104 [label="clang::Decl",height=0.2,width=0.4,color="red",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node18 -> Node104 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node5 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ParentCGF" ,fontname="Helvetica"];
  Node170 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" MustTailCall" ,fontname="Helvetica"];
  Node170 [label="clang::CallExpr",height=0.2,width=0.4,color="red",URL="$classclang_1_1CallExpr.html",tooltip="CallExpr - Represents a function call (C99 6.5.2.2, C++ [expr.call])."];
  Node37 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CurFnInfo" ,fontname="Helvetica"];
  Node172 [label="clang::CodeGen::CGFunctionInfo",height=0.2,width=0.4,color="red",URL="$classclang_1_1CodeGen_1_1CGFunctionInfo.html",tooltip="CGFunctionInfo - Class to encapsulate the information about a function definition."];
}

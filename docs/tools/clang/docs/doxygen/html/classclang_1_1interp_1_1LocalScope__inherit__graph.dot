digraph "clang::interp::LocalScope&lt; Emitter &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::interp::LocalScope\l\< Emitter \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Scope for local variables."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::interp::BlockScope\l\< Emitter \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1interp_1_1BlockScope.html",tooltip="Scope for storage declared in a compound statement."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::interp::DeclScope\l\< Emitter \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1interp_1_1DeclScope.html",tooltip="Scope used to handle temporaries in toplevel variable declarations."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::interp::ExprScope\l\< Emitter \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1interp_1_1ExprScope.html",tooltip="Expression scope which tracks potentially lifetime extended temporaries which are hoisted to the pare..."];
}

digraph "clang::LValueReferenceTypeLoc"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::LValueReferenceTypeLoc",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::InheritingConcrete\lTypeLoc\< ReferenceTypeLoc,\l LValueReferenceTypeLoc,\l LValueReferenceType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::ReferenceTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1ReferenceTypeLoc.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::PointerLikeTypeLoc\l\< ReferenceTypeLoc, ReferenceType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1PointerLikeTypeLoc.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::ConcreteTypeLoc\l\< UnqualTypeLoc, ReferenceType\lLoc, ReferenceType, PointerLikeLocInfo \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip=" "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::UnqualTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnqualTypeLoc.html",tooltip="Wrapper of type source information for a type with no direct qualifiers."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="clang::TypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeLoc.html",tooltip="Base wrapper for a particular \"section\" of type source info."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Ty" ,fontname="Helvetica"];
  Node8 [label="const void *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node9 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Data" ,fontname="Helvetica"];
  Node9 [label="void *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node5 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< UnqualTypeLoc, Reference\lTypeLoc, ReferenceType,\l PointerLikeLocInfo \>" ,fontname="Helvetica"];
  Node10 [label="clang::ConcreteTypeLoc\l\< Base, Derived, TypeClass,\l LocalData \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip="A metaprogramming base class for TypeLoc classes which correspond to a particular Type subclass."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Base",height=0.2,width=0.4,color="black",URL="$classBase.html",tooltip=" "];
  Node12 -> Node4 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ReferenceTypeLoc,\l ReferenceType \>" ,fontname="Helvetica"];
  Node12 [label="clang::PointerLikeTypeLoc\l\< Derived, TypeClass, LocalData \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1PointerLikeTypeLoc.html",tooltip="A base class for."];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="clang::ConcreteTypeLoc\l\< UnqualTypeLoc, Derived,\l TypeClass, PointerLikeLocInfo \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip=" "];
  Node6 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node13 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< UnqualTypeLoc, Derived,\l TypeClass, PointerLikeLocInfo \>" ,fontname="Helvetica"];
  Node14 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ReferenceTypeLoc,\l LValueReferenceTypeLoc,\l LValueReferenceType \>" ,fontname="Helvetica"];
  Node14 [label="clang::InheritingConcrete\lTypeLoc\< Base, Derived,\l TypeClass \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip="A metaprogramming class designed for concrete subtypes of abstract types where all subtypes share equ..."];
  Node11 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}

digraph "clang::threadSafety::til::SExpr"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::threadSafety\l::til::SExpr",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base class for AST nodes in the typed intermediate language."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::threadSafety\l::til::Alloc",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Alloc.html",tooltip="Allocate memory for a new value on the heap or stack."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::threadSafety\l::til::Apply",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Apply.html",tooltip="Apply an argument to a function."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::threadSafety\l::til::ArrayAdd",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1ArrayAdd.html",tooltip="Pointer arithmetic, restricted to arrays only."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::threadSafety\l::til::ArrayIndex",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1ArrayIndex.html",tooltip="If p is a reference to an array, then p[i] is a reference to the i'th element of the array."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::threadSafety\l::til::BasicBlock",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1BasicBlock.html",tooltip="A basic block is part of an SCFG."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="clang::threadSafety\l::til::BinaryOp",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1BinaryOp.html",tooltip="Simple arithmetic binary operations, e.g."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="clang::threadSafety\l::til::Call",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Call.html",tooltip="Call a function (after all arguments have been applied)."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="clang::threadSafety\l::til::Cast",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Cast.html",tooltip="Cast expressions."];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="clang::threadSafety\l::til::Code",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Code.html",tooltip="A block of code – e.g. the body of a function."];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="clang::threadSafety\l::til::Field",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Field.html",tooltip="A typed, writable location in memory."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="clang::threadSafety\l::til::Function",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Function.html",tooltip="A function – a.k.a."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="clang::threadSafety\l::til::Future",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Future.html",tooltip="Placeholder for an expression that has not yet been created."];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="clang::threadSafety\l::til::Identifier",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Identifier.html",tooltip="An identifier, e.g."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="clang::threadSafety\l::til::IfThenElse",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1IfThenElse.html",tooltip="An if-then-else expression."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="clang::threadSafety\l::til::Let",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Let.html",tooltip="A let-expression, e.g."];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="clang::threadSafety\l::til::Literal",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Literal.html",tooltip=" "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="clang::threadSafety\l::til::LiteralPtr",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1LiteralPtr.html",tooltip="A Literal pointer to an object allocated in memory."];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="clang::threadSafety\l::til::Load",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Load.html",tooltip="Load a value from memory."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="clang::threadSafety\l::til::Phi",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Phi.html",tooltip="Phi Node, for code in SSA form."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="clang::threadSafety\l::til::Project",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Project.html",tooltip="Project a named slot from a C++ struct or class."];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="clang::threadSafety\l::til::SApply",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1SApply.html",tooltip="Apply a self-argument to a self-applicable function."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="clang::threadSafety\l::til::SCFG",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1SCFG.html",tooltip="An SCFG is a control-flow graph."];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="clang::threadSafety\l::til::SFunction",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1SFunction.html",tooltip="A self-applicable function."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="clang::threadSafety\l::til::Store",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Store.html",tooltip="Store a value to memory."];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="clang::threadSafety\l::til::Terminator",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Terminator.html",tooltip="Base class for basic block terminators: Branch, Goto, and Return."];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="clang::threadSafety\l::til::Branch",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Branch.html",tooltip="A conditional branch to two other blocks."];
  Node26 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="clang::threadSafety\l::til::Goto",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Goto.html",tooltip="Jump to another basic block."];
  Node26 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="clang::threadSafety\l::til::Return",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Return.html",tooltip="Return from the enclosing function, passing the return value to the caller."];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="clang::threadSafety\l::til::UnaryOp",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1UnaryOp.html",tooltip="Simple arithmetic unary operations, e.g."];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="clang::threadSafety\l::til::Undefined",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Undefined.html",tooltip="Placeholder for expressions that cannot be represented in the TIL."];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="clang::threadSafety\l::til::Variable",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Variable.html",tooltip="A named variable, e.g."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="clang::threadSafety\l::til::Wildcard",height=0.2,width=0.4,color="black",URL="$classclang_1_1threadSafety_1_1til_1_1Wildcard.html",tooltip="Placeholder for a wildcard that matches any other expression."];
}

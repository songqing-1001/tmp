digraph "clang::TypeSpecTypeLoc"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::TypeSpecTypeLoc",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A reasonable base class for TypeLocs that correspond to types that are written as a type-specifier."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::ConcreteTypeLoc\l\< UnqualTypeLoc, TypeSpecType\lLoc, Type, TypeSpecLocInfo \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::UnqualTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnqualTypeLoc.html",tooltip="Wrapper of type source information for a type with no direct qualifiers."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::TypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypeLoc.html",tooltip="Base wrapper for a particular \"section\" of type source info."];
  Node5 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< UnqualTypeLoc, TypeSpec\lTypeLoc, Type, TypeSpecLocInfo \>" ,fontname="Helvetica"];
  Node5 [label="clang::ConcreteTypeLoc\l\< Base, Derived, TypeClass,\l LocalData \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip="A metaprogramming base class for TypeLoc classes which correspond to a particular Type subclass."];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="Base",height=0.2,width=0.4,color="black",URL="$classBase.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l BitIntTypeLoc, BitIntType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="clang::BitIntTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1BitIntTypeLoc.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l ComplexTypeLoc, ComplexType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="clang::ComplexTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1ComplexTypeLoc.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l DeducedTypeLoc, DeducedType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="clang::DeducedTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedTypeLoc.html",tooltip=" "];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="clang::ConcreteTypeLoc\l\< DeducedTypeLoc, AutoTypeLoc,\l AutoType, AutoTypeLocInfo \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConcreteTypeLoc.html",tooltip=" "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="clang::AutoTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1AutoTypeLoc.html",tooltip=" "];
  Node12 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="clang::InheritingConcrete\lTypeLoc\< DeducedTypeLoc,\l DeducedTemplateSpecializationType\lLoc, DeducedTemplateSpecializationType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="clang::DeducedTemplateSpecialization\lTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedTemplateSpecializationTypeLoc.html",tooltip=" "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l DependentBitIntTypeLoc,\l DependentBitIntType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node17 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="clang::DependentBitIntTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentBitIntTypeLoc.html",tooltip=" "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l InjectedClassNameTypeLoc,\l InjectedClassNameType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="clang::InjectedClassName\lTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1InjectedClassNameTypeLoc.html",tooltip="Wrapper for source info for injected class names of class templates."];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l SubstTemplateTypeParmPackTypeLoc,\l SubstTemplateTypeParmPackType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node21 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="clang::SubstTemplateType\lParmPackTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTypeParmPackTypeLoc.html",tooltip="Wrapper for substituted template type parameters."];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l SubstTemplateTypeParmTypeLoc,\l SubstTemplateTypeParmType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="clang::SubstTemplateType\lParmTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1SubstTemplateTypeParmTypeLoc.html",tooltip="Wrapper for substituted template type parameters."];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l TagTypeLoc, TagType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node25 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="clang::TagTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1TagTypeLoc.html",tooltip="Wrapper for source info for tag types."];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="clang::InheritingConcrete\lTypeLoc\< TagTypeLoc, EnumTypeLoc,\l EnumType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node27 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="clang::EnumTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1EnumTypeLoc.html",tooltip="Wrapper for source info for enum types."];
  Node26 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="clang::InheritingConcrete\lTypeLoc\< TagTypeLoc, RecordType\lLoc, RecordType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node29 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="clang::RecordTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1RecordTypeLoc.html",tooltip="Wrapper for source info for record types."];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l TemplateTypeParmTypeLoc,\l TemplateTypeParmType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="clang::TemplateTypeParmTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateTypeParmTypeLoc.html",tooltip="Wrapper for template type parameters."];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l TypedefTypeLoc, TypedefType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node33 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="clang::TypedefTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1TypedefTypeLoc.html",tooltip="Wrapper for source info for typedefs."];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l UnresolvedUsingTypeLoc,\l UnresolvedUsingType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node35 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="clang::UnresolvedUsingTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1UnresolvedUsingTypeLoc.html",tooltip="Wrapper for source info for unresolved typename using decls."];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="clang::InheritingConcrete\lTypeLoc\< TypeSpecTypeLoc,\l UsingTypeLoc, UsingType \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1InheritingConcreteTypeLoc.html",tooltip=" "];
  Node37 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="clang::UsingTypeLoc",height=0.2,width=0.4,color="black",URL="$classclang_1_1UsingTypeLoc.html",tooltip="Wrapper for source info for types used via transparent aliases."];
}

digraph "clang::ento::check::PreStmt&lt; STMT &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::ento::check\l::PreStmt\< STMT \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< ReturnStmt \>" ,fontname="Helvetica"];
  Node2 [label="clang::ento::check\l::PreStmt\< ReturnStmt \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1check_1_1PreStmt.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::ento::Checker\l\< check::PreStmt\< ReturnStmt\l \>, check::PostStmt\< DeclStmt\l \>, check::PreObjCMessage, check\l::PostObjCMessage, check::ObjCMessageNil,\l check::PreCall, check::PostCall, check\l::BranchCondition, check::NewAllocator,\l check::Location, check::Bind, check::DeadSymbols,\l check::BeginFunction, check::EndFunction, check\l::EndAnalysis, check::EndOfTranslationUnit, eval\l::Call, eval::Assume, check::LiveSymbols, check::\lRegionChanges, check::PointerEscape, check::ConstPointerEscape,\l check::Event\< ImplicitNullDerefEvent \>, check::ASTDecl\< FunctionDecl \> \>",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1Checker.html",tooltip=" "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::ento::CheckerDocumentation",height=0.2,width=0.4,color="black",URL="$classclang_1_1ento_1_1CheckerDocumentation.html",tooltip="This checker documents the callback functions checkers can use to implement the custom handling of th..."];
}

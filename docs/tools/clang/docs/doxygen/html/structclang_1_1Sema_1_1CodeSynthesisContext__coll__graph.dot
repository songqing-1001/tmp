digraph "clang::Sema::CodeSynthesisContext"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::Sema::CodeSynthesis\lContext",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A context in which code is being synthesized (where a source location alone is not sufficient to iden..."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" InstantiationRange" ,fontname="Helvetica"];
  Node2 [label="clang::SourceRange",height=0.2,width=0.4,color="black",URL="$classclang_1_1SourceRange.html",tooltip="A trivial tuple used to represent a source range."];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @241" ,fontname="Helvetica"];
  Node3 [label="anonymous:@241",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateArgs" ,fontname="Helvetica"];
  Node4 [label="clang::TemplateArgument",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateArgument.html",tooltip="Represents a template argument."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateArg" ,fontname="Helvetica"];
  Node5 [label="clang::TemplateArgument::TA",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nNumExpansions\nIsDefaulted" ,fontname="Helvetica"];
  Node6 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
  Node7 [label="void *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node8 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclArg" ,fontname="Helvetica"];
  Node8 [label="clang::TemplateArgument::DA",height=0.2,width=0.4,color="grey75",tooltip="The kind of template argument we're storing."];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" D" ,fontname="Helvetica"];
  Node9 [label="clang::ValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextInContextAndBits" ,fontname="Helvetica"];
  Node12 [label="PointerIntPair\< clang\l::Decl *, 3, ModuleOwnership\lKind \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node6 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nIsDefaulted" ,fontname="Helvetica"];
  Node7 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" QT" ,fontname="Helvetica"];
  Node13 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node13 [label="clang::TemplateArgument::A",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node4 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node6 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumArgs\nKind\nIsDefaulted" ,fontname="Helvetica"];
  Node14 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeOrValue" ,fontname="Helvetica"];
  Node14 [label="clang::TemplateArgument::TV",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" V" ,fontname="Helvetica"];
  Node15 [label="__UINTPTR_TYPE__",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nIsDefaulted" ,fontname="Helvetica"];
  Node16 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Integer" ,fontname="Helvetica"];
  Node16 [label="clang::TemplateArgument::I",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pVal\nVAL" ,fontname="Helvetica"];
  Node17 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node18 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @107" ,fontname="Helvetica"];
  Node18 [label="anonymous:@107",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsUnsigned\nKind\nBitWidth\nIsDefaulted" ,fontname="Helvetica"];
  Node7 -> Node16 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Type" ,fontname="Helvetica"];
  Node19 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PointOfInstantiation" ,fontname="Helvetica"];
  Node19 [label="clang::SourceLocation",height=0.2,width=0.4,color="black",URL="$classclang_1_1SourceLocation.html",tooltip="Encodes a location in the source."];
  Node20 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeductionInfo" ,fontname="Helvetica"];
  Node20 [label="clang::sema::TemplateDeductionInfo",height=0.2,width=0.4,color="black",URL="$classclang_1_1sema_1_1TemplateDeductionInfo.html",tooltip="Provides information about an attempted template argument deduction, whose success or failure was des..."];
  Node21 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" AssociatedConstraintsSatisfaction" ,fontname="Helvetica"];
  Node21 [label="clang::ConstraintSatisfaction",height=0.2,width=0.4,color="black",URL="$classclang_1_1ConstraintSatisfaction.html",tooltip="The result of a constraint satisfaction check, containing the necessary information to diagnose an un..."];
  Node22 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="FoldingSetNode",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node23 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsSatisfied\nContainsErrors" ,fontname="Helvetica"];
  Node23 [label="bool",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node24 -> Node21 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Details" ,fontname="Helvetica"];
  Node24 [label="llvm::SmallVector\<\l std::pair\< const clang\l::Expr *, Detail \>, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node25 -> Node24 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< std::pair\< const\l clang::Expr *, Detail\l \>, 4 \>" ,fontname="Helvetica"];
  Node25 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node26 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PendingDeducedPacks" ,fontname="Helvetica"];
  Node26 [label="llvm::SmallVector\<\l clang::DeducedPack\l *, 8 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node25 -> Node26 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< clang::DeducedPack\l *, 8 \>" ,fontname="Helvetica"];
  Node4 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SecondArg\nFirstArg" ,fontname="Helvetica"];
  Node27 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Param" ,fontname="Helvetica"];
  Node27 [label="PointerUnion\< TemplateType\lParmDecl *, NonTypeTemplateParm\lDecl *, TemplateTemplateParmDecl * \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node20 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CallArgIndex" ,fontname="Helvetica"];
  Node28 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @239" ,fontname="Helvetica"];
  Node28 [label="anonymous:@239",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Template" ,fontname="Helvetica"];
  Node23 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SavedInNonInstantiationSFINAEContext" ,fontname="Helvetica"];
  Node29 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind" ,fontname="Helvetica"];
  Node29 [label="SynthesisKind",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node30 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CallArgs" ,fontname="Helvetica"];
  Node30 [label="clang::Expr",height=0.2,width=0.4,color="black",URL="$classclang_1_1Expr.html",tooltip="This represents one expression."];
  Node31 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="clang::ValueStmt",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueStmt.html",tooltip="Represents a statement that could possibly have a value and type."];
  Node32 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="clang::Stmt",height=0.2,width=0.4,color="red",URL="$classclang_1_1Stmt.html",tooltip="Stmt - This represents one statement."];
  Node33 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThrowExprBits" ,fontname="Helvetica"];
  Node33 [label="clang::Stmt::CXXThrowExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThrowExprBitfields.html",tooltip=" "];
  Node34 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NullStmtBits" ,fontname="Helvetica"];
  Node34 [label="clang::Stmt::NullStmtBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1NullStmtBitfields.html",tooltip=" "];
  Node35 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ObjCIndirectCopyRestoreExprBits" ,fontname="Helvetica"];
  Node35 [label="clang::Stmt::ObjCIndirect\lCopyRestoreExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1ObjCIndirectCopyRestoreExprBitfields.html",tooltip=" "];
  Node36 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SubstNonTypeTemplateParm\lExprBits" ,fontname="Helvetica"];
  Node36 [label="clang::Stmt::SubstNonType\lTemplateParmExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1SubstNonTypeTemplateParmExprBitfields.html",tooltip=" "];
  Node37 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXThisExprBits" ,fontname="Helvetica"];
  Node37 [label="clang::Stmt::CXXThisExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXThisExprBitfields.html",tooltip=" "];
  Node38 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXBoolLiteralExprBits" ,fontname="Helvetica"];
  Node38 [label="clang::Stmt::CXXBoolLiteral\lExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXBoolLiteralExprBitfields.html",tooltip=" "];
  Node39 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CastExprBits" ,fontname="Helvetica"];
  Node39 [label="clang::Stmt::CastExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CastExprBitfields.html",tooltip=" "];
  Node40 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" UnaryExprOrTypeTraitExprBits" ,fontname="Helvetica"];
  Node40 [label="clang::Stmt::UnaryExprOr\lTypeTraitExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1UnaryExprOrTypeTraitExprBitfields.html",tooltip=" "];
  Node41 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" BinaryOperatorBits" ,fontname="Helvetica"];
  Node41 [label="clang::Stmt::BinaryOperator\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1BinaryOperatorBitfields.html",tooltip=" "];
  Node42 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXNewExprBits" ,fontname="Helvetica"];
  Node42 [label="clang::Stmt::CXXNewExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXNewExprBitfields.html",tooltip=" "];
  Node43 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CXXRewrittenBinaryOperatorBits" ,fontname="Helvetica"];
  Node43 [label="clang::Stmt::CXXRewritten\lBinaryOperatorBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CXXRewrittenBinaryOperatorBitfields.html",tooltip=" "];
  Node44 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" CallExprBits" ,fontname="Helvetica"];
  Node44 [label="clang::Stmt::CallExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1CallExprBitfields.html",tooltip=" "];
  Node45 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ExprBits" ,fontname="Helvetica"];
  Node45 [label="clang::Stmt::ExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1ExprBitfields.html",tooltip=" "];
  Node46 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" OverloadExprBits" ,fontname="Helvetica"];
  Node46 [label="clang::Stmt::OverloadExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1OverloadExprBitfields.html",tooltip=" "];
  Node47 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DependentScopeDeclRefExprBits" ,fontname="Helvetica"];
  Node47 [label="clang::Stmt::DependentScope\lDeclRefExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1DependentScopeDeclRefExprBitfields.html",tooltip=" "];
  Node48 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SourceLocExprBits" ,fontname="Helvetica"];
  Node48 [label="clang::Stmt::SourceLocExpr\lBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1SourceLocExprBitfields.html",tooltip=" "];
  Node49 -> Node32 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" PseudoObjectExprBits" ,fontname="Helvetica"];
  Node49 [label="clang::Stmt::PseudoObject\lExprBitfields",height=0.2,width=0.4,color="black",URL="$classclang_1_1Stmt_1_1PseudoObjectExprBitfields.html",tooltip=" "];
  Node96 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" SpecialMember" ,fontname="Helvetica"];
  Node96 [label="CXXSpecialMember",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumTemplateArgs\nNumCallArgs" ,fontname="Helvetica"];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Entity" ,fontname="Helvetica"];
}

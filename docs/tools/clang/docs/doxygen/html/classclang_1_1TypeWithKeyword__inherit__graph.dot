digraph "clang::TypeWithKeyword"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::TypeWithKeyword",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A helper class for Type nodes having an ElaboratedTypeKeyword."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="clang::Type",height=0.2,width=0.4,color="black",URL="$classclang_1_1Type.html",tooltip="The base class of the type hierarchy."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::ExtQualsTypeCommonBase",height=0.2,width=0.4,color="black",URL="$classclang_1_1ExtQualsTypeCommonBase.html",tooltip="Base class that is common to both the ExtQuals and Type classes, which allows QualType to access the ..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="clang::DependentNameType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentNameType.html",tooltip="Represents a qualified type name for which the type name is dependent."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="clang::DependentTemplate\lSpecializationType",height=0.2,width=0.4,color="black",URL="$classclang_1_1DependentTemplateSpecializationType.html",tooltip="Represents a template specialization type whose template cannot be resolved, e.g."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="clang::ElaboratedType",height=0.2,width=0.4,color="black",URL="$classclang_1_1ElaboratedType.html",tooltip="Represents a type that was referred to using an elaborated type keyword, e.g., struct S,..."];
}

digraph "clang::DeducedPack"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="clang::DeducedPack",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A pack that we're currently deducing."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Saved\nDeferredDeduction" ,fontname="Helvetica"];
  Node2 [label="clang::DeducedTemplateArgument",height=0.2,width=0.4,color="black",URL="$classclang_1_1DeducedTemplateArgument.html",tooltip="Captures a template argument whose value has been deduced via c++ template argument deduction."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="clang::TemplateArgument",height=0.2,width=0.4,color="black",URL="$classclang_1_1TemplateArgument.html",tooltip="Represents a template argument."];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TemplateArg" ,fontname="Helvetica"];
  Node4 [label="clang::TemplateArgument::TA",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nNumExpansions\nIsDefaulted" ,fontname="Helvetica"];
  Node5 [label="unsigned",height=0.2,width=0.4,color="black",URL="$classunsigned.html",tooltip=" "];
  Node6 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Name" ,fontname="Helvetica"];
  Node6 [label="void *",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node7 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" DeclArg" ,fontname="Helvetica"];
  Node7 [label="clang::TemplateArgument::DA",height=0.2,width=0.4,color="grey75",tooltip="The kind of template argument we're storing."];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" D" ,fontname="Helvetica"];
  Node8 [label="clang::ValueDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1ValueDecl.html",tooltip="Represent the declaration of a variable (in which case it is an lvalue) a function (in which case it ..."];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="clang::NamedDecl",height=0.2,width=0.4,color="black",URL="$classclang_1_1NamedDecl.html",tooltip="This represents a decl that may have a name."];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="clang::Decl",height=0.2,width=0.4,color="black",URL="$classclang_1_1Decl.html",tooltip="Decl - This represents one declaration (or definition), e.g."];
  Node11 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NextInContextAndBits" ,fontname="Helvetica"];
  Node11 [label="PointerIntPair\< clang\l::Decl *, 3, ModuleOwnership\lKind \>",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Access\nFromASTFile\nIdentifierNamespace\nCacheValidAndLinkage" ,fontname="Helvetica"];
  Node5 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nIsDefaulted" ,fontname="Helvetica"];
  Node6 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" QT" ,fontname="Helvetica"];
  Node12 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node12 [label="clang::TemplateArgument::A",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node3 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Args" ,fontname="Helvetica"];
  Node5 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" NumArgs\nKind\nIsDefaulted" ,fontname="Helvetica"];
  Node13 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" TypeOrValue" ,fontname="Helvetica"];
  Node13 [label="clang::TemplateArgument::TV",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node14 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" V" ,fontname="Helvetica"];
  Node14 [label="__UINTPTR_TYPE__",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node13 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Kind\nIsDefaulted" ,fontname="Helvetica"];
  Node15 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Integer" ,fontname="Helvetica"];
  Node15 [label="clang::TemplateArgument::I",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" pVal\nVAL" ,fontname="Helvetica"];
  Node16 [label="uint64_t",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node17 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" @107" ,fontname="Helvetica"];
  Node17 [label="anonymous:@107",height=0.2,width=0.4,color="grey75",tooltip=" "];
  Node5 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" IsUnsigned\nKind\nBitWidth\nIsDefaulted" ,fontname="Helvetica"];
  Node6 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Type" ,fontname="Helvetica"];
  Node1 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Outer" ,fontname="Helvetica"];
  Node5 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" Index" ,fontname="Helvetica"];
  Node18 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" New" ,fontname="Helvetica"];
  Node18 [label="llvm::SmallVector\<\l clang::DeducedTemplateArgument, 4 \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
  Node19 -> Node18 [dir="back",color="orange",fontsize="10",style="dashed",label=" \< clang::DeducedTemplate\lArgument, 4 \>" ,fontname="Helvetica"];
  Node19 [label="llvm::SmallVector\<\l T, N \>",height=0.2,width=0.4,color="black",URL="$classllvm_1_1SmallVector.html",tooltip=" "];
}

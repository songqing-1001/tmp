# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.16

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/cambricon/llvm/llvm-project/llvm

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/cambricon/llvm/buildwithdocs/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	cd /home/cambricon/llvm/buildwithdocs/build && /usr/bin/cpack --config ./CPackSourceConfig.cmake /home/cambricon/llvm/buildwithdocs/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source

.PHONY : package_source/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"LLVMAArch64AsmParser\" \"LLVMAArch64CodeGen\" \"LLVMAArch64Desc\" \"LLVMAArch64Disassembler\" \"LLVMAArch64Info\" \"LLVMAArch64Utils\" \"LLVMAMDGPUAsmParser\" \"LLVMAMDGPUCodeGen\" \"LLVMAMDGPUDesc\" \"LLVMAMDGPUDisassembler\" \"LLVMAMDGPUInfo\" \"LLVMAMDGPUTargetMCA\" \"LLVMAMDGPUUtils\" \"LLVMARMAsmParser\" \"LLVMARMCodeGen\" \"LLVMARMDesc\" \"LLVMARMDisassembler\" \"LLVMARMInfo\" \"LLVMARMUtils\" \"LLVMAVRAsmParser\" \"LLVMAVRCodeGen\" \"LLVMAVRDesc\" \"LLVMAVRDisassembler\" \"LLVMAVRInfo\" \"LLVMAggressiveInstCombine\" \"LLVMAnalysis\" \"LLVMAsmParser\" \"LLVMAsmPrinter\" \"LLVMBPFAsmParser\" \"LLVMBPFCodeGen\" \"LLVMBPFDesc\" \"LLVMBPFDisassembler\" \"LLVMBPFInfo\" \"LLVMBinaryFormat\" \"LLVMBitReader\" \"LLVMBitWriter\" \"LLVMBitstreamReader\" \"LLVMCFGuard\" \"LLVMCFIVerify\" \"LLVMCodeGen\" \"LLVMCore\" \"LLVMCoroutines\" \"LLVMCoverage\" \"LLVMDWARFLinker\" \"LLVMDWARFLinkerParallel\" \"LLVMDWP\" \"LLVMDebugInfoCodeView\" \"LLVMDebugInfoDWARF\" \"LLVMDebugInfoGSYM\" \"LLVMDebugInfoLogicalView\" \"LLVMDebugInfoMSF\" \"LLVMDebugInfoPDB\" \"LLVMDebuginfod\" \"LLVMDemangle\" \"LLVMDiff\" \"LLVMDlltoolDriver\" \"LLVMExecutionEngine\" \"LLVMExegesis\" \"LLVMExegesisAArch64\" \"LLVMExegesisMips\" \"LLVMExegesisPowerPC\" \"LLVMExegesisX86\" \"LLVMExtensions\" \"LLVMFileCheck\" \"LLVMFrontendHLSL\" \"LLVMFrontendOpenACC\" \"LLVMFrontendOpenMP\" \"LLVMFuzzMutate\" \"LLVMFuzzerCLI\" \"LLVMGlobalISel\" \"LLVMHexagonAsmParser\" \"LLVMHexagonCodeGen\" \"LLVMHexagonDesc\" \"LLVMHexagonDisassembler\" \"LLVMHexagonInfo\" \"LLVMIRPrinter\" \"LLVMIRReader\" \"LLVMInstCombine\" \"LLVMInstrumentation\" \"LLVMInterfaceStub\" \"LLVMInterpreter\" \"LLVMJITLink\" \"LLVMLTO\" \"LLVMLanaiAsmParser\" \"LLVMLanaiCodeGen\" \"LLVMLanaiDesc\" \"LLVMLanaiDisassembler\" \"LLVMLanaiInfo\" \"LLVMLibDriver\" \"LLVMLineEditor\" \"LLVMLinker\" \"LLVMLoongArchAsmParser\" \"LLVMLoongArchCodeGen\" \"LLVMLoongArchDesc\" \"LLVMLoongArchDisassembler\" \"LLVMLoongArchInfo\" \"LLVMMC\" \"LLVMMCA\" \"LLVMMCDisassembler\" \"LLVMMCJIT\" \"LLVMMCParser\" \"LLVMMIRParser\" \"LLVMMSP430AsmParser\" \"LLVMMSP430CodeGen\" \"LLVMMSP430Desc\" \"LLVMMSP430Disassembler\" \"LLVMMSP430Info\" \"LLVMMipsAsmParser\" \"LLVMMipsCodeGen\" \"LLVMMipsDesc\" \"LLVMMipsDisassembler\" \"LLVMMipsInfo\" \"LLVMNVPTXCodeGen\" \"LLVMNVPTXDesc\" \"LLVMNVPTXInfo\" \"LLVMObjCARCOpts\" \"LLVMObjCopy\" \"LLVMObject\" \"LLVMObjectYAML\" \"LLVMOption\" \"LLVMOrcJIT\" \"LLVMOrcShared\" \"LLVMOrcTargetProcess\" \"LLVMPasses\" \"LLVMPowerPCAsmParser\" \"LLVMPowerPCCodeGen\" \"LLVMPowerPCDesc\" \"LLVMPowerPCDisassembler\" \"LLVMPowerPCInfo\" \"LLVMProfileData\" \"LLVMRISCVAsmParser\" \"LLVMRISCVCodeGen\" \"LLVMRISCVDesc\" \"LLVMRISCVDisassembler\" \"LLVMRISCVInfo\" \"LLVMRISCVTargetMCA\" \"LLVMRemarks\" \"LLVMRuntimeDyld\" \"LLVMScalarOpts\" \"LLVMSelectionDAG\" \"LLVMSparcAsmParser\" \"LLVMSparcCodeGen\" \"LLVMSparcDesc\" \"LLVMSparcDisassembler\" \"LLVMSparcInfo\" \"LLVMSupport\" \"LLVMSymbolize\" \"LLVMSystemZAsmParser\" \"LLVMSystemZCodeGen\" \"LLVMSystemZDesc\" \"LLVMSystemZDisassembler\" \"LLVMSystemZInfo\" \"LLVMTableGen\" \"LLVMTableGenGlobalISel\" \"LLVMTarget\" \"LLVMTargetParser\" \"LLVMTextAPI\" \"LLVMTransformUtils\" \"LLVMVEAsmParser\" \"LLVMVECodeGen\" \"LLVMVEDesc\" \"LLVMVEDisassembler\" \"LLVMVEInfo\" \"LLVMVectorize\" \"LLVMWebAssemblyAsmParser\" \"LLVMWebAssemblyCodeGen\" \"LLVMWebAssemblyDesc\" \"LLVMWebAssemblyDisassembler\" \"LLVMWebAssemblyInfo\" \"LLVMWebAssemblyUtils\" \"LLVMWindowsDriver\" \"LLVMWindowsManifest\" \"LLVMX86AsmParser\" \"LLVMX86CodeGen\" \"LLVMX86Desc\" \"LLVMX86Disassembler\" \"LLVMX86Info\" \"LLVMX86TargetMCA\" \"LLVMXCoreCodeGen\" \"LLVMXCoreDesc\" \"LLVMXCoreDisassembler\" \"LLVMXCoreInfo\" \"LLVMXRay\" \"LLVMipo\" \"LTO\" \"MLIRAMDGPUDialect\" \"MLIRAMDGPUToROCDL\" \"MLIRAMXDialect\" \"MLIRAMXToLLVMIRTranslation\" \"MLIRAMXTransforms\" \"MLIRAffineAnalysis\" \"MLIRAffineDialect\" \"MLIRAffineToStandard\" \"MLIRAffineTransformOps\" \"MLIRAffineTransforms\" \"MLIRAffineTransformsTestPasses\" \"MLIRAffineUtils\" \"MLIRAnalysis\" \"MLIRArithAttrToLLVMConversion\" \"MLIRArithDialect\" \"MLIRArithTestPasses\" \"MLIRArithToLLVM\" \"MLIRArithToSPIRV\" \"MLIRArithTransforms\" \"MLIRArithUtils\" \"MLIRArmNeon2dToIntr\" \"MLIRArmNeonDialect\" \"MLIRArmNeonToLLVMIRTranslation\" \"MLIRArmSVEDialect\" \"MLIRArmSVEToLLVMIRTranslation\" \"MLIRArmSVETransforms\" \"MLIRAsmParser\" \"MLIRAsyncDialect\" \"MLIRAsyncToLLVM\" \"MLIRAsyncTransforms\" \"MLIRBufferizationDialect\" \"MLIRBufferizationTestPasses\" \"MLIRBufferizationToMemRef\" \"MLIRBufferizationTransformOps\" \"MLIRBufferizationTransforms\" \"MLIRBytecodeReader\" \"MLIRBytecodeWriter\" \"MLIRCAPIAsync\" \"MLIRCAPIControlFlow\" \"MLIRCAPIConversion\" \"MLIRCAPIDebug\" \"MLIRCAPIExecutionEngine\" \"MLIRCAPIFunc\" \"MLIRCAPIGPU\" \"MLIRCAPIIR\" \"MLIRCAPIInterfaces\" \"MLIRCAPILLVM\" \"MLIRCAPILinalg\" \"MLIRCAPIMLProgram\" \"MLIRCAPIPDL\" \"MLIRCAPIQuant\" \"MLIRCAPIRegisterEverything\" \"MLIRCAPISCF\" \"MLIRCAPIShape\" \"MLIRCAPISparseTensor\" \"MLIRCAPITensor\" \"MLIRCAPITransformDialect\" \"MLIRCAPITransforms\" \"MLIRCallInterfaces\" \"MLIRCastInterfaces\" \"MLIRComplexDialect\" \"MLIRComplexToLLVM\" \"MLIRComplexToLibm\" \"MLIRComplexToStandard\" \"MLIRControlFlowDialect\" \"MLIRControlFlowInterfaces\" \"MLIRControlFlowTestPasses\" \"MLIRControlFlowToLLVM\" \"MLIRControlFlowToSPIRV\" \"MLIRCopyOpInterface\" \"MLIRDLTIDialect\" \"MLIRDLTITestPasses\" \"MLIRDataLayoutInterfaces\" \"MLIRDerivedAttributeOpInterface\" \"MLIRDestinationStyleOpInterface\" \"MLIRDialect\" \"MLIRDialectUtils\" \"MLIREmitCDialect\" \"MLIRExecutionEngine\" \"MLIRExecutionEngineUtils\" \"MLIRFromLLVMIRTranslationRegistration\" \"MLIRFuncDialect\" \"MLIRFuncTestPasses\" \"MLIRFuncToLLVM\" \"MLIRFuncToSPIRV\" \"MLIRFuncTransforms\" \"MLIRGPUOps\" \"MLIRGPUTestPasses\" \"MLIRGPUToGPURuntimeTransforms\" \"MLIRGPUToNVVMTransforms\" \"MLIRGPUToROCDLTransforms\" \"MLIRGPUToSPIRV\" \"MLIRGPUToVulkanTransforms\" \"MLIRGPUTransformOps\" \"MLIRGPUTransforms\" \"MLIRIR\" \"MLIRIndexDialect\" \"MLIRIndexToLLVM\" \"MLIRInferIntRangeCommon\" \"MLIRInferIntRangeInterface\" \"MLIRInferTypeOpInterface\" \"MLIRJitRunner\" \"MLIRLLVMCommonConversion\" \"MLIRLLVMDialect\" \"MLIRLLVMIRToLLVMTranslation\" \"MLIRLLVMIRTransforms\" \"MLIRLLVMTestPasses\" \"MLIRLLVMToLLVMIRTranslation\" \"MLIRLinalgDialect\" \"MLIRLinalgTestPasses\" \"MLIRLinalgToLLVM\" \"MLIRLinalgToStandard\" \"MLIRLinalgTransformOps\" \"MLIRLinalgTransforms\" \"MLIRLinalgUtils\" \"MLIRLoopLikeInterface\" \"MLIRLoopLikeInterfaceTestPasses\" \"MLIRLspServerLib\" \"MLIRLspServerSupportLib\" \"MLIRMLProgramDialect\" \"MLIRMaskableOpInterface\" \"MLIRMaskingOpInterface\" \"MLIRMathDialect\" \"MLIRMathTestPasses\" \"MLIRMathToFuncs\" \"MLIRMathToLLVM\" \"MLIRMathToLibm\" \"MLIRMathToSPIRV\" \"MLIRMathTransforms\" \"MLIRMemRefDialect\" \"MLIRMemRefTestPasses\" \"MLIRMemRefToLLVM\" \"MLIRMemRefToSPIRV\" \"MLIRMemRefTransformOps\" \"MLIRMemRefTransforms\" \"MLIRMlirOptMain\" \"MLIRNVGPUDialect\" \"MLIRNVGPUTestPasses\" \"MLIRNVGPUToNVVM\" \"MLIRNVGPUTransforms\" \"MLIRNVGPUUtils\" \"MLIRNVVMDialect\" \"MLIRNVVMToLLVMIRTranslation\" \"MLIROpenACCDialect\" \"MLIROpenACCToLLVM\" \"MLIROpenACCToLLVMIRTranslation\" \"MLIROpenACCToSCF\" \"MLIROpenMPDialect\" \"MLIROpenMPToLLVM\" \"MLIROpenMPToLLVMIRTranslation\" \"MLIROptLib\" \"MLIRPDLDialect\" \"MLIRPDLInterpDialect\" \"MLIRPDLLAST\" \"MLIRPDLLCodeGen\" \"MLIRPDLLODS\" \"MLIRPDLToPDLInterp\" \"MLIRParallelCombiningOpInterface\" \"MLIRParser\" \"MLIRPass\" \"MLIRPresburger\" \"MLIRQuantDialect\" \"MLIRQuantUtils\" \"MLIRROCDLDialect\" \"MLIRROCDLToLLVMIRTranslation\" \"MLIRReconcileUnrealizedCasts\" \"MLIRReduce\" \"MLIRReduceLib\" \"MLIRRewrite\" \"MLIRRuntimeVerifiableOpInterface\" \"MLIRSCFDialect\" \"MLIRSCFTestPasses\" \"MLIRSCFToControlFlow\" \"MLIRSCFToGPU\" \"MLIRSCFToOpenMP\" \"MLIRSCFToSPIRV\" \"MLIRSCFTransformOps\" \"MLIRSCFTransforms\" \"MLIRSCFUtils\" \"MLIRSPIRVBinaryUtils\" \"MLIRSPIRVConversion\" \"MLIRSPIRVDeserialization\" \"MLIRSPIRVDialect\" \"MLIRSPIRVModuleCombiner\" \"MLIRSPIRVSerialization\" \"MLIRSPIRVTestPasses\" \"MLIRSPIRVToLLVM\" \"MLIRSPIRVTransforms\" \"MLIRSPIRVTranslateRegistration\" \"MLIRSPIRVUtils\" \"MLIRShapeDialect\" \"MLIRShapeOpsTransforms\" \"MLIRShapeTestPasses\" \"MLIRShapeToStandard\" \"MLIRShapedOpInterfaces\" \"MLIRSideEffectInterfaces\" \"MLIRSparseTensorDialect\" \"MLIRSparseTensorPipelines\" \"MLIRSparseTensorRuntime\" \"MLIRSparseTensorTransforms\" \"MLIRSparseTensorUtils\" \"MLIRSupport\" \"MLIRSupportIndentedOstream\" \"MLIRTableGen\" \"MLIRTargetCpp\" \"MLIRTargetLLVMIRExport\" \"MLIRTargetLLVMIRImport\" \"MLIRTblgenLib\" \"MLIRTensorDialect\" \"MLIRTensorInferTypeOpInterfaceImpl\" \"MLIRTensorTestPasses\" \"MLIRTensorTilingInterfaceImpl\" \"MLIRTensorToLinalg\" \"MLIRTensorToSPIRV\" \"MLIRTensorTransforms\" \"MLIRTensorUtils\" \"MLIRTestAnalysis\" \"MLIRTestDialect\" \"MLIRTestDynDialect\" \"MLIRTestFuncToLLVM\" \"MLIRTestIR\" \"MLIRTestPDLL\" \"MLIRTestPass\" \"MLIRTestReducer\" \"MLIRTestRewrite\" \"MLIRTestTransformDialect\" \"MLIRTestTransforms\" \"MLIRTilingInterface\" \"MLIRTilingInterfaceTestPasses\" \"MLIRToLLVMIRTranslationRegistration\" \"MLIRTosaDialect\" \"MLIRTosaTestPasses\" \"MLIRTosaToArith\" \"MLIRTosaToLinalg\" \"MLIRTosaToSCF\" \"MLIRTosaToTensor\" \"MLIRTosaTransforms\" \"MLIRTransformDialect\" \"MLIRTransformDialectTransforms\" \"MLIRTransformDialectUtils\" \"MLIRTransformUtils\" \"MLIRTransforms\" \"MLIRTranslateLib\" \"MLIRVectorDialect\" \"MLIRVectorInterfaces\" \"MLIRVectorTestPasses\" \"MLIRVectorToGPU\" \"MLIRVectorToLLVM\" \"MLIRVectorToSCF\" \"MLIRVectorToSPIRV\" \"MLIRVectorTransformOps\" \"MLIRVectorTransforms\" \"MLIRVectorUtils\" \"MLIRViewLikeInterface\" \"MLIRX86VectorDialect\" \"MLIRX86VectorToLLVMIRTranslation\" \"MLIRX86VectorTransforms\" \"Remarks\" \"Unspecified\" \"aarch64-resource-headers\" \"amdgpu-arch\" \"arm-common-resource-headers\" \"arm-resource-headers\" \"bash-autocomplete\" \"bugpoint\" \"c-index-test\" \"clang\" \"clang-check\" \"clang-cmake-exports\" \"clang-cpp\" \"clang-extdef-mapping\" \"clang-format\" \"clang-headers\" \"clang-offload-bundler\" \"clang-offload-packager\" \"clang-refactor\" \"clang-rename\" \"clang-repl\" \"clang-resource-headers\" \"clang-scan-deps\" \"clang-tblgen\" \"clangAPINotes\" \"clangARCMigrate\" \"clangAST\" \"clangASTMatchers\" \"clangAnalysis\" \"clangAnalysisFlowSensitive\" \"clangAnalysisFlowSensitiveModels\" \"clangBasic\" \"clangCodeGen\" \"clangCrossTU\" \"clangDependencyScanning\" \"clangDirectoryWatcher\" \"clangDriver\" \"clangDynamicASTMatchers\" \"clangEdit\" \"clangExtractAPI\" \"clangFormat\" \"clangFrontend\" \"clangFrontendTool\" \"clangHandleCXX\" \"clangHandleLLVM\" \"clangIndex\" \"clangIndexSerialization\" \"clangInterpreter\" \"clangLex\" \"clangParse\" \"clangRewrite\" \"clangRewriteFrontend\" \"clangSema\" \"clangSerialization\" \"clangStaticAnalyzerCheckers\" \"clangStaticAnalyzerCore\" \"clangStaticAnalyzerFrontend\" \"clangSupport\" \"clangTooling\" \"clangToolingASTDiff\" \"clangToolingCore\" \"clangToolingInclusions\" \"clangToolingInclusionsStdlib\" \"clangToolingRefactoring\" \"clangToolingSyntax\" \"clangTransformer\" \"cmake-exports\" \"core-resource-headers\" \"cuda-resource-headers\" \"diagtool\" \"doxygen-html\" \"dsymutil\" \"hexagon-resource-headers\" \"hip-resource-headers\" \"hlsl-resource-headers\" \"hmaptool\" \"libclang\" \"libclang-headers\" \"llc\" \"lli\" \"llvm-addr2line\" \"llvm-ar\" \"llvm-as\" \"llvm-bcanalyzer\" \"llvm-bitcode-strip\" \"llvm-c-test\" \"llvm-cat\" \"llvm-cfi-verify\" \"llvm-config\" \"llvm-cov\" \"llvm-cvtres\" \"llvm-cxxdump\" \"llvm-cxxfilt\" \"llvm-cxxmap\" \"llvm-debuginfo-analyzer\" \"llvm-debuginfod\" \"llvm-debuginfod-find\" \"llvm-diff\" \"llvm-dis\" \"llvm-dlltool\" \"llvm-dwarfdump\" \"llvm-dwarfutil\" \"llvm-dwp\" \"llvm-exegesis\" \"llvm-extract\" \"llvm-gsymutil\" \"llvm-headers\" \"llvm-ifs\" \"llvm-install-name-tool\" \"llvm-jitlink\" \"llvm-lib\" \"llvm-libtool-darwin\" \"llvm-link\" \"llvm-lipo\" \"llvm-lto\" \"llvm-lto2\" \"llvm-mc\" \"llvm-mca\" \"llvm-ml\" \"llvm-modextract\" \"llvm-mt\" \"llvm-nm\" \"llvm-objcopy\" \"llvm-objdump\" \"llvm-opt-report\" \"llvm-otool\" \"llvm-pdbutil\" \"llvm-profdata\" \"llvm-profgen\" \"llvm-ranlib\" \"llvm-rc\" \"llvm-readelf\" \"llvm-readobj\" \"llvm-reduce\" \"llvm-remark-size-diff\" \"llvm-remarkutil\" \"llvm-rtdyld\" \"llvm-sim\" \"llvm-size\" \"llvm-split\" \"llvm-stress\" \"llvm-strings\" \"llvm-strip\" \"llvm-symbolizer\" \"llvm-tapi-diff\" \"llvm-tblgen\" \"llvm-tli-checker\" \"llvm-undname\" \"llvm-windres\" \"llvm-xray\" \"loongarch-resource-headers\" \"mips-resource-headers\" \"mlir-cmake-exports\" \"mlir-cpu-runner\" \"mlir-headers\" \"mlir-linalg-ods-yaml-gen\" \"mlir-lsp-server\" \"mlir-opt\" \"mlir-pdll\" \"mlir-pdll-lsp-server\" \"mlir-reduce\" \"mlir-tblgen\" \"mlir-translate\" \"mlir_async_runtime\" \"mlir_c_runner_utils\" \"mlir_float16_utils\" \"mlir_runner_utils\" \"nvptx-arch\" \"obj.MLIRCAPIAsync\" \"obj.MLIRCAPIControlFlow\" \"obj.MLIRCAPIConversion\" \"obj.MLIRCAPIDebug\" \"obj.MLIRCAPIExecutionEngine\" \"obj.MLIRCAPIFunc\" \"obj.MLIRCAPIGPU\" \"obj.MLIRCAPIIR\" \"obj.MLIRCAPIInterfaces\" \"obj.MLIRCAPILLVM\" \"obj.MLIRCAPILinalg\" \"obj.MLIRCAPIMLProgram\" \"obj.MLIRCAPIPDL\" \"obj.MLIRCAPIQuant\" \"obj.MLIRCAPIRegisterEverything\" \"obj.MLIRCAPISCF\" \"obj.MLIRCAPIShape\" \"obj.MLIRCAPISparseTensor\" \"obj.MLIRCAPITensor\" \"obj.MLIRCAPITransformDialect\" \"obj.MLIRCAPITransforms\" \"opencl-resource-headers\" \"openmp-resource-headers\" \"opt\" \"opt-viewer\" \"ppc-htm-resource-headers\" \"ppc-resource-headers\" \"riscv-resource-headers\" \"runtimes\" \"sancov\" \"sanstats\" \"scan-build\" \"scan-build-py\" \"scan-view\" \"systemz-resource-headers\" \"tblgen-lsp-server\" \"utility-resource-headers\" \"ve-resource-headers\" \"verify-uselistorder\" \"webassembly-resource-headers\" \"windows-resource-headers\" \"x86-resource-headers\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	cd /home/cambricon/llvm/buildwithdocs/build && /usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package

.PHONY : package/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/cambricon/llvm/buildwithdocs/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/cambricon/llvm/buildwithdocs/build/CMakeFiles /home/cambricon/llvm/buildwithdocs/build/tools/clang/docs/CMakeFiles/progress.marks
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f CMakeFiles/Makefile2 tools/clang/docs/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/cambricon/llvm/buildwithdocs/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f CMakeFiles/Makefile2 tools/clang/docs/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f CMakeFiles/Makefile2 tools/clang/docs/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f CMakeFiles/Makefile2 tools/clang/docs/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/cambricon/llvm/buildwithdocs/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
tools/clang/docs/CMakeFiles/doxygen-clang.dir/rule:
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f CMakeFiles/Makefile2 tools/clang/docs/CMakeFiles/doxygen-clang.dir/rule
.PHONY : tools/clang/docs/CMakeFiles/doxygen-clang.dir/rule

# Convenience name for target.
doxygen-clang: tools/clang/docs/CMakeFiles/doxygen-clang.dir/rule

.PHONY : doxygen-clang

# fast build rule for target.
doxygen-clang/fast:
	cd /home/cambricon/llvm/buildwithdocs/build && $(MAKE) -f tools/clang/docs/CMakeFiles/doxygen-clang.dir/build.make tools/clang/docs/CMakeFiles/doxygen-clang.dir/build
.PHONY : doxygen-clang/fast

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... install/local"
	@echo "... edit_cache"
	@echo "... package_source"
	@echo "... install"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... package"
	@echo "... install/strip"
	@echo "... doxygen-clang"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/cambricon/llvm/buildwithdocs/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

